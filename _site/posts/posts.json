[
  {
    "path": "posts/2021-02-20-enable-utterances-with-distill/",
    "title": "Enable utterances with distill",
    "description": "Interested in giving your readers the ability to comment on your {distill} blog? Look no further than utteranc.es.",
    "author": [
      {
        "name": "Vebash Naidoo",
        "url": "https://twitter.com/Sciencificity"
      }
    ],
    "date": "2021-02-20",
    "categories": [
      "Blog Comments",
      "utterances"
    ],
    "contents": "\r\n\r\nContents\r\nAllow readers to comment on your blog posts\r\nAcknowledgements\r\nutterances\r\nHTML File in RStudio Project\r\nSomeone commented üéâ\r\n\r\n\r\n\r\n\r\n\r\n\r\nAllow readers to comment on your blog posts\r\nYou may be interested, like I was, in allowing reader comments for your {distill} blog posts.\r\nUpon researching the best way, I found that there was some negativity towards some comment platforms, and heard that utterances was a good alternative for now. Thanks go to Ma√´lle Salmon - during her session on blogging, for R-Ladies Johannesburg, she used utterances on her teaching site, and also taught us about it.\r\nAcknowledgements\r\nI‚Äôd like to make my acknowledgements up front, because this post is just a synthesis of two excellent posts from Ma√´lle Salmon and Miles McBain.\r\nGoodbye Disqus! Hello, Utterances\r\nHow I got utteranc.es working on my rmarkdown distill blog\r\nThis distill issue, was also a big help. Thanks to Taras Kaduk.\r\nReading their posts will give you the tools you need to have comments on your blog posts using utterances. The below is a summary from these resources.\r\nutterances\r\n‚Äúutterances is a comments widget built on GitHub issues‚Äù.\r\nTo set it up you need to first install the utterances GitHub app, if you have not already done so.\r\nYou then need to allow the app access to your blog repository (repo) in GitHub. My blog repo is named Blog_Vebash (inspired, eh ü§ê).\r\n\r\nIn GitHub, navigate to the Issues tab in your Blog‚Äôs repo, and open the Labels section as highlighted below.\r\n\r\nChoose New label to add a label for the issue that will serve as your blog‚Äôs comments. I added mine as:\r\n\r\n   comments üí¨\r\n \r\n\r\nHTML File in RStudio Project\r\nWe need to add an .html file that contains the information for the utterances app. Like Miles did, I named mine utterances.html.\r\nCreate an utterances.html file as shown below, with your blog repo details in the place of the one noted there. Here is mine, copied nearly directly from Mile‚Äôs.\r\n ```\r\n <script>\r\n   document.addEventListener(\"DOMContentLoaded\", function () {\r\n     if (!/posts/.test(location.pathname)) {\r\n       return;\r\n     }\r\n\r\n     var script = document.createElement(\"script\");\r\n     script.src = \"https://utteranc.es/client.js\";\r\n     script.setAttribute(\"repo\", \"sciencificity/Blog_Vebash\");\r\n     script.setAttribute(\"issue-term\", \"title\");\r\n     script.setAttribute(\"crossorigin\", \"anonymous\");\r\n     script.setAttribute(\"label\", \"comments üí¨\");\r\n     script.setAttribute(\"theme\", \"github-light\");\r\n\r\n     /* wait for article to load, append script to article element */\r\n     var observer = new MutationObserver(function (mutations, observer) {\r\n       var article = document.querySelector(\"d-article\");\r\n       if (article) {\r\n         observer.disconnect();\r\n         /* HACK: article scroll */\r\n         article.setAttribute(\"style\", \"overflow-y: hidden\");\r\n         article.appendChild(script);\r\n       }\r\n     });\r\n\r\n     observer.observe(document.body, { childList: true });\r\n   });\r\n <\/script>\r\n ```\r\n\r\nYou may also follow Taras Kaduk‚Äôs advice and amend the d-article, in the querySelector, to d-appendix, if you want your comments to appear after the appendix, instead of between the article and the appendix.\r\nPlace utterances.html in your main blog folder.\r\n\r\nIn your _site.yml file add the includes part under your output format YAML. Now comments using utterances is available for all your blog posts.\r\noutput: \r\n  distill::distill_article:\r\n    includes:\r\n      in_header: utterances.html\r\nSomeone commented üéâ\r\nTo comment a reader has to log into their GitHub account, and give the utterances app permission.\r\nWhen a reader comments it opens a comment issue in your Blog‚Äôs GitHub repo via the utterances-bot.\r\nYou may respond on your blog post directly, or in the GitHub repo‚Äôs Issues page.\r\nIf you do it on the Issues page, you may also close the issue there.\r\nAs Ma√´lle remarks the downside is perhaps that your reader needs a GitHub account. I am hopeful this will not be too big of a deterrent for readers. If it is, don‚Äôt hesitate to reach out on Twitter - I am interested to hear your opinion.\r\nHappy {distill} Blogging\r\nüï∫\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-02-20-enable-utterances-with-distill/preview2_small_.jpg",
    "last_modified": "2021-02-20T22:30:01+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-01-30-control-your-factors-with-forcats/",
    "title": "Feel like the cat that got the cream with {forcats}",
    "description": "Do mi do mi do so mi do,\n\nEvery truly cultured tidyverse stud-ent knows,\n\nYou must learn your forcats and your d-plyr.\n\n  -- Adapted from 'Scales and Arpeggios' from the Aristocats",
    "author": [
      {
        "name": "Vebash Naidoo",
        "url": "https://twitter.com/Sciencificity"
      }
    ],
    "date": "2021-01-31",
    "categories": [
      "Categorical Variables",
      "Factors",
      "forcats"
    ],
    "contents": "\r\n\r\nContents\r\nTerminology\r\nNumerical (Quantitative) data\r\nNon-Numerical (Qualitative) data\r\n\r\n{forcats} üì¶\r\nData\r\nConvert variable to factor\r\nbrewing_materials\r\nfactor() / as.factor()\r\nforcats::as_factor()\r\nfct_inorder()\r\n\r\nManually order levels\r\nfct_relevel()\r\n\r\nCollapse multiple levels\r\nbrewer_size\r\nfct_collapse()\r\n\r\nReduce categories\r\nbeer_awards\r\nfct_other()\r\nfct_lump()\r\n\r\nRe-labeling levels\r\nbrewing_materials$type\r\nfct_recode()\r\n\r\nReorder levels\r\nfct_infreq() and fct_rev()\r\nfct_reorder()\r\n\r\nCode\r\nSession Info\r\n\r\nFurther Resources\r\n\r\n\r\n\r\n\r\n\r\nblockquote {\r\n  background: #f9f9f9;\r\n  border-left: 10px solid #ccc;\r\n  margin: 1.5em 10px;\r\n  padding: 0.5em 10px;\r\n  quotes: \"\\201C\"\"\\201D\"\"\\2018\"\"\\2019\";\r\n}\r\nblockquote:before {\r\n  color: #ccc;\r\n  content: open-quote;\r\n  font-size: 4em;\r\n  line-height: 0.1em;\r\n  margin-right: 0.25em;\r\n  vertical-align: -0.4em;\r\n}\r\nblockquote p {\r\n  display: inline;\r\n}\r\n\r\n\r\nNo need to be a scared-y cat, ‚ÄúA lot of good tricks. I will show them to you. Your mother will not mind at all if I do.‚Äù\r\n\r\n\r\n‚Äî The Cat In The Hat\r\n\r\nPhoto by MIKHAIL VASILYEV on Unsplash\r\nTerminology\r\nTo set the stage, let‚Äôs talk about the types of data. These are concepts more for beginners, so if you‚Äôre familiar with these please feel free to skip ahead.\r\nWe have two types of data:\r\nNumerical data, also known as Quantitative data.\r\nNon-Numerical data, also known as Qualitative data (this is what we will be concentrating on in this post).\r\nNumerical (Quantitative) data\r\nTakes on number values:\r\nDiscrete: These are for example, count values: 0, 1, 2 - how many people took the survey, how many cats do you have in your home, how many children (aged below 18) are there in a household?\r\nContinuous: These are numbers that can take on infinite values within some range of values - percentage of survey filled by respondents (e.g.¬†21.562%, 67.893%, 90.145%), heights of siberian cats (30.167 cm, 31.458 cm, 28.624 cm).\r\n\r\nIt makes sense to take the average of numerical data, and to do other arithmetic on numerical data, such as to add, subtract etc.\r\nFor example, it‚Äôs easy to say, in our sample the tallest siberian cat is 1.291 centimetres taller than the shortest siberian cat.\r\nNon-Numerical (Qualitative) data\r\nAlso known as categorical data, since it can take on some number of distinct categories e.g.¬†eye colour (brown, blue, green, grey etc.), favourite rock band, even names if you think about it, fall under categorical data, albeit many distinct categories may be present in such a name variable, and we therefore typically treat those kinds of non-numerical fields as pure character data.\r\nThe categories are limited, and distinct - Siberian cat, Cornish Rex, Russian Blue - and may therefore be represented as numbers. In R each distinct category is referred to as a level.\r\nFor example, you may have a survey question with the following categories:\r\nCategory\r\nLevel Number\r\nVery Likely\r\n1\r\nLikely\r\n2\r\nUncertain\r\n3\r\nUnlikely\r\n4\r\nVery Unlikely\r\n5\r\nThere are 5 levels.\r\nOr, you may have a question asking a participant which of your favourite songs they enjoy the most, with the following categories:\r\nCategory\r\nLevel Number\r\nSweet Child O‚Äô Mine\r\n1\r\nSmells Like Teen Spirit\r\n2\r\nHotel California\r\n3\r\nBest of You\r\n4\r\nNumb\r\n5\r\nUnfamiliar with all of these\r\n6\r\nThere are 6 levels.\r\nThe numbers (Level Number) are basically placeholders for each category level, and is meant for us to work with it easier in a programming language. If I get the responses:\r\n\r\n\r\n      Numb, Smells Like Teen Spirit, Sweet Child O' Mine, Smells Like Teen Spirit, Numb,\r\n      Smells Like Teen Spirit, Sweet Child O' Mine, Numb, Smells Like Teen Spirit, Numb,\r\n      Sweet Child O' Mine, Sweet Child O' Mine, Smells Like Teen Spirit\r\n      \r\n      I.e. 5, 2, 1, 2, 5, 2, 1, 5, 2, 5, 1, 1, 2\r\n      \r\n\r\nI can‚Äôt say Numb is 4x better, or 4x worse than Sweet Child O‚Äô Mine (in other words, it makes no sense to take Level Number of Numb [5], and subtract Level Number of Sweet Child ‚ÄôO Mine [1]).\r\nNeither can I say that Hotel California is the average category chosen (notice it was not chosen once) but if I take the average of the numerical placeholders for the responses received, I would get 2.62 which is 3 if I round up. In other words, we can‚Äôt understand what the ‚Äúaverage‚Äù song is.\r\nSo we have seen that it does not make sense to do arithmetic on these variables. The distance between the categories is not something that can be measured.\r\nWe can count each category, and understand that Smells Like Teen Spirit was the most popular among respondents.\r\nCategorical data may be:\r\nUnordered, often refered to merely as Categorical data, or also known as Nominal data. For example, if your question is ‚ÄúWhat's your favourite Altoids flavour?‚Äù with the following options, while you may rank Cinnamon above Wintergreen there is no order to these categories! üòÅ.\r\nFave Flavour\r\nLevel Number\r\nPeppermint\r\n1\r\nWintergreen\r\n2\r\nCinnamon\r\n3\r\nSpearmint\r\n4\r\nLiqourice\r\n5\r\nNone of these\r\n6\r\nOrdered, and hence called Ordinal data. Here‚Äôs an example using age categories - these are not numerical data, because the Level Number is merely a placeholder for the category, and we can‚Äôt do arithmetic on these. This is an Ordinal variable however, since there is some order to the distinct categories shown in Age Range.\r\nAge Range\r\nLevel Number\r\nYounger than 21\r\n1\r\n21-30\r\n2\r\n31-45\r\n3\r\n46-55\r\n4\r\nOlder than 55\r\n5\r\n\r\n{forcats} üì¶\r\nThe forcats üì¶ is meant to handle factors which is R‚Äôs data type for categorical data. forcats is for categorical data, and is an anagram for factors üÜí.\r\nThe functions in the package start with fct_.\r\nThere is non-numeric data where it is useful to work with the data as factors (age-ranges, occupation, etc.), but we must also keep in mind that some non-numeric data should be kept as character data.\r\nWe‚Äôre going to work with non-numeric data that may be treated as factors in this post, and learn how to use the forcats üì¶ to make that task easier for us.\r\nData\r\nWe‚Äôre going to use the data from the awesome TidyTuesday Project ‚ùáÔ∏è:\r\nBeer production data from 2020-03-31\r\nBeer awards data from 2020-10-20.\r\n\r\n\r\nlibrary(tidyverse)\r\nbrewing_materials <-\r\n   read_csv(\r\n    # hacky solution to show readers the full path of file\r\n    # str_glue just pastes the various strings next to each other\r\n    str_glue('https://raw.githubusercontent.com/rfordatascience/',\r\n            'tidytuesday/master/data/2020/2020-03-31/',\r\n            'brewing_materials.csv'))\r\nbeer_taxed <- \r\n    read_csv(\r\n     str_glue('https://raw.githubusercontent.com/rfordatascience/', \r\n              'tidytuesday/master/data/2020/2020-03-31/',\r\n              'beer_taxed.csv'))\r\n\r\nbrewer_size <- \r\n    read_csv(\r\n     str_glue('https://raw.githubusercontent.com/rfordatascience/',\r\n     'tidytuesday/master/data/2020/2020-03-31/',\r\n     'brewer_size.csv'))\r\n\r\nbeer_states <- \r\n    read_csv(\r\n     str_glue('https://raw.githubusercontent.com/rfordatascience/', \r\n     'tidytuesday/master/data/2020/2020-03-31/',\r\n     'beer_states.csv'))\r\n\r\nbeer_awards <- \r\n    read_csv(\r\n     str_glue('https://raw.githubusercontent.com/rfordatascience/', \r\n     'tidytuesday/master/data/2020/2020-10-20/',\r\n     'beer_awards.csv'))\r\n\r\n\r\n\r\nLet‚Äôs have a look at the data - here we‚Äôre showing a sample from each table.\r\n\r\n\r\nShow code\r\n\r\nbrewing_materials %>% \r\n  sample_n(50) %>% \r\n  DT::datatable(filter = 'top', list(scrollX = TRUE,\r\n                     pageLength = 5),\r\n    caption = htmltools::tags$caption(\r\n      style = 'caption-side: bottom; text-align: center;',\r\n     'Table Name: ', htmltools::em('Brewing Materials')\r\n  ))\r\n\r\n\r\n\r\n{\"x\":{\"filter\":\"top\",\"filterHTML\":\"<tr>\\n  <td><\\/td>\\n  <td data-type=\\\"disabled\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none; position: absolute; width: 200px;\\\">\\n      <div data-min=\\\"2008\\\" data-max=\\\"2017\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none; position: absolute; width: 200px;\\\">\\n      <div data-min=\\\"1\\\" data-max=\\\"12\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none; position: absolute; width: 200px;\\\">\\n      <div data-min=\\\"1791\\\" data-max=\\\"618722343\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none; position: absolute; width: 200px;\\\">\\n      <div data-min=\\\"21112\\\" data-max=\\\"613851539\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none; position: absolute; width: 200px;\\\">\\n      <div data-min=\\\"860400\\\" data-max=\\\"6117407638\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none; position: absolute; width: 200px;\\\">\\n      <div data-min=\\\"841050\\\" data-max=\\\"6005773414\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n<\\/tr>\",\"caption\":\"<caption style=\\\"caption-side: bottom; text-align: center;\\\">\\n  Table Name: \\n  <em>Brewing Materials<\\/em>\\n<\\/caption>\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\"],[\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\",\"Pounds of Materials Used\"],[\"Non-Grain Products\",\"Non-Grain Products\",\"Grain Products\",\"Total Grain products\",\"Non-Grain Products\",\"Grain Products\",\"Total Grain products\",\"Non-Grain Products\",\"Grain Products\",\"Non-Grain Products\",\"Non-Grain Products\",\"Total Used\",\"Total Used\",\"Grain Products\",\"Non-Grain Products\",\"Grain Products\",\"Grain Products\",\"Total Used\",\"Grain Products\",\"Non-Grain Products\",\"Total Grain products\",\"Non-Grain Products\",\"Non-Grain Products\",\"Non-Grain Products\",\"Total Used\",\"Grain Products\",\"Non-Grain Products\",\"Grain Products\",\"Grain Products\",\"Total Non-Grain products\",\"Grain Products\",\"Grain Products\",\"Non-Grain Products\",\"Non-Grain Products\",\"Total Grain products\",\"Grain Products\",\"Grain Products\",\"Grain Products\",\"Non-Grain Products\",\"Total Grain products\",\"Grain Products\",\"Grain Products\",\"Non-Grain Products\",\"Non-Grain Products\",\"Grain Products\",\"Grain Products\",\"Non-Grain Products\",\"Grain Products\",\"Grain Products\",\"Non-Grain Products\"],[2008,2016,2011,2008,2015,2013,2008,2016,2012,2010,2015,2013,2016,2008,2017,2009,2013,2013,2011,2012,2013,2008,2010,2011,2008,2011,2016,2008,2010,2009,2009,2014,2009,2008,2013,2017,2012,2016,2015,2010,2008,2016,2009,2009,2010,2017,2014,2011,2011,2015],[1,7,2,12,4,1,9,6,11,10,10,8,7,4,8,1,6,3,10,3,12,2,3,11,4,6,3,3,3,4,8,10,10,4,10,4,1,12,7,10,2,2,1,7,11,10,3,3,10,1],[\"Sugar and syrups\",\"Hops (used as extracts)\",\"Wheat and wheat products\",\"Total Grain products\",\"Hops (dry)\",\"Barley and barley products\",\"Total Grain products\",\"Other\",\"Corn and corn products\",\"Hops (used as extracts)\",\"Hops (used as extracts)\",\"Total Used\",\"Total Used\",\"Barley and barley products\",\"Hops (dry)\",\"Corn and corn products\",\"Malt and malt products\",\"Total Used\",\"Corn and corn products\",\"Hops (dry)\",\"Total Grain products\",\"Hops (used as extracts)\",\"Hops (used as extracts)\",\"Hops (dry)\",\"Total Used\",\"Rice and rice products\",\"Hops (used as extracts)\",\"Corn and corn products\",\"Malt and malt products\",\"Total Non-Grain products\",\"Corn and corn products\",\"Malt and malt products\",\"Hops (dry)\",\"Sugar and syrups\",\"Total Grain products\",\"Barley and barley products\",\"Wheat and wheat products\",\"Rice and rice products\",\"Other\",\"Total Grain products\",\"Wheat and wheat products\",\"Wheat and wheat products\",\"Sugar and syrups\",\"Hops (dry)\",\"Corn and corn products\",\"Malt and malt products\",\"Hops (used as extracts)\",\"Corn and corn products\",\"Wheat and wheat products\",\"Hops (used as extracts)\"],[78358212,1791,955671,437878833,2184404,7749970,494237495,1395602,44981825,293914,330925,564611175,13225686,3912088,157967,63115693,370101067,578327740,48090884,10288665,412213578,476688,320406,8455615,618722343,69701464,6977,60800221,366733254,83473844,57684547,329412159,1326445,81199989,441169533,142779,1319508,15038,25049222,447365838,1240983,89222,67834569,7309199,47348859,8675502,351254,61094976,1555618,298514],[83664091,33670,1683401,435776224,9581872,5830442,498722321,3778016,53879230,302264,3311741,591155882,109747913,2719882,1102861,57563571,389769307,613851539,51427974,10797329,420542020,429884,382897,7727370,608414486,66627541,21112,39788598,380133298,89900402,64953210,312261696,3775472,106182588,444322528,2227114,1232206,7490145,126259879,448685527,1074183,231034,78575422,1753906,47018983,91680339,382793,60991969,1053279,298514],[78358212,null,2166958,6117407638,null,7749970,4764211109,null,636743799,3751314,null,4629959569,null,17894247,null,63115693,2037533510,1640421122,524704957,21369040,5455390430,1098600,860400,95677718,2414091059,410453892,null,177877027,1002631806,313649339,508678313,3370629014,53227307,318877766,4659577259,null,1319508,null,null,4870374429,2418369,null,67834569,39704504,652254266,null,948662,173729653,20519590,null],[83664091,null,3097736,6005773414,null,5830442,4657121462,null,578639214,3566970,null,4721232430,null,14679712,null,57563571,2124394566,1674268636,604900803,24500667,5675638305,841050,1053577,84351150,2375704354,370610846,null,122375049,1080736584,347282251,500320386,3351689883,49463068,382334033,4841976781,null,1232206,null,null,5030089007,2269564,null,78575422,35887416,659865353,null,1031236,172184127,19583666,null]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>data_type<\\/th>\\n      <th>material_type<\\/th>\\n      <th>year<\\/th>\\n      <th>month<\\/th>\\n      <th>type<\\/th>\\n      <th>month_current<\\/th>\\n      <th>month_prior_year<\\/th>\\n      <th>ytd_current<\\/th>\\n      <th>ytd_prior_year<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"scrollX\":true,\"pageLength\":5,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[3,4,6,7,8,9]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"orderCellsTop\":true,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}\r\nShow code\r\n\r\nbeer_taxed %>% \r\n  head(50) %>% \r\n  DT::datatable(filter = 'top', list(scrollX = TRUE,\r\n                     pageLength = 5),    \r\n    caption = htmltools::tags$caption(\r\n      style = 'caption-side: bottom; text-align: center;',\r\n     'Table Name: ', htmltools::em('Beer Taxed')\r\n  ))\r\n\r\n\r\n\r\n{\"x\":{\"filter\":\"top\",\"filterHTML\":\"<tr>\\n  <td><\\/td>\\n  <td data-type=\\\"disabled\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"disabled\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none; position: absolute; width: 200px;\\\">\\n      <div data-min=\\\"1\\\" data-max=\\\"5\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none; position: absolute; width: 200px;\\\">\\n      <div data-min=\\\"0\\\" data-max=\\\"18269043\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none; position: absolute; width: 200px;\\\">\\n      <div data-min=\\\"0\\\" data-max=\\\"18465892\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none; position: absolute; width: 200px;\\\">\\n      <div data-min=\\\"0\\\" data-max=\\\"84810051\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none; position: absolute; width: 200px;\\\">\\n      <div data-min=\\\"0\\\" data-max=\\\"83798440\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"disabled\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n<\\/tr>\",\"caption\":\"<caption style=\\\"caption-side: bottom; text-align: center;\\\">\\n  Table Name: \\n  <em>Beer Taxed<\\/em>\\n<\\/caption>\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\"],[\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\",\"Barrels Produced\"],[\"Totals\",\"Taxable\",\"Taxable\",\"Taxable\",\"Sub Total Taxable\",\"Tax Free\",\"Tax Free\",\"Tax Free\",\"Sub Total Tax-Free\",\"Totals\",\"Totals\",\"Totals\",\"Taxable\",\"Taxable\",\"Taxable\",\"Sub Total Taxable\",\"Tax Free\",\"Tax Free\",\"Tax Free\",\"Sub Total Tax-Free\",\"Totals\",\"Totals\",\"Totals\",\"Taxable\",\"Taxable\",\"Taxable\",\"Sub Total Taxable\",\"Tax Free\",\"Tax Free\",\"Tax Free\",\"Sub Total Tax-Free\",\"Totals\",\"Totals\",\"Totals\",\"Taxable\",\"Taxable\",\"Taxable\",\"Sub Total Taxable\",\"Tax Free\",\"Tax Free\",\"Tax Free\",\"Sub Total Tax-Free\",\"Totals\",\"Totals\",\"Totals\",\"Taxable\",\"Taxable\",\"Taxable\",\"Sub Total Taxable\",\"Tax Free\"],[2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008,2008],[1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5],[\"Production\",\"In bottles and cans\",\"In barrels and kegs\",\"Tax Determined, Premises Use\",\"Sub Total Taxable\",\"For export\",\"For vessels and aircraft\",\"Consumed on brewery premises\",\"Sub Total Tax-Free\",\"Total Removals\",\"Stocks On Hand end-of-month:\",\"Production\",\"In bottles and cans\",\"In barrels and kegs\",\"Tax Determined, Premises Use\",\"Sub Total Taxable\",\"For export\",\"For vessels and aircraft\",\"Consumed on brewery premises\",\"Sub Total Tax-Free\",\"Total Removals\",\"Stocks On Hand end-of-month:\",\"Production\",\"In bottles and cans\",\"In barrels and kegs\",\"Tax Determined, Premises Use\",\"Sub Total Taxable\",\"For export\",\"For vessels and aircraft\",\"Consumed on brewery premises\",\"Sub Total Tax-Free\",\"Total Removals\",\"Stocks On Hand end-of-month:\",\"Production\",\"In bottles and cans\",\"In barrels and kegs\",\"Tax Determined, Premises Use\",\"Sub Total Taxable\",\"For export\",\"For vessels and aircraft\",\"Consumed on brewery premises\",\"Sub Total Tax-Free\",\"Total Removals\",\"Stocks On Hand end-of-month:\",\"Production\",\"In bottles and cans\",\"In barrels and kegs\",\"Tax Determined, Premises Use\",\"Sub Total Taxable\",\"For export\"],[16211480,13222104,1371239,7426,14600769,262985,0,708,263693,14864462,10230147,15690494,13051864,1250974,7558,14310396,286593,0,671,287264,14597660,10497860,17367476,13901582,1449849,88816,15440247,309529,3,7417,316949,15757196,11192957,17254160,14361125,1457124,8561,15826810,361949,0,821,362770,16189580,11250055,18269043,15421462,1489290,8720,16919472,356217],[15880125,12824278,1357372,8419,14190069,268473,0,885,269358,14459427,10614074,15284087,12209114,1197553,8090,13414757,266301,0,732,267033,13681790,11277649,17388588,14386284,1514744,88291,15989319,306542,0,8624,315166,16304485,11406260,16777943,13720960,1323587,8230,15052777,325058,0,922,325980,15378757,11705240,18465892,15480560,1538454,8786,17027800,372808],[16211480,13222104,1371239,7426,14600769,262985,0,708,263693,14864462,10230147,31909489,26279336,2622225,15035,28916596,550005,0,1379,551384,29467980,20745169,49277784,40182359,4072222,103886,44358467,859534,3,8796,868333,45226800,31929810,66535007,54544594,5531773,113354,60189721,1221483,3,9605,1231091,61420812,43182802,84810051,69966780,7023496,123576,77113852,1577700],[15880125,12824278,1357372,8419,14190069,268473,0,885,269358,14459427,10614074,31164212,25033392,2554925,16509,27604826,534774,0,1617,536391,28141217,21891723,48552848,39419676,4069669,104834,43594179,841316,0,10241,851557,44445736,33298974,65331867,53140372,5394086,113569,58648027,1166374,0,11163,1177537,59825564,45004356,83798440,68620932,6932676,122701,75676309,1539182],[\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\",\"$7/$18 per barrel\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>data_type<\\/th>\\n      <th>tax_status<\\/th>\\n      <th>year<\\/th>\\n      <th>month<\\/th>\\n      <th>type<\\/th>\\n      <th>month_current<\\/th>\\n      <th>month_prior_year<\\/th>\\n      <th>ytd_current<\\/th>\\n      <th>ytd_prior_year<\\/th>\\n      <th>tax_rate<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"scrollX\":true,\"pageLength\":5,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[3,4,6,7,8,9]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"orderCellsTop\":true,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}\r\nShow code\r\n\r\nbrewer_size %>% \r\n  sample_n(50) %>% \r\n  DT::datatable(filter = 'top', list(scrollX = TRUE,\r\n                     pageLength = 5),\r\n    caption = htmltools::tags$caption(\r\n      style = 'caption-side: bottom; text-align: center;',\r\n     'Table Name: ', htmltools::em('Brewer Size')\r\n  ))\r\n\r\n\r\n\r\n{\"x\":{\"filter\":\"top\",\"filterHTML\":\"<tr>\\n  <td><\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none; position: absolute; width: 200px;\\\">\\n      <div data-min=\\\"2009\\\" data-max=\\\"2019\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none; position: absolute; width: 200px;\\\">\\n      <div data-min=\\\"4\\\" data-max=\\\"5648\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none; position: absolute; width: 200px;\\\">\\n      <div data-min=\\\"3.7\\\" data-max=\\\"196147202.311\\\" data-scale=\\\"15\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none; position: absolute; width: 200px;\\\">\\n      <div data-min=\\\"14711.36\\\" data-max=\\\"179796743.661\\\" data-scale=\\\"11\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none; position: absolute; width: 200px;\\\">\\n      <div data-min=\\\"119\\\" data-max=\\\"6814178\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n<\\/tr>\",\"caption\":\"<caption style=\\\"caption-side: bottom; text-align: center;\\\">\\n  Table Name: \\n  <em>Brewer Size<\\/em>\\n<\\/caption>\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\"],[2015,2015,2012,2016,2015,2016,2012,2017,2017,2017,2018,2019,2011,2018,2014,2011,2015,2019,2012,2010,2009,2012,2013,2013,2009,2019,2019,2010,2019,2018,2014,2018,2018,2014,2013,2011,2012,2012,2017,2013,2010,2015,2016,2014,2010,2009,2009,2018,2012,2013],[\"7,501 to 15,000 Barrels\",\"1 to 1,000 Barrels\",\"Total\",\"1,001 to 7,500 Barrels\",\"30,001 to 60,000 Barrels\",\"500,001 to 1,000,000 Barrels\",\"100,001 to 500,000 Barrels\",\"Total\",\"Under 1 Barrel\",\"1,000,001 to 1,999,999 Barrels\",\"7,501 to 15,000 Barrels\",\"100,001 to 500,000 Barrels\",\"15,001 to 30,000 Barrels\",\"15,001 to 30,000 Barrels\",\"100,001 to 500,000 Barrels\",\"Total\",\"Total\",\"1 to 1,000 Barrels\",\"15,001 to 30,000 Barrels\",\"1,000,000 to 6,000,000 Barrels\",\"Under 1 Barrel\",\"60,001 to 100,000 Barrels\",\"1,000,001 to 1,999,999 Barrels\",\"1 to 1,000 Barrels\",\"1 to 1,000 Barrels\",\"15,001 to 30,000 Barrels\",\"500,001 to 1,000,000 Barrels\",\"30,001 to 60,000 Barrels\",\"30,001 to 60,000 Barrels\",\"6,000,001 Barrels and Over\",\"30,001 to 60,000 Barrels\",\"Under 1 Barrel\",\"500,001 to 1,000,000 Barrels\",\"6,000,001 Barrels and Over\",\"2,000,000 to 6,000,000 Barrels\",\"2,000,000 to 6,000,000 Barrels\",\"500,001 to 1,000,000 Barrels\",\"1 to 1,000 Barrels\",\"1 to 1,000 Barrels\",\"60,001 to 100,000 Barrels\",\"15,001 to 30,000 Barrels\",\"60,001 to 100,000 Barrels\",\"6,000,001 Barrels and Over\",\"500,001 to 1,000,000 Barrels\",\"100,001 to 500,000 Barrels\",\"100,001 to 500,000 Barrels\",\"500,001 to 1,000,000 Barrels\",\"1 to 1,000 Barrels\",\"7,501 to 15,000 Barrels\",\"500,001 to 1,000,000 Barrels\"],[133,2812,2430,935,56,6,39,5648,553,4,155,42,42,102,44,2093,4504,4577,44,5,195,20,4,1923,1037,102,12,38,64,15,62,164,10,15,4,5,7,1604,3646,24,40,24,14,6,32,27,7,4241,77,7],[1427754.07,835835.99,196147202.311,2461722.99,2453623.13,4293996.9,7810357.34,185581837.2,6.73,4868564.08,1618340.38,8373874.82,893273.36,2124238.48,9093514.82,192746822.234,191113018.04,1321901.272,913884.27,15450769.1,3.7,1468172.46,4821249.3,602141.422999999,400401.17,2166277.84,7585071.9,1544051.1,2675606.37,131336734.02,2639561.553,7.47,5859956.25,138677888.13,13394409.41,17703591,4654830.64,516746.493,1073977.86,1824548.27,911065.75,1887855.83,131659359.17,3836841.48,6123725.23,5422155.72,4831385.68,1238268.9,821100.636,4797758.09],[1203851.81,733307.88,179796743.661,2282897.14,2185447.02,4014943.39,6085448.83,170760628.18,107494.1,4897090.56,1406728.12,7139034.688,710825.62,1871360.04,7116673.804,177587377.121,174844004.58,1293960.317,764190.6,14777149.88,14711.36,1250720.93,4665737.17,528020.279,371872.85,1891960.763,5979731.09,1256492.475,2906735.837,124471154.47,2301357.795,142501.39,4794122.05,127713535.8,12862214.07,16695626.31,3809078.87,459217.492,1003361.14,1608488.44,781016.15,1583089.18,119774531.97,3593230.98,5127607.785,4469288.93,4535659.48,1169873.68,715087.67,4476211],[25574,1892,5031215,13608,29356,4748,236207,6814178,503,4110,3983,80432,40413,15417,344448,4426027,6211297,2296,13281,37401,119,97318,35344,922,123,23889,137599,42409,39494,5749122,40785,274,111188,4331255,495472,84271,4634,1220,790,24431,19077,23158,5066076,9185,254925,128000,21563,2299,11054,4972]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>year<\\/th>\\n      <th>brewer_size<\\/th>\\n      <th>n_of_brewers<\\/th>\\n      <th>total_barrels<\\/th>\\n      <th>taxable_removals<\\/th>\\n      <th>total_shipped<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"scrollX\":true,\"pageLength\":5,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,3,4,5,6]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"orderCellsTop\":true,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}\r\nShow code\r\n\r\nbeer_states %>% \r\n  sample_n(50) %>% \r\n  DT::datatable(filter = 'top', list(scrollX = TRUE,\r\n                     pageLength = 5),\r\n    caption = htmltools::tags$caption(\r\n      style = 'caption-side: bottom; text-align: center;',\r\n     'Table Name: ', htmltools::em('Beer States')\r\n  ))\r\n\r\n\r\n\r\n{\"x\":{\"filter\":\"top\",\"filterHTML\":\"<tr>\\n  <td><\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none; position: absolute; width: 200px;\\\">\\n      <div data-min=\\\"2008\\\" data-max=\\\"2019\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none; position: absolute; width: 200px;\\\">\\n      <div data-min=\\\"547.69\\\" data-max=\\\"159708194.46\\\" data-scale=\\\"12\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n<\\/tr>\",\"caption\":\"<caption style=\\\"caption-side: bottom; text-align: center;\\\">\\n  Table Name: \\n  <em>Beer States<\\/em>\\n<\\/caption>\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\"],[\"WV\",\"MS\",\"AL\",\"UT\",\"WA\",\"PA\",\"DE\",\"NV\",\"AK\",\"LA\",\"GA\",\"IN\",\"MI\",\"MT\",\"AL\",\"RI\",\"DE\",\"VT\",\"NM\",\"TX\",\"IN\",\"TX\",\"WI\",\"CT\",\"DC\",\"ME\",\"NE\",\"AR\",\"KY\",\"MI\",\"SC\",\"NH\",\"total\",\"KS\",\"HI\",\"DC\",\"IL\",\"LA\",\"MN\",\"HI\",\"NE\",\"PA\",\"MS\",\"IN\",\"WA\",\"VA\",\"ID\",\"AL\",\"MI\",\"MO\"],[2011,2018,2016,2010,2011,2009,2015,2010,2012,2012,2015,2008,2019,2015,2015,2015,2008,2018,2016,2010,2015,2017,2011,2019,2008,2012,2012,2013,2012,2009,2016,2019,2011,2011,2010,2009,2013,2008,2018,2017,2009,2011,2019,2017,2009,2012,2014,2010,2016,2010],[3264.98,3666.89,23810.78,28681.77,218671.75,953285.76,83489.86,15618.93,2312.43,56196.18,463799.45,8775.27,348934.58,71159.76,11465.23,3969.48,25709.65,19980.23,14793.89,1143881.77,55466.71,143879.86,9002320.57,46190.93,null,97285.94,6780.45,558.14,70540.28,95754.44,30163.3,50049.94,159708194.46,9179.79,15488.55,629.61,68420.11,1421.57,442264.6,32067.39,2575.65,3128166.8,11912.45,63530.02,155111.48,1175467.01,4573.66,547.69,329891.64,13289.38],[\"Kegs and Barrels\",\"Kegs and Barrels\",\"On Premises\",\"Bottles and Cans\",\"Kegs and Barrels\",\"Kegs and Barrels\",\"Kegs and Barrels\",\"On Premises\",\"On Premises\",\"Kegs and Barrels\",\"Kegs and Barrels\",\"On Premises\",\"Kegs and Barrels\",\"Bottles and Cans\",\"Kegs and Barrels\",\"Kegs and Barrels\",\"Kegs and Barrels\",\"On Premises\",\"On Premises\",\"Kegs and Barrels\",\"Bottles and Cans\",\"On Premises\",\"Bottles and Cans\",\"Kegs and Barrels\",\"Kegs and Barrels\",\"Kegs and Barrels\",\"Bottles and Cans\",\"On Premises\",\"Bottles and Cans\",\"Bottles and Cans\",\"On Premises\",\"On Premises\",\"Bottles and Cans\",\"Bottles and Cans\",\"Kegs and Barrels\",\"Bottles and Cans\",\"Kegs and Barrels\",\"On Premises\",\"Bottles and Cans\",\"Kegs and Barrels\",\"Bottles and Cans\",\"Bottles and Cans\",\"On Premises\",\"Kegs and Barrels\",\"Kegs and Barrels\",\"Kegs and Barrels\",\"On Premises\",\"Kegs and Barrels\",\"Kegs and Barrels\",\"On Premises\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>state<\\/th>\\n      <th>year<\\/th>\\n      <th>barrels<\\/th>\\n      <th>type<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"scrollX\":true,\"pageLength\":5,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"orderCellsTop\":true,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}\r\nShow code\r\n\r\nbeer_awards %>% \r\n  sample_n(50) %>% \r\n  DT::datatable(filter = 'top', list(scrollX = TRUE,\r\n                     pageLength = 5),\r\n    caption = htmltools::tags$caption(\r\n      style = 'caption-side: bottom; text-align: center;',\r\n     'Table Name: ', htmltools::em('Beer Awards')\r\n  ))\r\n\r\n\r\n\r\n{\"x\":{\"filter\":\"top\",\"filterHTML\":\"<tr>\\n  <td><\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none; position: absolute; width: 200px;\\\">\\n      <div data-min=\\\"1987\\\" data-max=\\\"2020\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n<\\/tr>\",\"caption\":\"<caption style=\\\"caption-side: bottom; text-align: center;\\\">\\n  Table Name: \\n  <em>Beer Awards<\\/em>\\n<\\/caption>\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\"],[\"Silver\",\"Silver\",\"Bronze\",\"Gold\",\"Silver\",\"Gold\",\"Bronze\",\"Silver\",\"Bronze\",\"Silver\",\"Silver\",\"Gold\",\"Bronze\",\"Silver\",\"Gold\",\"Silver\",\"Bronze\",\"Silver\",\"Bronze\",\"Gold\",\"Silver\",\"Gold\",\"Bronze\",\"Bronze\",\"Bronze\",\"Gold\",\"Bronze\",\"Silver\",\"Silver\",\"Bronze\",\"Silver\",\"Bronze\",\"Gold\",\"Bronze\",\"Bronze\",\"Gold\",\"Silver\",\"Silver\",\"Silver\",\"Gold\",\"Gold\",\"Bronze\",\"Silver\",\"Gold\",\"Bronze\",\"Gold\",\"Silver\",\"Gold\",\"Silver\",\"Bronze\"],[\"Control ALT\",\"Alright Already Amber\",\"Top Heavy Hefeweizen\",\"Red Dawn\",\"Mirage\",\"Defender\",\"Samuel Adams Pale Ale\",\"Nigel's ESB\",\"BoHo Pilsner\",\"Wallops Island\",\"Victoria's Triple Belgian\",\"MacPelican's Wee Heavy Strong Scotch Ale\",\"Roes Red\",\"Purple Line\",\"Goat Rancher\",\"Citra Pils\",\"Aud Blonde\",\"Magnum\",\"Ryan's Irish Stout\",\"Bitch Creek ESB\",\"Zebulon's Peated Porter\",\"Prairie Madness\",\"Time of the Season\",\"Yeah Buoy IPL\",\"Cherry Wheat\",\"Old West Amber\",\"Oompa Loompa\",\"Extra Pale Ale\",\"Vlad the Imp Aler\",\"Cinder Beast\",\"Coffee Monster\",\"Festie\",\"Get Up Offa That Brown\",\"IPA\",\"The Devil's Brew\",\"Sunshine Express\",\"Miller Lite\",\"Widmer Alt\",\"Northern Light\",\"Igniter Pale Ale\",\"Hellshire III\",\"Riley's Irish Red\",\"Itsy Bits\",\"Mt. Whitney\",\"Enterprise IPA\",\"Scrimshaw Beer\",\"Staghorn Octoberfest\",\"Deep Roots\",\"Seismic Tremor\",\"Demolition Ale\"],[\"Devil's Logic Brewing\",\"O'Fallon Brewery\",\"Piece Brewery\",\"Carson's Brewery\",\"New Terrain Brewing Co.\",\"Haymarket Pub &amp; Brewery\",\"Boston Beer Co.\",\"Steelhead Brewing Co.\",\"Nodding Heading Brewing Co.\",\"Rocket Frog Brewing Co.\",\"Humboldt Brewery\",\"Pelican Pub &amp; Brewery\",\"Pure Project\",\"Smylie Brothers Brewing Co.\",\"SandLot (The)\",\"Saint Archer Brewing Co.\",\"Russian River Brewing Co.\",\"Miller Brewing Co.\",\"Jones Street Brewery\",\"Grand Teton Brewing Co.\",\"Phantom Canyon Brewing Co.\",\"Hailstorm Brewing Co.\",\"Upslope Brewing Co.\",\"Logboat Brewing Co.\",\"Sierra Blanca Brewing Co.\",\"Flying Aces Brewing Co.\",\"Rocky River Brewing Co. - Ohio\",\"Summit Brewing Co.\",\"Cascade Brewery Co. LLC\",\"Sunriver Brewing\",\"Pizza Port - Carlsbad\",\"Starr Hill Pilot Brewery &amp;amp; Side Stage\",\"Golden Road Brewing\",\"SLO Brewing Co.\",\"Devil Mountain Brewery\",\"Butcherknife Brewing Co.\",\"Miller Brewing Co.\",\"Widmer Brothers Brewing Co.\",\"Long Trail Brewing Co.\",\"Pumphouse Brewery &amp; Restaurant\",\"Oakshire Brewing\",\"Packinghouse Brewing Co.\",\"WeldWerks Brewing Co.\",\"Butterfield Brewing Co.\",\"Dry Dock Brewing Co. - North Dock\",\"North Coast Brewing Co. Inc\",\"New Glarus Brewing Co.\",\"Three Weavers Brewing Co.\",\"Seismic Brewing Co.\",\"Elliott Bay Brewery Pub\"],[\"Charlotte\",\"O'Fallon\",\"Chicago\",\"Evansville\",\"Golden\",\"Chicago\",\"Boston\",\"Burlingame\",\"Philadelphia\",\"Sterling\",\"Arcata\",\"Pacific City\",\"San Diego\",\"Evanston\",\"Denver\",\"San Diego\",\"Santa Rosa\",\"Milwaukee\",\"Omaha\",\"Victor\",\"Colorado Springs\",\"Tinley Park\",\"Boulder\",\"Columbia\",\"Moriarty\",\"Orlando\",\"Rocky River\",\"Saint Paul\",\"Portland\",\"Sunriver\",\"Carlsbad\",\"Roanoke\",\"Anaheim\",\"San Luis Obispo\",\"Cincinnati\",\"Steamboat Springs\",\"Milwaukee\",\"Portland\",\"Bridgewater Corners\",\"Longmont\",\"Eugene\",\"Riverside\",\"Greeley\",\"Fresno\",\"Aurora\",\"Ft. Bragg\",\"New Glarus\",\"Inglewood\",\"Santa Rosa\",\"Seattle\"],[\"NC\",\"MO\",\"IL\",\"IN\",\"CO\",\"IL\",\"MA\",\"CA\",\"PA\",\"VA\",\"CA\",\"OR\",\"CA\",\"IL\",\"CO\",\"CA\",\"CA\",\"WI\",\"NE\",\"ID\",\"CO\",\"IL\",\"CO\",\"MO\",\"NM\",\"FL\",\"OH\",\"MN\",\"OR\",\"OR\",\"CA\",\"VA\",\"CA\",\"CA\",\"OH\",\"CO\",\"WI\",\"OR\",\"VT\",\"CO\",\"OR\",\"CA\",\"CO\",\"CA\",\"CO\",\"CA\",\"WI\",\"CA\",\"CA\",\"WA\"],[\"German-Style Altbier\",\"Pro-Am Competition\",\"South German Style Hefeweizen/Hefeweissbier\",\"American-Style Wheat Beer\",\"American-Style Sour Ale\",\"American-Style Stout\",\"Classic English Style Pale Ale\",\"English Style Strong Bitter\",\"Bohemian Style Pilsener\",\"American-Style Brown Ale\",\"Belgian-Style Ales\",\"Strong Scotch Ale\",\"Belgian-Style Lambic or Sour Ale\",\"Fruit Wheat Beer\",\"Bock\",\"Contemporary American-Style Pilsener\",\"Golden or Blonde Ale\",\"Lager, American Malt Liquor\",\"Ale, Dry Stout\",\"American-Style Brown Ale\",\"Smoke Flavored Beers\",\"American-Style India Pale Ale\",\"Proam\",\"India Pale Lager or Malt Liquor\",\"Fruit Wheat Beer\",\"Lager, Amber Lager\",\"Chocolate / Cocoa Flavored Beer\",\"Classic English-Style Pale Ale\",\"Wood- and Barrel-Aged Sour Beer\",\"Imperial Red Ale\",\"Coffee Flavored Beer\",\"German-Style Maerzen\",\"English-Style Brown Ale\",\"American-Style Pale Ale\",\"Porters\",\"Australian-Style Pale Ale\",\"American-Style Lager, Light Lager or Premium Lager\",\"Alts\",\"American Lager-Ales\",\"American-Style Pale Ale\",\"Wood- and Barrel-Aged Beer\",\"Irish-Style Red Ale\",\"Juicy or Hazy Pale Ale\",\"American Pale Ale\",\"English-Style India Pale Ale\",\"American Lager-Ale/Cream Ale\",\"American-Style Amber Lager\",\"English Mild or Bitter\",\"American Lager\",\"American-Style Strong Pale Ale\"],[2020,2009,2007,2014,2020,2014,2005,1997,2002,2020,2000,2007,2016,2018,2008,2019,2006,1993,1993,2005,1994,2017,2009,2019,2018,1993,2001,2017,2009,2018,2010,2019,2020,2002,1988,2018,2012,1987,1991,1999,2013,2017,2019,1996,2013,1992,2012,2020,2020,2003]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>medal<\\/th>\\n      <th>beer_name<\\/th>\\n      <th>brewery<\\/th>\\n      <th>city<\\/th>\\n      <th>state<\\/th>\\n      <th>category<\\/th>\\n      <th>year<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"scrollX\":true,\"pageLength\":5,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":7},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"orderCellsTop\":true,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}\r\nConvert variable to factor\r\nTo convert a variable to a factor we use factor() / as.factor() or forcats::as_factor(). These functions converts each distinct category to some number placeholder in the background.\r\nLet‚Äôs get a better feel for the non-numeric data in the datasets we will be considering here.\r\nbrewing_materials\r\nLet‚Äôs have a look at the material_type and type fields in the brewing_materials dataset.\r\n\r\n\r\nbrewing_materials %>% \r\n  count(material_type)\r\n\r\n\r\n# A tibble: 5 x 2\r\n  material_type                n\r\n  <chr>                    <int>\r\n1 Grain Products             600\r\n2 Non-Grain Products         480\r\n3 Total Grain products       120\r\n4 Total Non-Grain products   120\r\n5 Total Used                 120\r\n\r\nbrewing_materials %>% \r\n  count(type)\r\n\r\n\r\n# A tibble: 12 x 2\r\n   type                           n\r\n   <chr>                      <int>\r\n 1 Barley and barley products   120\r\n 2 Corn and corn products       120\r\n 3 Hops (dry)                   120\r\n 4 Hops (used as extracts)      120\r\n 5 Malt and malt products       120\r\n 6 Other                        120\r\n 7 Rice and rice products       120\r\n 8 Sugar and syrups             120\r\n 9 Total Grain products         120\r\n10 Total Non-Grain products     120\r\n11 Total Used                   120\r\n12 Wheat and wheat products     120\r\n\r\nbrewing_materials %>% \r\n  filter(stringr::str_to_lower(material_type) %in% \r\n           c('grain products',\r\n             'non-grain products')) %>% \r\n  count(material_type, type)\r\n\r\n\r\n# A tibble: 9 x 3\r\n  material_type      type                           n\r\n  <chr>              <chr>                      <int>\r\n1 Grain Products     Barley and barley products   120\r\n2 Grain Products     Corn and corn products       120\r\n3 Grain Products     Malt and malt products       120\r\n4 Grain Products     Rice and rice products       120\r\n5 Grain Products     Wheat and wheat products     120\r\n6 Non-Grain Products Hops (dry)                   120\r\n7 Non-Grain Products Hops (used as extracts)      120\r\n8 Non-Grain Products Other                        120\r\n9 Non-Grain Products Sugar and syrups             120\r\n\r\nfactor() / as.factor()\r\nThese are conversion functions to convert a variable to a factor in Base R.\r\nTo convert a variable to a factor we may use:\r\ndf <- df %>% mutate(var = factor(var))\r\ndf <- df %>% mutate(var = as.factor(var))\r\n\r\nTo figure out what number placeholder a category was given behind the scenes, use levels().\r\nThe default order of factor() is sorted. According to the help page: ‚ÄúThe levels of a factor are by default sorted, but the sort order may well depend on the locale at the time of creation, and should not be assumed to be ASCII.‚Äù\r\n\r\n\r\nbrewing_materials %>% \r\n   mutate(material_type = factor(material_type)) %>% \r\n   # use dplyr::pull which acts like $ to get the variable\r\n   pull(material_type) %>% \r\n   # let us get the number placeholder attached to each category\r\n   levels()\r\n \r\n\r\n[1] \"Grain Products\"           \"Non-Grain Products\"      \r\n[3] \"Total Grain products\"     \"Total Non-Grain products\"\r\n[5] \"Total Used\"              \r\n\r\nbrewing_materials %>% \r\n   mutate(material_type = as.factor(material_type)) %>% \r\n   # can also use count() to count how many in each level\r\n   count(material_type)\r\n \r\n\r\n# A tibble: 5 x 2\r\n  material_type                n\r\n  <fct>                    <int>\r\n1 Grain Products             600\r\n2 Non-Grain Products         480\r\n3 Total Grain products       120\r\n4 Total Non-Grain products   120\r\n5 Total Used                 120\r\n\r\nNotice that the base R functions factor() / as.factor() created levels in the alphabetical sorted order (my locale is ASCII). The output of the first part of the code block shows that \"Grain Products\" was coded as 1, while \"Total Non-Grain products\" was coded as 4, and \"Total Used\" was coded as the last level which was 5.\r\nWhat if I wanted to specify the levels myself? I could specify the levels in an argument as shown: levels = c(\"Level1\", ..., \"LevelN\").\r\n\r\n\r\nbrewing_materials %>% \r\n   mutate(material_type = factor(material_type,\r\n                 # I want to make a factor but I want the order to be\r\n                 # as follows:\r\n                 levels = c(\"Grain Products\",\r\n                            \"Total Grain products\",\r\n                            \"Non-Grain Products\",\r\n                            \"Total Non-Grain products\",\r\n                            \"Total Used\"))) %>% \r\n   pull(material_type) %>% \r\n   levels()\r\n \r\n\r\n[1] \"Grain Products\"           \"Total Grain products\"    \r\n[3] \"Non-Grain Products\"       \"Total Non-Grain products\"\r\n[5] \"Total Used\"              \r\n\r\nMy level specification is used to create the levels, so the numeric encoding follows my specification this time. \"Total Grain products\" is coded as level 2 this time (it was level 3 in the default creation where no levels argument was specified).\r\nWhat if I wanted to include levels that may exist in future datasets, but don‚Äôt as yet in the dataset we have? This is similar to the months example in R for Data Science. Let‚Äôs try it with adding a Not Applicable level, which is not in our dataset‚Äôs material_type variable.\r\n\r\n\r\nbrewing_materials %>% \r\n   mutate(material_type = factor(material_type,\r\n                           levels = c(\"Grain Products\",\r\n                                      \"Total Grain products\",\r\n                                      \"Non-Grain Products\",\r\n                                      \"Total Non-Grain products\",\r\n                                      \"Total Used\",\r\n                                      \"Not Applicable\"))) %>% \r\n   pull(material_type) %>% \r\n   levels()\r\n \r\n\r\n[1] \"Grain Products\"           \"Total Grain products\"    \r\n[3] \"Non-Grain Products\"       \"Total Non-Grain products\"\r\n[5] \"Total Used\"               \"Not Applicable\"          \r\n\r\nHas it been created?\r\n\r\n\r\nbrewing_materials %>% \r\n   mutate(material_type = factor(material_type,\r\n                           levels = c(\"Grain Products\",\r\n                                      \"Total Grain products\",\r\n                                      \"Non-Grain Products\",\r\n                                      \"Total Non-Grain products\",\r\n                                      \"Total Used\",\r\n                                      \"Not Applicable\"))) %>%\r\n   # we can also count as before but notice that\r\n   # one category that has no data is missing -\r\n   # the artificial `Not Applicable` we added\r\n   count(material_type)\r\n \r\n\r\n# A tibble: 5 x 2\r\n  material_type                n\r\n  <fct>                    <int>\r\n1 Grain Products             600\r\n2 Total Grain products       120\r\n3 Non-Grain Products         480\r\n4 Total Non-Grain products   120\r\n5 Total Used                 120\r\n\r\nA simple count() does not quite let us know, but if we add an argument .drop = FALSE we get counts for all categories, even those with no observations (i.e.¬†that category has a count of 0). By default the count() function drops categories with 0 counts from the output. By adding .drop = FALSE we‚Äôre asking for these to be included.\r\n\r\n\r\nbrewing_materials %>% \r\n   mutate(material_type = factor(material_type,\r\n                           levels = c(\"Grain Products\",\r\n                                      \"Total Grain products\",\r\n                                      \"Non-Grain Products\",\r\n                                      \"Total Non-Grain products\",\r\n                                      \"Total Used\",\r\n                                      \"Not Applicable\"))) %>%\r\n   # we can get all categories by adding the .drop = FALSE\r\n   count(material_type, .drop = FALSE)\r\n \r\n\r\n# A tibble: 6 x 2\r\n  material_type                n\r\n  <fct>                    <int>\r\n1 Grain Products             600\r\n2 Total Grain products       120\r\n3 Non-Grain Products         480\r\n4 Total Non-Grain products   120\r\n5 Total Used                 120\r\n6 Not Applicable               0\r\n\r\n\r\nMy locale is English South African, and hence is ASCII. The order preference in sorting is: [‚Ä¶, !, \", #, ‚Ä¶, 0, 1, ‚Ä¶, 9, ‚Ä¶, A, ‚Ä¶, Z, ‚Ä¶].\r\nforcats::as_factor()\r\nas_factor() behaves differently to as.factor() in that it creates levels in the order in which they appear, hence we get the same factor levels across different locales.\r\n\r\nNote the underscore _ instead of the .: as_factor\r\nBase R‚Äôs as.factor()\r\n\r\n\r\ntest_factor_var <-  c(\"012star\", \"DogsRule\", \"!this\", \"%abc\",\r\n            \"Abc#\", \"abc$\", \"$bb\", \"AreYouKiddingCatsRule!\")\r\n\r\ntest_factor_var %>% \r\n  as.factor() %>% \r\n  print(width = Inf)\r\n\r\n\r\n[1] 012star                DogsRule              \r\n[3] !this                  %abc                  \r\n[5] Abc#                   abc$                  \r\n[7] $bb                    AreYouKiddingCatsRule!\r\nLevels: !this $bb %abc 012star Abc# abc$ AreYouKiddingCatsRule! DogsRule\r\n\r\nNote that the levels (seen in the output Levels: !this $bb ...) follow the [ASCII] sort on my machine, this may be completely different based on your locale.\r\nContrast with forcats::as_factor()\r\nNow let‚Äôs consider as_factor().\r\n\r\n\r\n# here is the raw variable again\r\ntest_factor_var\r\n\r\n\r\n[1] \"012star\"                \"DogsRule\"              \r\n[3] \"!this\"                  \"%abc\"                  \r\n[5] \"Abc#\"                   \"abc$\"                  \r\n[7] \"$bb\"                    \"AreYouKiddingCatsRule!\"\r\n\r\n# Now let's make it a factor, this time using\r\n# as_factor()\r\ntest_factor_var %>% \r\n  as_factor() %>% \r\n  print(width = Inf)\r\n\r\n\r\n[1] 012star                DogsRule              \r\n[3] !this                  %abc                  \r\n[5] Abc#                   abc$                  \r\n[7] $bb                    AreYouKiddingCatsRule!\r\nLevels: 012star DogsRule !this %abc Abc# abc$ $bb AreYouKiddingCatsRule!\r\n\r\nNote that as_factor() kept the order as it appears (Levels: 012star DogsRule ...), this will be the same for you, even if your locale is different.\r\nConvert brewer data\r\nLet‚Äôs perform the same conversion we did with Base R functions, but now using forcats::as_factor().\r\nFirst let‚Äôs have a look at the default order that as_factor() creates the variable in.\r\n\r\n\r\nbrewing_materials %>% \r\n    pull(material_type) %>% \r\n    # what order are material_type observations in?\r\n    head(12)\r\n  \r\n\r\n [1] \"Grain Products\"           \"Grain Products\"          \r\n [3] \"Grain Products\"           \"Grain Products\"          \r\n [5] \"Grain Products\"           \"Total Grain products\"    \r\n [7] \"Non-Grain Products\"       \"Non-Grain Products\"      \r\n [9] \"Non-Grain Products\"       \"Non-Grain Products\"      \r\n[11] \"Total Non-Grain products\" \"Total Used\"              \r\n\r\nbrewing_materials %>% \r\n    mutate(material_type = as_factor(material_type)) %>% \r\n    pull(material_type) %>% \r\n    levels()\r\n  \r\n\r\n[1] \"Grain Products\"           \"Total Grain products\"    \r\n[3] \"Non-Grain Products\"       \"Total Non-Grain products\"\r\n[5] \"Total Used\"              \r\n\r\nNotice the levels are created in the order they appear in the material_type field - \"Grain Products\" appeared first hence is Level 1, \"Total Grain products\" appeared second hence occupies Level 2.\r\nfct_inorder()\r\nWe can also explicitly use the fct_inorder() function to reorder the factor levels by first appearance. I add it here just so you‚Äôre aware of this option.\r\nFor example, the beer_awards$medal column would be made alphabetical in my locale if I use as.factor().\r\n\r\n\r\nbeer_awards %>% \r\n  head(3)\r\n\r\n\r\n# A tibble: 3 x 7\r\n  medal  beer_name    brewery       city     state category       year\r\n  <chr>  <chr>        <chr>         <chr>    <chr> <chr>         <dbl>\r\n1 Gold   Volksbier V~ Wibby Brewing Longmont CO    American Amb~  2020\r\n2 Silver Oktoberfest  Founders Bre~ Grand R~ MI    American Amb~  2020\r\n3 Bronze Amber Lager  Skipping Roc~ Staunton VA    American Amb~  2020\r\n\r\nbeer_awards %>% \r\n  mutate(medal = as.factor(medal)) %>% \r\n  pull(medal) %>% \r\n  levels()\r\n\r\n\r\n[1] \"Bronze\" \"Gold\"   \"Silver\"\r\n\r\nNotice the alphabetical ordering of levels (Bronze, Gold, Silver).\r\nIf I follow this with a fct_inorder() the ordering of levels is now using the order of appearance instead.\r\n\r\n\r\nbeer_awards %>% \r\n  mutate(medal = as.factor(medal) %>% fct_inorder()) %>% \r\n  pull(medal) %>% \r\n  levels()\r\n\r\n\r\n[1] \"Gold\"   \"Silver\" \"Bronze\"\r\n\r\nIn most cases we‚Äôd want this to be Bronze, Silver, Gold in order of increasing award type. We‚Äôll see how to do that just now.\r\nManually order levels\r\nfct_relevel()\r\nNow we may specify the order ourselves (i.e.¬†manually order the levels) by using fct_relevel(). For example, as we talked about previously, we may want the award medals to be ordered Bronze, Silver, Gold in order of increasing award type, instead of order of appearance (or Base R‚Äôs alpha sorting in my locale).\r\n\r\n\r\nbeer_awards %>% \r\n    # I want to specify my factor levels myself\r\n    mutate(medal = fct_relevel(medal,\r\n                   # we want a specific order, and\r\n                   # the order in which the categories\r\n                   # appear does not meet that specification\r\n                               \"Bronze\",\r\n                               \"Silver\",\r\n                               \"Gold\")) %>% \r\n    pull(medal) %>% \r\n    levels()\r\n  \r\n\r\n[1] \"Bronze\" \"Silver\" \"Gold\"  \r\n\r\nWe can‚Äôt add a level that is not in the dataset, or we can, but we get a Warning), and the level is not added.\r\n\r\n\r\nbrewing_materials_forcats <- brewing_materials %>% \r\n    # create a factor\r\n    mutate(material_type = as_factor(material_type))\r\n\r\n  brewing_materials_forcats %>%\r\n    pull(material_type) %>% \r\n    # what's the default levels?\r\n    levels()\r\n  \r\n\r\n[1] \"Grain Products\"           \"Total Grain products\"    \r\n[3] \"Non-Grain Products\"       \"Total Non-Grain products\"\r\n[5] \"Total Used\"              \r\n\r\nbrewing_materials_forcats %>% \r\n    # we relevel by specifying the order we want\r\n    mutate(material_type = fct_relevel(material_type,\r\n                                       \"Grain Products\",\r\n                                       \"Non-Grain Products\",\r\n                                       \"Total Grain products\",\r\n                                       \"Total Non-Grain products\",\r\n                                       \"Total Used\",\r\n                                       # adding a level that does not exist\r\n                                       \"Not Applicable\")) %>% \r\n    pull(material_type) %>% \r\n    levels()\r\n  \r\n\r\nWarning: Problem with `mutate()` input `material_type`.\r\ni Unknown levels in `f`: Not Applicable\r\ni Input `material_type` is `fct_relevel(...)`.\r\nWarning: Unknown levels in `f`: Not Applicable\r\n[1] \"Grain Products\"           \"Non-Grain Products\"      \r\n[3] \"Total Grain products\"     \"Total Non-Grain products\"\r\n[5] \"Total Used\"              \r\n\r\nNotice the warning you get (Warning: Problem with mutate ‚Ä¶ . We can‚Äôt specify a ‚Äúlevel‚Äù that does not exist in the observations.\r\nYou may have a factor variable that at present has only some of the categories. For example, you may have a month factor variable where the dataset you‚Äôre working with only has observations for some months at present. In this case you are going to be specifying the levels yourself so the best is to use the base functions, and specify all months in your levels argument despite these not being a part of the values seen in the observations at present.\r\nThe nice part about fct_relevel() is you don‚Äôt have to list all the categories, sometimes you just want to move one level to the beginning, you may do this as shown below. You may also move some part of the list to a specific position, which may be done using the after argument.\r\nSay I want to move all the ‚ÄúTotal‚Äù columns up front:\r\n\r\n\r\n# Levels at present are:\r\n  brewing_materials_forcats %>%\r\n    pull(material_type) %>% \r\n    levels()\r\n  \r\n\r\n[1] \"Grain Products\"           \"Total Grain products\"    \r\n[3] \"Non-Grain Products\"       \"Total Non-Grain products\"\r\n[5] \"Total Used\"              \r\n\r\nbrewing_materials_forcats %>% \r\n    # move Total columns to the front of levels\r\n    mutate(material_type = fct_relevel(material_type,\r\n                                       \"Total Used\",\r\n                                       \"Total Grain products\",\r\n                                       \"Total Non-Grain products\")) %>% \r\n    pull(material_type) %>% \r\n    levels()\r\n  \r\n\r\n[1] \"Total Used\"               \"Total Grain products\"    \r\n[3] \"Total Non-Grain products\" \"Grain Products\"          \r\n[5] \"Non-Grain Products\"      \r\n\r\nNotice I did not list all categories. The remaining levels will fall behind the ‚ÄúTotal‚Äù columns in the order they were originally.\r\nSay I want to move ‚ÄúGrain Products‚Äù to the end. I can specify after = Inf to do this.\r\n\r\n\r\n# Levels at present are:\r\n  brewing_materials_forcats %>%\r\n    pull(material_type) %>% \r\n    levels()\r\n  \r\n\r\n[1] \"Grain Products\"           \"Total Grain products\"    \r\n[3] \"Non-Grain Products\"       \"Total Non-Grain products\"\r\n[5] \"Total Used\"              \r\n\r\nbrewing_materials_forcats %>% \r\n    # move \"Grain Products\" to the end of the levels\r\n    mutate(material_type = fct_relevel(material_type,\r\n                                       \"Grain Products\", \r\n                                       after = Inf)) %>% \r\n    pull(material_type) %>% \r\n    levels()\r\n  \r\n\r\n[1] \"Total Grain products\"     \"Non-Grain Products\"      \r\n[3] \"Total Non-Grain products\" \"Total Used\"              \r\n[5] \"Grain Products\"          \r\n\r\nSay I want to move the ‚ÄúTotal Grain products‚Äù and ‚ÄúTotal Non-Grain products‚Äù to after the individual amounts. I again can use the after argument to do this. It is easy to get confused as to what integer your after should be set as. I think of it as ‚ÄúWhat position would I like my moved levels to start from‚Äù? In this case I want it to start by occupying slot number 3, then slot number 4, so I set after = 2, meaning ‚ÄúPlease put these moved levels after slot number 2‚Äù.\r\n\r\n\r\n# Levels at present are:\r\n  brewing_materials_forcats %>%\r\n    pull(material_type) %>% \r\n    levels()\r\n  \r\n\r\n[1] \"Grain Products\"           \"Total Grain products\"    \r\n[3] \"Non-Grain Products\"       \"Total Non-Grain products\"\r\n[5] \"Total Used\"              \r\n\r\nbrewing_materials_forcats %>% \r\n    mutate(material_type = fct_relevel(material_type,\r\n                                       c(\"Total Grain products\",\r\n                                         \"Total Non-Grain products\"), \r\n                                       # what slot in the levels\r\n                                       # should these go into?\r\n                                       # I want them to start in slot 3\r\n                                       # so I set  after = 2\r\n                                       after = 2)) %>% \r\n    pull(material_type) %>% \r\n    levels()\r\n  \r\n\r\n[1] \"Grain Products\"           \"Non-Grain Products\"      \r\n[3] \"Total Grain products\"     \"Total Non-Grain products\"\r\n[5] \"Total Used\"              \r\n\r\n\r\nCollapse multiple levels\r\nbrewer_size\r\nLet‚Äôs have a look at the brewer_size field in the brewer_size dataset.\r\n\r\n\r\nbrewer_size %>% \r\n  count(brewer_size)\r\n\r\n\r\n# A tibble: 16 x 2\r\n   brewer_size                        n\r\n   <chr>                          <int>\r\n 1 1 to 1,000 Barrels                11\r\n 2 1,000,000 to 6,000,000 Barrels     1\r\n 3 1,000,001 to 1,999,999 Barrels     9\r\n 4 1,000,001 to 6,000,000 Barrels     1\r\n 5 1,001 to 7,500 Barrels            11\r\n 6 100,001 to 500,000 Barrels        11\r\n 7 15,001 to 30,000 Barrels          11\r\n 8 2,000,000 to 6,000,000 Barrels     9\r\n 9 30,001 to 60,000 Barrels          11\r\n10 500,001 to 1,000,000 Barrels      11\r\n11 6,000,001 Barrels and Over        11\r\n12 60,001 to 100,000 Barrels         11\r\n13 7,501 to 15,000 Barrels           11\r\n14 Total                             11\r\n15 Under 1 Barrel                     6\r\n16 Zero Barrels                       1\r\n\r\nbrewer_size %>% \r\n  count(brewer_size, \r\n        # count's default is to consider the number of rows\r\n        # in each group, we can change it using wt (weight)\r\n        # weight in this example is:\r\n        # the number of brewers in each brewer size category, \r\n        # so count will sum up `n_of_brewers` for each category of brewer_size\r\n        wt = n_of_brewers)\r\n\r\n\r\n# A tibble: 16 x 2\r\n   brewer_size                        n\r\n   <chr>                          <dbl>\r\n 1 1 to 1,000 Barrels             27956\r\n 2 1,000,000 to 6,000,000 Barrels     5\r\n 3 1,000,001 to 1,999,999 Barrels    45\r\n 4 1,000,001 to 6,000,000 Barrels     4\r\n 5 1,001 to 7,500 Barrels          8368\r\n 6 100,001 to 500,000 Barrels       439\r\n 7 15,001 to 30,000 Barrels         728\r\n 8 2,000,000 to 6,000,000 Barrels    47\r\n 9 30,001 to 60,000 Barrels         556\r\n10 500,001 to 1,000,000 Barrels      92\r\n11 6,000,001 Barrels and Over       174\r\n12 60,001 to 100,000 Barrels        291\r\n13 7,501 to 15,000 Barrels         1163\r\n14 Total                          41946\r\n15 Under 1 Barrel                  1602\r\n16 Zero Barrels                     476\r\n\r\nNotice that the brewer_size variable has a few categories which are slightly different, but which overlap.\r\nbrewer_size\r\n1,000,000 to 6,000,000 Barrels\r\n1,000,001 to 6,000,000 Barrels\r\n1,000,001 to 1,999,999 Barrels\r\n2,000,000 to 6,000,000 Barrels\r\nIf you look closely it seems as though 1,000,000 to 6,000,000 Barrels may be a typo, since 500,001 to 1,000,000 Barrels is already a category in that year.\r\nIt also looks as if 1,000,001 to 6,000,000 Barrels was split into 1,000,001 to 1,999,999 Barrels and 2,000,000 to 6,000,000 Barrels from 2011 onwards.\r\nfct_collapse()\r\nWe can consolidate these levels into one level by using fct_collapse().\r\n\r\n\r\n# what are the current levels in this variable\r\nbrewer_size %>% \r\n  mutate(brewer_size = as_factor(brewer_size)) %>% \r\n  pull(brewer_size) %>% \r\n  levels()\r\n\r\n\r\n [1] \"6,000,001 Barrels and Over\"     \"1,000,001 to 6,000,000 Barrels\"\r\n [3] \"500,001 to 1,000,000 Barrels\"   \"100,001 to 500,000 Barrels\"    \r\n [5] \"60,001 to 100,000 Barrels\"      \"30,001 to 60,000 Barrels\"      \r\n [7] \"15,001 to 30,000 Barrels\"       \"7,501 to 15,000 Barrels\"       \r\n [9] \"1,001 to 7,500 Barrels\"         \"1 to 1,000 Barrels\"            \r\n[11] \"Under 1 Barrel\"                 \"Total\"                         \r\n[13] \"1,000,000 to 6,000,000 Barrels\" \"2,000,000 to 6,000,000 Barrels\"\r\n[15] \"1,000,001 to 1,999,999 Barrels\" \"Zero Barrels\"                  \r\n\r\nbrewer_size %>% \r\n  mutate(brewer_size = as_factor(brewer_size)) %>% \r\n  mutate(brewer_size = fct_collapse(brewer_size,\r\n            # the new category name\r\n            \"1,000,000 to 6,000,000 Barrels\" = \r\n            # the current categories that must become\r\n            # the new category\r\n              c(\"1,000,000 to 6,000,000 Barrels\",\r\n                \"1,000,001 to 6,000,000 Barrels\",\r\n                \"1,000,001 to 1,999,999 Barrels\",\r\n                \"2,000,000 to 6,000,000 Barrels\")\r\n        )) %>% \r\n  pull(brewer_size) %>% \r\n  levels()\r\n\r\n\r\n [1] \"6,000,001 Barrels and Over\"     \"1,000,000 to 6,000,000 Barrels\"\r\n [3] \"500,001 to 1,000,000 Barrels\"   \"100,001 to 500,000 Barrels\"    \r\n [5] \"60,001 to 100,000 Barrels\"      \"30,001 to 60,000 Barrels\"      \r\n [7] \"15,001 to 30,000 Barrels\"       \"7,501 to 15,000 Barrels\"       \r\n [9] \"1,001 to 7,500 Barrels\"         \"1 to 1,000 Barrels\"            \r\n[11] \"Under 1 Barrel\"                 \"Total\"                         \r\n[13] \"Zero Barrels\"                  \r\n\r\nNotice that our previous 16 levels are now 13.\r\nIn this case we‚Äôd also want to reorder the levels further by using fct_relevel().\r\n\r\n\r\nbrewer_size %>% \r\n  mutate(brewer_size = as_factor(brewer_size)) %>% \r\n  mutate(brewer_size = fct_collapse(brewer_size,\r\n            \"1,000,000 to 6,000,000 Barrels\" = \r\n              c(\"1,000,000 to 6,000,000 Barrels\",\r\n                \"1,000,001 to 6,000,000 Barrels\",\r\n                \"1,000,001 to 1,999,999 Barrels\",\r\n                \"2,000,000 to 6,000,000 Barrels\")\r\n        )) %>% \r\n  mutate(brewer_size = fct_relevel(brewer_size,\r\n        \"Zero Barrels\",\r\n        \"Under 1 Barrel\",\r\n        \"1 to 1,000 Barrels\",\r\n        \"1,001 to 7,500 Barrels\",\r\n        \"7,501 to 15,000 Barrels\",\r\n        \"15,001 to 30,000 Barrels\",\r\n        \"30,001 to 60,000 Barrels\",\r\n        \"60,001 to 100,000 Barrels\",\r\n        \"100,001 to 500,000 Barrels\",\r\n        \"500,001 to 1,000,000 Barrels\",\r\n        \"1,000,000 to 6,000,000 Barrels\",\r\n        \"6,000,001 Barrels and Over\")) %>% \r\n  pull(brewer_size) %>% \r\n  levels()\r\n\r\n\r\n [1] \"Zero Barrels\"                   \"Under 1 Barrel\"                \r\n [3] \"1 to 1,000 Barrels\"             \"1,001 to 7,500 Barrels\"        \r\n [5] \"7,501 to 15,000 Barrels\"        \"15,001 to 30,000 Barrels\"      \r\n [7] \"30,001 to 60,000 Barrels\"       \"60,001 to 100,000 Barrels\"     \r\n [9] \"100,001 to 500,000 Barrels\"     \"500,001 to 1,000,000 Barrels\"  \r\n[11] \"1,000,000 to 6,000,000 Barrels\" \"6,000,001 Barrels and Over\"    \r\n[13] \"Total\"                         \r\n\r\nReduce categories\r\nWe saw that fct_collapse() is used to reduce categories. In the above example, there was some order to the levels so the best we can do is collapse levels into fewer categories, i.e.¬†an Other category does not make much sense in the example we used above.\r\nSome times you have way too many levels to visualise, or be useful in considerations, but there isn‚Äôt any inherent order in the levels. We will discuss different category reduction strategies for these (i.e.¬†where an Other category is a viable option).\r\nbeer_awards\r\nLet‚Äôs use the beer_awards dataset for this part.\r\n\r\n\r\nbeer_awards %>% \r\n  count(brewery, sort = TRUE) %>% \r\n  DT::datatable()\r\n\r\n\r\n\r\n{\"x\":{\"filter\":\"none\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\",\"168\",\"169\",\"170\",\"171\",\"172\",\"173\",\"174\",\"175\",\"176\",\"177\",\"178\",\"179\",\"180\",\"181\",\"182\",\"183\",\"184\",\"185\",\"186\",\"187\",\"188\",\"189\",\"190\",\"191\",\"192\",\"193\",\"194\",\"195\",\"196\",\"197\",\"198\",\"199\",\"200\",\"201\",\"202\",\"203\",\"204\",\"205\",\"206\",\"207\",\"208\",\"209\",\"210\",\"211\",\"212\",\"213\",\"214\",\"215\",\"216\",\"217\",\"218\",\"219\",\"220\",\"221\",\"222\",\"223\",\"224\",\"225\",\"226\",\"227\",\"228\",\"229\",\"230\",\"231\",\"232\",\"233\",\"234\",\"235\",\"236\",\"237\",\"238\",\"239\",\"240\",\"241\",\"242\",\"243\",\"244\",\"245\",\"246\",\"247\",\"248\",\"249\",\"250\",\"251\",\"252\",\"253\",\"254\",\"255\",\"256\",\"257\",\"258\",\"259\",\"260\",\"261\",\"262\",\"263\",\"264\",\"265\",\"266\",\"267\",\"268\",\"269\",\"270\",\"271\",\"272\",\"273\",\"274\",\"275\",\"276\",\"277\",\"278\",\"279\",\"280\",\"281\",\"282\",\"283\",\"284\",\"285\",\"286\",\"287\",\"288\",\"289\",\"290\",\"291\",\"292\",\"293\",\"294\",\"295\",\"296\",\"297\",\"298\",\"299\",\"300\",\"301\",\"302\",\"303\",\"304\",\"305\",\"306\",\"307\",\"308\",\"309\",\"310\",\"311\",\"312\",\"313\",\"314\",\"315\",\"316\",\"317\",\"318\",\"319\",\"320\",\"321\",\"322\",\"323\",\"324\",\"325\",\"326\",\"327\",\"328\",\"329\",\"330\",\"331\",\"332\",\"333\",\"334\",\"335\",\"336\",\"337\",\"338\",\"339\",\"340\",\"341\",\"342\",\"343\",\"344\",\"345\",\"346\",\"347\",\"348\",\"349\",\"350\",\"351\",\"352\",\"353\",\"354\",\"355\",\"356\",\"357\",\"358\",\"359\",\"360\",\"361\",\"362\",\"363\",\"364\",\"365\",\"366\",\"367\",\"368\",\"369\",\"370\",\"371\",\"372\",\"373\",\"374\",\"375\",\"376\",\"377\",\"378\",\"379\",\"380\",\"381\",\"382\",\"383\",\"384\",\"385\",\"386\",\"387\",\"388\",\"389\",\"390\",\"391\",\"392\",\"393\",\"394\",\"395\",\"396\",\"397\",\"398\",\"399\",\"400\",\"401\",\"402\",\"403\",\"404\",\"405\",\"406\",\"407\",\"408\",\"409\",\"410\",\"411\",\"412\",\"413\",\"414\",\"415\",\"416\",\"417\",\"418\",\"419\",\"420\",\"421\",\"422\",\"423\",\"424\",\"425\",\"426\",\"427\",\"428\",\"429\",\"430\",\"431\",\"432\",\"433\",\"434\",\"435\",\"436\",\"437\",\"438\",\"439\",\"440\",\"441\",\"442\",\"443\",\"444\",\"445\",\"446\",\"447\",\"448\",\"449\",\"450\",\"451\",\"452\",\"453\",\"454\",\"455\",\"456\",\"457\",\"458\",\"459\",\"460\",\"461\",\"462\",\"463\",\"464\",\"465\",\"466\",\"467\",\"468\",\"469\",\"470\",\"471\",\"472\",\"473\",\"474\",\"475\",\"476\",\"477\",\"478\",\"479\",\"480\",\"481\",\"482\",\"483\",\"484\",\"485\",\"486\",\"487\",\"488\",\"489\",\"490\",\"491\",\"492\",\"493\",\"494\",\"495\",\"496\",\"497\",\"498\",\"499\",\"500\",\"501\",\"502\",\"503\",\"504\",\"505\",\"506\",\"507\",\"508\",\"509\",\"510\",\"511\",\"512\",\"513\",\"514\",\"515\",\"516\",\"517\",\"518\",\"519\",\"520\",\"521\",\"522\",\"523\",\"524\",\"525\",\"526\",\"527\",\"528\",\"529\",\"530\",\"531\",\"532\",\"533\",\"534\",\"535\",\"536\",\"537\",\"538\",\"539\",\"540\",\"541\",\"542\",\"543\",\"544\",\"545\",\"546\",\"547\",\"548\",\"549\",\"550\",\"551\",\"552\",\"553\",\"554\",\"555\",\"556\",\"557\",\"558\",\"559\",\"560\",\"561\",\"562\",\"563\",\"564\",\"565\",\"566\",\"567\",\"568\",\"569\",\"570\",\"571\",\"572\",\"573\",\"574\",\"575\",\"576\",\"577\",\"578\",\"579\",\"580\",\"581\",\"582\",\"583\",\"584\",\"585\",\"586\",\"587\",\"588\",\"589\",\"590\",\"591\",\"592\",\"593\",\"594\",\"595\",\"596\",\"597\",\"598\",\"599\",\"600\",\"601\",\"602\",\"603\",\"604\",\"605\",\"606\",\"607\",\"608\",\"609\",\"610\",\"611\",\"612\",\"613\",\"614\",\"615\",\"616\",\"617\",\"618\",\"619\",\"620\",\"621\",\"622\",\"623\",\"624\",\"625\",\"626\",\"627\",\"628\",\"629\",\"630\",\"631\",\"632\",\"633\",\"634\",\"635\",\"636\",\"637\",\"638\",\"639\",\"640\",\"641\",\"642\",\"643\",\"644\",\"645\",\"646\",\"647\",\"648\",\"649\",\"650\",\"651\",\"652\",\"653\",\"654\",\"655\",\"656\",\"657\",\"658\",\"659\",\"660\",\"661\",\"662\",\"663\",\"664\",\"665\",\"666\",\"667\",\"668\",\"669\",\"670\",\"671\",\"672\",\"673\",\"674\",\"675\",\"676\",\"677\",\"678\",\"679\",\"680\",\"681\",\"682\",\"683\",\"684\",\"685\",\"686\",\"687\",\"688\",\"689\",\"690\",\"691\",\"692\",\"693\",\"694\",\"695\",\"696\",\"697\",\"698\",\"699\",\"700\",\"701\",\"702\",\"703\",\"704\",\"705\",\"706\",\"707\",\"708\",\"709\",\"710\",\"711\",\"712\",\"713\",\"714\",\"715\",\"716\",\"717\",\"718\",\"719\",\"720\",\"721\",\"722\",\"723\",\"724\",\"725\",\"726\",\"727\",\"728\",\"729\",\"730\",\"731\",\"732\",\"733\",\"734\",\"735\",\"736\",\"737\",\"738\",\"739\",\"740\",\"741\",\"742\",\"743\",\"744\",\"745\",\"746\",\"747\",\"748\",\"749\",\"750\",\"751\",\"752\",\"753\",\"754\",\"755\",\"756\",\"757\",\"758\",\"759\",\"760\",\"761\",\"762\",\"763\",\"764\",\"765\",\"766\",\"767\",\"768\",\"769\",\"770\",\"771\",\"772\",\"773\",\"774\",\"775\",\"776\",\"777\",\"778\",\"779\",\"780\",\"781\",\"782\",\"783\",\"784\",\"785\",\"786\",\"787\",\"788\",\"789\",\"790\",\"791\",\"792\",\"793\",\"794\",\"795\",\"796\",\"797\",\"798\",\"799\",\"800\",\"801\",\"802\",\"803\",\"804\",\"805\",\"806\",\"807\",\"808\",\"809\",\"810\",\"811\",\"812\",\"813\",\"814\",\"815\",\"816\",\"817\",\"818\",\"819\",\"820\",\"821\",\"822\",\"823\",\"824\",\"825\",\"826\",\"827\",\"828\",\"829\",\"830\",\"831\",\"832\",\"833\",\"834\",\"835\",\"836\",\"837\",\"838\",\"839\",\"840\",\"841\",\"842\",\"843\",\"844\",\"845\",\"846\",\"847\",\"848\",\"849\",\"850\",\"851\",\"852\",\"853\",\"854\",\"855\",\"856\",\"857\",\"858\",\"859\",\"860\",\"861\",\"862\",\"863\",\"864\",\"865\",\"866\",\"867\",\"868\",\"869\",\"870\",\"871\",\"872\",\"873\",\"874\",\"875\",\"876\",\"877\",\"878\",\"879\",\"880\",\"881\",\"882\",\"883\",\"884\",\"885\",\"886\",\"887\",\"888\",\"889\",\"890\",\"891\",\"892\",\"893\",\"894\",\"895\",\"896\",\"897\",\"898\",\"899\",\"900\",\"901\",\"902\",\"903\",\"904\",\"905\",\"906\",\"907\",\"908\",\"909\",\"910\",\"911\",\"912\",\"913\",\"914\",\"915\",\"916\",\"917\",\"918\",\"919\",\"920\",\"921\",\"922\",\"923\",\"924\",\"925\",\"926\",\"927\",\"928\",\"929\",\"930\",\"931\",\"932\",\"933\",\"934\",\"935\",\"936\",\"937\",\"938\",\"939\",\"940\",\"941\",\"942\",\"943\",\"944\",\"945\",\"946\",\"947\",\"948\",\"949\",\"950\",\"951\",\"952\",\"953\",\"954\",\"955\",\"956\",\"957\",\"958\",\"959\",\"960\",\"961\",\"962\",\"963\",\"964\",\"965\",\"966\",\"967\",\"968\",\"969\",\"970\",\"971\",\"972\",\"973\",\"974\",\"975\",\"976\",\"977\",\"978\",\"979\",\"980\",\"981\",\"982\",\"983\",\"984\",\"985\",\"986\",\"987\",\"988\",\"989\",\"990\",\"991\",\"992\",\"993\",\"994\",\"995\",\"996\",\"997\",\"998\",\"999\",\"1000\",\"1001\",\"1002\",\"1003\",\"1004\",\"1005\",\"1006\",\"1007\",\"1008\",\"1009\",\"1010\",\"1011\",\"1012\",\"1013\",\"1014\",\"1015\",\"1016\",\"1017\",\"1018\",\"1019\",\"1020\",\"1021\",\"1022\",\"1023\",\"1024\",\"1025\",\"1026\",\"1027\",\"1028\",\"1029\",\"1030\",\"1031\",\"1032\",\"1033\",\"1034\",\"1035\",\"1036\",\"1037\",\"1038\",\"1039\",\"1040\",\"1041\",\"1042\",\"1043\",\"1044\",\"1045\",\"1046\",\"1047\",\"1048\",\"1049\",\"1050\",\"1051\",\"1052\",\"1053\",\"1054\",\"1055\",\"1056\",\"1057\",\"1058\",\"1059\",\"1060\",\"1061\",\"1062\",\"1063\",\"1064\",\"1065\",\"1066\",\"1067\",\"1068\",\"1069\",\"1070\",\"1071\",\"1072\",\"1073\",\"1074\",\"1075\",\"1076\",\"1077\",\"1078\",\"1079\",\"1080\",\"1081\",\"1082\",\"1083\",\"1084\",\"1085\",\"1086\",\"1087\",\"1088\",\"1089\",\"1090\",\"1091\",\"1092\",\"1093\",\"1094\",\"1095\",\"1096\",\"1097\",\"1098\",\"1099\",\"1100\",\"1101\",\"1102\",\"1103\",\"1104\",\"1105\",\"1106\",\"1107\",\"1108\",\"1109\",\"1110\",\"1111\",\"1112\",\"1113\",\"1114\",\"1115\",\"1116\",\"1117\",\"1118\",\"1119\",\"1120\",\"1121\",\"1122\",\"1123\",\"1124\",\"1125\",\"1126\",\"1127\",\"1128\",\"1129\",\"1130\",\"1131\",\"1132\",\"1133\",\"1134\",\"1135\",\"1136\",\"1137\",\"1138\",\"1139\",\"1140\",\"1141\",\"1142\",\"1143\",\"1144\",\"1145\",\"1146\",\"1147\",\"1148\",\"1149\",\"1150\",\"1151\",\"1152\",\"1153\",\"1154\",\"1155\",\"1156\",\"1157\",\"1158\",\"1159\",\"1160\",\"1161\",\"1162\",\"1163\",\"1164\",\"1165\",\"1166\",\"1167\",\"1168\",\"1169\",\"1170\",\"1171\",\"1172\",\"1173\",\"1174\",\"1175\",\"1176\",\"1177\",\"1178\",\"1179\",\"1180\",\"1181\",\"1182\",\"1183\",\"1184\",\"1185\",\"1186\",\"1187\",\"1188\",\"1189\",\"1190\",\"1191\",\"1192\",\"1193\",\"1194\",\"1195\",\"1196\",\"1197\",\"1198\",\"1199\",\"1200\",\"1201\",\"1202\",\"1203\",\"1204\",\"1205\",\"1206\",\"1207\",\"1208\",\"1209\",\"1210\",\"1211\",\"1212\",\"1213\",\"1214\",\"1215\",\"1216\",\"1217\",\"1218\",\"1219\",\"1220\",\"1221\",\"1222\",\"1223\",\"1224\",\"1225\",\"1226\",\"1227\",\"1228\",\"1229\",\"1230\",\"1231\",\"1232\",\"1233\",\"1234\",\"1235\",\"1236\",\"1237\",\"1238\",\"1239\",\"1240\",\"1241\",\"1242\",\"1243\",\"1244\",\"1245\",\"1246\",\"1247\",\"1248\",\"1249\",\"1250\",\"1251\",\"1252\",\"1253\",\"1254\",\"1255\",\"1256\",\"1257\",\"1258\",\"1259\",\"1260\",\"1261\",\"1262\",\"1263\",\"1264\",\"1265\",\"1266\",\"1267\",\"1268\",\"1269\",\"1270\",\"1271\",\"1272\",\"1273\",\"1274\",\"1275\",\"1276\",\"1277\",\"1278\",\"1279\",\"1280\",\"1281\",\"1282\",\"1283\",\"1284\",\"1285\",\"1286\",\"1287\",\"1288\",\"1289\",\"1290\",\"1291\",\"1292\",\"1293\",\"1294\",\"1295\",\"1296\",\"1297\",\"1298\",\"1299\",\"1300\",\"1301\",\"1302\",\"1303\",\"1304\",\"1305\",\"1306\",\"1307\",\"1308\",\"1309\",\"1310\",\"1311\",\"1312\",\"1313\",\"1314\",\"1315\",\"1316\",\"1317\",\"1318\",\"1319\",\"1320\",\"1321\",\"1322\",\"1323\",\"1324\",\"1325\",\"1326\",\"1327\",\"1328\",\"1329\",\"1330\",\"1331\",\"1332\",\"1333\",\"1334\",\"1335\",\"1336\",\"1337\",\"1338\",\"1339\",\"1340\",\"1341\",\"1342\",\"1343\",\"1344\",\"1345\",\"1346\",\"1347\",\"1348\",\"1349\",\"1350\",\"1351\",\"1352\",\"1353\",\"1354\",\"1355\",\"1356\",\"1357\",\"1358\",\"1359\",\"1360\",\"1361\",\"1362\",\"1363\",\"1364\",\"1365\",\"1366\",\"1367\",\"1368\",\"1369\",\"1370\",\"1371\",\"1372\",\"1373\",\"1374\",\"1375\",\"1376\",\"1377\",\"1378\",\"1379\",\"1380\",\"1381\",\"1382\",\"1383\",\"1384\",\"1385\",\"1386\",\"1387\",\"1388\",\"1389\",\"1390\",\"1391\",\"1392\",\"1393\",\"1394\",\"1395\",\"1396\",\"1397\",\"1398\",\"1399\",\"1400\",\"1401\",\"1402\",\"1403\",\"1404\",\"1405\",\"1406\",\"1407\",\"1408\",\"1409\",\"1410\",\"1411\",\"1412\",\"1413\",\"1414\",\"1415\",\"1416\",\"1417\",\"1418\",\"1419\",\"1420\",\"1421\",\"1422\",\"1423\",\"1424\",\"1425\",\"1426\",\"1427\",\"1428\",\"1429\",\"1430\",\"1431\",\"1432\",\"1433\",\"1434\",\"1435\",\"1436\",\"1437\",\"1438\",\"1439\",\"1440\",\"1441\",\"1442\",\"1443\",\"1444\",\"1445\",\"1446\",\"1447\",\"1448\",\"1449\",\"1450\",\"1451\",\"1452\",\"1453\",\"1454\",\"1455\",\"1456\",\"1457\",\"1458\",\"1459\",\"1460\",\"1461\",\"1462\",\"1463\",\"1464\",\"1465\",\"1466\",\"1467\",\"1468\",\"1469\",\"1470\",\"1471\",\"1472\",\"1473\",\"1474\",\"1475\",\"1476\",\"1477\",\"1478\",\"1479\",\"1480\",\"1481\",\"1482\",\"1483\",\"1484\",\"1485\",\"1486\",\"1487\",\"1488\",\"1489\",\"1490\",\"1491\",\"1492\",\"1493\",\"1494\",\"1495\",\"1496\",\"1497\",\"1498\",\"1499\",\"1500\",\"1501\",\"1502\",\"1503\",\"1504\",\"1505\",\"1506\",\"1507\",\"1508\",\"1509\",\"1510\",\"1511\",\"1512\",\"1513\",\"1514\",\"1515\",\"1516\",\"1517\",\"1518\",\"1519\",\"1520\",\"1521\",\"1522\",\"1523\",\"1524\",\"1525\",\"1526\",\"1527\",\"1528\",\"1529\",\"1530\",\"1531\",\"1532\",\"1533\",\"1534\",\"1535\",\"1536\",\"1537\",\"1538\",\"1539\",\"1540\",\"1541\",\"1542\",\"1543\",\"1544\",\"1545\",\"1546\",\"1547\",\"1548\",\"1549\",\"1550\",\"1551\",\"1552\",\"1553\",\"1554\",\"1555\",\"1556\",\"1557\",\"1558\",\"1559\",\"1560\",\"1561\",\"1562\",\"1563\",\"1564\",\"1565\",\"1566\",\"1567\",\"1568\",\"1569\",\"1570\",\"1571\",\"1572\",\"1573\",\"1574\",\"1575\",\"1576\",\"1577\",\"1578\",\"1579\",\"1580\",\"1581\",\"1582\",\"1583\",\"1584\",\"1585\",\"1586\",\"1587\",\"1588\",\"1589\",\"1590\",\"1591\",\"1592\",\"1593\",\"1594\",\"1595\",\"1596\",\"1597\",\"1598\",\"1599\",\"1600\",\"1601\",\"1602\",\"1603\",\"1604\",\"1605\",\"1606\",\"1607\",\"1608\",\"1609\",\"1610\",\"1611\",\"1612\",\"1613\",\"1614\",\"1615\",\"1616\",\"1617\",\"1618\",\"1619\",\"1620\",\"1621\",\"1622\",\"1623\",\"1624\",\"1625\",\"1626\",\"1627\",\"1628\",\"1629\",\"1630\",\"1631\",\"1632\",\"1633\",\"1634\",\"1635\",\"1636\",\"1637\",\"1638\",\"1639\",\"1640\",\"1641\",\"1642\",\"1643\",\"1644\",\"1645\",\"1646\",\"1647\",\"1648\",\"1649\",\"1650\",\"1651\",\"1652\",\"1653\",\"1654\",\"1655\",\"1656\",\"1657\",\"1658\",\"1659\",\"1660\",\"1661\",\"1662\",\"1663\",\"1664\",\"1665\",\"1666\",\"1667\",\"1668\",\"1669\",\"1670\",\"1671\",\"1672\",\"1673\",\"1674\",\"1675\",\"1676\",\"1677\",\"1678\",\"1679\",\"1680\",\"1681\",\"1682\",\"1683\",\"1684\",\"1685\",\"1686\",\"1687\",\"1688\",\"1689\",\"1690\",\"1691\",\"1692\",\"1693\",\"1694\",\"1695\",\"1696\",\"1697\",\"1698\",\"1699\",\"1700\",\"1701\",\"1702\",\"1703\",\"1704\",\"1705\",\"1706\",\"1707\",\"1708\",\"1709\",\"1710\",\"1711\",\"1712\",\"1713\",\"1714\",\"1715\",\"1716\",\"1717\",\"1718\",\"1719\",\"1720\",\"1721\",\"1722\",\"1723\",\"1724\",\"1725\",\"1726\",\"1727\",\"1728\",\"1729\",\"1730\",\"1731\",\"1732\",\"1733\",\"1734\",\"1735\",\"1736\",\"1737\",\"1738\",\"1739\",\"1740\",\"1741\",\"1742\",\"1743\",\"1744\",\"1745\",\"1746\",\"1747\",\"1748\",\"1749\",\"1750\",\"1751\",\"1752\",\"1753\",\"1754\",\"1755\",\"1756\",\"1757\",\"1758\",\"1759\",\"1760\",\"1761\",\"1762\",\"1763\",\"1764\",\"1765\",\"1766\",\"1767\",\"1768\",\"1769\",\"1770\",\"1771\",\"1772\",\"1773\",\"1774\",\"1775\",\"1776\",\"1777\",\"1778\",\"1779\",\"1780\",\"1781\",\"1782\",\"1783\",\"1784\",\"1785\",\"1786\",\"1787\",\"1788\",\"1789\",\"1790\",\"1791\",\"1792\",\"1793\",\"1794\",\"1795\",\"1796\",\"1797\",\"1798\",\"1799\",\"1800\",\"1801\",\"1802\",\"1803\",\"1804\",\"1805\",\"1806\",\"1807\",\"1808\",\"1809\",\"1810\",\"1811\",\"1812\",\"1813\",\"1814\",\"1815\",\"1816\",\"1817\",\"1818\",\"1819\",\"1820\",\"1821\",\"1822\",\"1823\",\"1824\",\"1825\",\"1826\",\"1827\",\"1828\",\"1829\",\"1830\",\"1831\",\"1832\",\"1833\",\"1834\",\"1835\",\"1836\",\"1837\",\"1838\",\"1839\",\"1840\",\"1841\",\"1842\",\"1843\",\"1844\",\"1845\",\"1846\",\"1847\",\"1848\",\"1849\",\"1850\",\"1851\",\"1852\",\"1853\",\"1854\",\"1855\",\"1856\",\"1857\",\"1858\",\"1859\"],[\"Pabst Brewing Co.\",\"Miller Brewing Co.\",\"Anheuser-Busch, Inc\",\"Firestone Walker Brewing Co.\",\"Alaskan Brewing and Bottling Co.\",\"Boston Beer Co.\",\"Coors Brewing Co.\",\"New Belgium Brewing Co.\",\"Marin Brewing Co.\",\"New Glarus Brewing Co.\",\"Deschutes Brewery\",\"Pizza Port - Carlsbad\",\"Pelican Pub &amp; Brewery\",\"Saint Arnold Brewing Co.\",\"Snake River Brewing Co.\",\"Rock Bottom Breweries\",\"Sandlot Brewery at Coors Field\",\"Stoudt's Brewing Co.\",\"Goose Island Beer Co.\",\"Rogue Ales\",\"Stroh Brewery Co. (The)\",\"AleSmith Brewing Co.\",\"Barley Brown's Brew Pub\",\"Bear Republic Brewing Co.\",\"Flying Dog Brewery\",\"Redrock Brewing Co.\",\"Russian River Brewing Co.\",\"Sierra Nevada Brewing Co.\",\"Allagash Brewing Co.\",\"G. Heileman Brewing Co.\",\"Big Time Brewing Co.\",\"Boulevard Brewing Co.\",\"Elysian Brewing Co.\",\"Odell Brewing Co.\",\"Pennsylvania Brewing Co.\",\"Pizza Port - Solana Beach\",\"Widmer Brothers Brewing Co.\",\"Capital Brewery Co. Inc\",\"Chuckanut Brewery\",\"Left Hand Brewing Co.\",\"Steamworks Brewing Co.\",\"Sun King Brewing Co.\",\"TrC3=B6egs Brewing Co.\",\"Utah Brewers Cooperative\",\"Alaskan Brewing Co.\",\"Anchor Brewing Co.\",\"Devils Backbone Brewing Co. - Basecamp\",\"Flossmoor Station Brewing Co.\",\"Great Divide Brewing Co.\",\"Iron Hill Brewery &amp; Restaurant - Media\",\"Montana Brewing Co.\",\"Morgan Territory Brewing\",\"North Coast Brewing Co. Inc\",\"Piece Brewery\",\"Bend Brewing Co.\",\"Iron Hill Brewery &amp; Restaurant\",\"Jacob Leinenkugel Brewing Co.\",\"Minneapolis Town Hall Brewery\",\"Redwood Coast Brewing Co.\",\"Uinta Brewing Co.\",\"10 Barrel Brewing Co.\",\"Anderson Valley Brewing Co.\",\"Beachwood BBQ &amp; Brewing\",\"Bristol Brewing Co.\",\"Cannonball Creek Brewing Co.\",\"Seabright Brewery\",\"Springfield Brewing Co.\",\"Starr Hill Brewing Co.\",\"Summit Brewing Co.\",\"TAPS Fish House &amp; Brewery\",\"Tommyknocker Brewery\",\"Cambridge Brewing Co.\",\"Glenwood Canyon Brewing Co.\",\"Gordon Biersch Brewery Restaurant Group\",\"Great Lakes Brewing Co/Ohio\",\"Pacific Coast Brewing Co.\",\"Prescott Brewing Co.\",\"Rock Bottom Brewery\",\"Southampton Publick House\",\"Steelhead Brewing Co.\",\"August Schell Brewing Co.\",\"Baltimore Brewing Co.\",\"BJ's Restaurant &amp; Brewery\",\"Blind Tiger Brewery &amp; Restaurant\",\"Blue Moon Brewing Co.\",\"Chicago Brewing Co.\",\"Deschutes Brewery (No 2)\",\"Dogfish Head Craft Brewery\",\"Eel River Brewing Co.\",\"Elk Grove Brewery and Restaurant\",\"Empire Brewing Co.\",\"Flying Fish Brewing Co.\",\"Four Peaks Brewing Co.\",\"Full Sail Brewing Co.\",\"Mad River Brewing Co.\",\"Marble Brewery\",\"Old Dominion Brewing Co.\",\"Pizza Port Ocean Beach\",\"Real Ale Brewing Co.\",\"SandLot (The)\",\"Ska Brewing Co.\",\"Third Street AleWorks\",\"Thunder Canyon Brewery\",\"Angelic Brewing Co.\",\"Auburn Alehouse\",\"Avery Brewing Co.\",\"Big Dog's Brewing Co.\",\"Boscos Brewing Co.\",\"Captain Lawrence Brewing Co.\",\"Clipper City Brewing Co.\",\"Founders Brewing Co.\",\"Genesee/High Falls Brewing\",\"Main Street Brewery\",\"Millstream Brewing Co.\",\"Mountain Sun Pub and Brewery\",\"Pizza Port Carlsbad\",\"Port City Brewing Co.\",\"Silver City Brewery\",\"Sly Fox Brewing Co.\",\"Stewart's Brewing Co.\",\"Sudwerk Privatbrauerei Hubsch\",\"21st Amendment Brewery\",\"Ballast Point Brewing Co.\",\"Boundary Bay Brewery\",\"Capitol City Brewing Co.\",\"Devils Backbone Brewing Co.\",\"Devils Backbone Brewing Co. - Outpost\",\"Dry Dock Brewing Co.\",\"Fat Head's Brewery\",\"Foothills Brewing\",\"Great Adirondack Brewing Co.\",\"Great American Restaurants\",\"Great Basin Brewing Co.\",\"Great Dane Pub &amp; Brewing Co. (The)\",\"Grimm Brothers Brewhouse\",\"MillerCoors\",\"New Holland Brewing Co.\",\"Oggi's Pizza &amp; Brewing Co.\",\"Port Brewing Co.\",\"Stevens Point Brewery\",\"Sweetwater Brewing Co.\",\"Two Brothers Brewing Co.\",\"AC Golden Brewing Co.\",\"Altitude Chophouse and Brewery\",\"Appleton Brewing Co/Adler Brau\",\"Bastone Brewery\",\"Black Tooth Brewing Co.\",\"Breakside Brewery\",\"Brewery Ommegang\",\"Butterfield Brewing Co.\",\"Celis Brewery Inc\",\"Chama River Brewing Co.\",\"Cigar City Brewing\",\"Dry Dock Brewing Co. - South Dock\",\"Durango Brewing Co.\",\"Fat Head's Brewery &amp; Saloon\",\"Gordon Biersch Brewery Restaurants\",\"Great South Bay Brewery\",\"Green Flash Brewing Co.\",\"Hub City Brewery\",\"Hudepohl-Schoenling Brewing Co.\",\"Il Vicino Brewing Co.\",\"Jones Brewing Co.\",\"Laurelwood Brewing Co.\",\"Laurelwood Public House &amp; Brewery\",\"Left Hand/Tabernash Brewing\",\"Lewis &amp; Clark Brewing Co.\",\"Lion Brewery Inc (The)\",\"Long Valley Pub and Brewery\",\"McKenzie Brew House\",\"Moose's Tooth Brewing Co.\",\"Moylan's Brewing Co.\",\"Pelican Brewing Co.\",\"Perennial Artisan Ales\",\"Pizza Port Solana Beach\",\"Pyramid Breweries Inc\",\"Rockies Brewing Co.\",\"Rocky River Brewing Co.\",\"Saxer Brewing Co.\",\"Spoetzl Brewery (The)\",\"Squatters Pub Brewery\",\"Sun Valley Brewing Co.\",\"Telegraph Brewing Co.\",\"The Austin Beer Garden Brewing Co.\",\"The Commons Brewery\",\"Upslope Brewing Co.\",\"Wynkoop Brewing Co.\",\"Austin Beerworks\",\"Backcountry Brewery\",\"Barton Beers Ltd\",\"Big Horn Brewing Co.\",\"BJ's Restaurant &amp; Brewery - Chandler\",\"Blackstone Restaurant &amp; Brewery\",\"Blue Mountain Brewery\",\"Blue Point Brewing Co.\",\"Bluegrass Brewing Co.\",\"Boise Brewing\",\"Brewzzi\",\"Bull &amp; Bush Brewery\",\"Carver Brewing Co.\",\"Church Brew Works\",\"Claremont Craft Ales\",\"Community Beer Co.\",\"Copper Tank Brewing Co.\",\"Crooked River Brewing Co.\",\"Duck-Rabbit Craft Brewery\",\"El Toro Brewing Co.\",\"Firestone Walker Barrelworks\",\"Free State Brewing Co.\",\"Heavenly Daze Brewery &amp; Grill\",\"High Falls Brewing Co.\",\"Joseph Huber Brewing Co.\",\"Logboat Brewing Co.\",\"Mammoth Brewing\",\"Mickey Finn's Brewery\",\"Midnight Sun Brewing Co.\",\"Pete's Brewing Co.\",\"Plank Road Brewery\",\"Port Brewing Co. Pizza Port Carlsbad\",\"Portland Brewing Co.\",\"Pug Ryan's Brewery\",\"Pyramid Alehouse/Breweries Inc\",\"Red Rock Brewing Co.\",\"Redhook Ale Brewery\",\"Rock Bottom Brewery - Chicago\",\"Rockyard Brewing Co.\",\"Rubicon Brewing Co.\",\"Short's Brewing Co.\",\"Snake River Brewing\",\"Sprecher Brewing Co.\",\"Stoddard's Brewhouse &amp; Eatery\",\"The Bruery\",\"The Lost Abbey\",\"The Post Brewing Co.\",\"Triumph Brewing Co. of New Hope\",\"Twisted Pine Brewing Co.\",\"2SP Brewing Co.\",\"Alchemist (The)\",\"Alesong Brewing &amp; Blending\",\"Alltech's Lexington Brewing Co.\",\"Alpine Beer Co.\",\"Barley Brothers Brewery\",\"Bell's Brewery, Inc\",\"Bitter End Bistro &amp; Brewery\",\"Blitz-Weinhard Brewing Co.\",\"BNS Brewing &amp; Distilling Co.\",\"Bootstrap Brewing Co.\",\"Breakwater Brewing Co.\",\"Brink Brewing Co.\",\"Brown Truck Brewery\",\"Brugge Brasserie\",\"Bull and Bush Pub and Brewery\",\"Chelsea Brewing Co.\",\"Chuckanut Brewery - North Nut\",\"Comrade Brewing Co.\",\"Denver Beer Co.\",\"Echo Brewing Co.\",\"F.X. Matt Brewing Co.\",\"FiftyFifty Brewing Co.\",\"Figueroa Mountain Brewing Co.\",\"Fredericksburg Brewing Co.\",\"Funkwerks\",\"Gella's Diner and Lb. Brewing Co.\",\"Great Northern Brewing Co.\",\"Ground Breaker Brewing\",\"Hart Brewing, Inc\",\"Humboldt Brewery\",\"Independence Brewing Co.\",\"Iron Hill Brewery &amp; Restaurant - Newark\",\"Island Brewing Co.\",\"Jolly Pumpkin Artisan Ales\",\"Karl Strauss Brewing Co. - La Jolla\",\"Kern River Brewing Co.\",\"Kuhnhenn Brewing Co.\",\"La Cumbre Brewing Co.\",\"Lakefront Brewery Inc\",\"Long Trail Brewing Co.\",\"Lost Rhino Brewing Co.\",\"Lumberyard Brewing Co.\",\"McCoys Public House &amp; BrewKitchen\",\"Michigan Brewing Co.\",\"Minnesota Brewing\",\"New South Brewing\",\"Nodding Heading Brewing Co.\",\"O'Fallon Brewery\",\"Oskar Blues Brewery\",\"Pizza Port - San Clemente\",\"Pumphouse Brewery &amp; Restaurant\",\"Red Lodge Ales Brewing Co.\",\"Redfish New Orleans Brewhouse\",\"Redwood Brewing Co.\",\"Riip Beer Co.\",\"Rock Bottom Brewery - Bethesda\",\"Rock Bottom Brewery - Long Beach\",\"Saddle Mountain Brewing Co.\",\"Santa Fe Brewing Co.\",\"Sierra Blanca Brewing Co.\",\"Silver City Brewing Co.\",\"Sioux Falls Brewing Co.\",\"Spoetzl Brewery\",\"St. Ides Brewing Co.\",\"Steel Toe Brewing\",\"Stone Brewing Co.\",\"Sun King Brewery - Indianapolis\",\"Surly Brewing Co.\",\"SweetWater Brewing Co.\",\"Telluride Brewing Co.\",\"The SandLot\",\"Thirsty Dog Brewing Co.\",\"Titletown Brewing Co.\",\"Triple Rock Brewery and Alehouse\",\"Tustin Brewing Co.\",\"Uberbrew\",\"Upland Brewing Co.\",\"Upstream Brewing Co.\",\"Wander Brewing\",\"Waterloo Brewing Co.\",\"WeldWerks Brewing Co.\",\"Wolf Canyon Brewing Co.\",\"Yards Brewing Co.\",\"AC Golden\",\"Alameda Brewing Co.\",\"Alvarado Street Brewery &amp; Grill\",\"American Brewing Co.\",\"Amherst Brewing Co.\",\"Anheuser-Busch\",\"Atwater Block Brewing Co.\",\"Ballast Point Brewing &amp; Spirits - Scripps Ranch\",\"Bardo Rodeo\",\"Barley Brown's Beer\",\"Barley Island Brewing Co.\",\"Beachwood Blendery\",\"Birds Fly South Ale Project\",\"Black Bottle Brewery\",\"Black Diamond Brewing Co.\",\"Blackstone Brewing Co.\",\"Bootlegger's Brewery\",\"Bosque Brewing Co.\",\"Bottle Logic Brewing\",\"Breakside Brewery &amp; Taproom\",\"Breckenridge Brewery\",\"Brew Hub\",\"BridgePort Brewing Co.\",\"Brooklyn Brewery\",\"Brooklyn Brewery (The)\",\"C.H. Evans Brewing Co. at the Albany Pump Station\",\"Cambridge House Brewpub (The)\",\"Central Standard Brewing\",\"Central Waters Brewing Co.\",\"City Star Brewing\",\"Cloudburst Brewing\",\"Coastal Empire Beer Co.\",\"Colorado Boy Pub &amp; Brewery\",\"Columbus Brewing Co.\",\"Commonwealth Brewing Co.\",\"CooperSmith's Pub\",\"Corridor Brewery &amp; Provisions\",\"Cottonwood Brewery\",\"Covey Restaurant &amp; Brewery (The)\",\"Crooked Stave Artisan Beer Project\",\"Denver Beer Co. - Olde Town Arvada\",\"Desert Edge Brewery\",\"Detroit Beer Co. (The)\",\"Devil Mountain Brewery\",\"Diamondback Brewing Co.\",\"Dillon DAM Brewery\",\"Dock Street Brewery\",\"Dostal Alley Brewpub &amp; Casino\",\"Drake's Brewing Co.\",\"Earth Rider Brewery\",\"Elliott Bay Brewery Pub\",\"Figueroa Mountain Brewing\",\"Figueroa Mountain Brewing Co. - Santa Barbara\",\"FireHouse Grill &amp; Brewery\",\"Fish Brewing Co.\",\"Flat Branch Pub and Brewery\",\"Flat Tail Brewing Co.\",\"Flyers Restaurant and Brewery\",\"Frankenmuth Brewery Inc\",\"Frederick Brewing Co.\",\"Georgetown Brewing Co.\",\"Gezellig Brewing Co.\",\"Grains of Wrath Brewing\",\"Grand Teton Brewing Co.\",\"Grimm Artisanal Ales\",\"H.C. Berger Brewing\",\"Hailstorm Brewing Co.\",\"High Water Brewing\",\"Hillman Beer\",\"Hollister Brewing Co.\",\"Holy Cow!\",\"Hoppin' Frog Brewing Co.\",\"Hops Bistro And Brewery (No 1)\",\"Hoptown Brewing Co.\",\"Hopworks Urban Brewery\",\"Hubcap Brewery &amp; Kitchen - Dallas\",\"Humperdinks Restaurant and Brewery\",\"Huntington Beach Beer Co.\",\"J.T. Whitneys Pub &amp; Brewery\",\"James Page Brewing Co.\",\"Jos Schlitz Brewing Co.\",\"Kalamazoo Brewing\",\"Kansas City Bier Co.\",\"Karl Strauss Brewing Co.\",\"Karl Strauss Brewing Co. - San Diego\",\"Kern River Brewing Co. - The Backyard\",\"Kings Brewing Co.\",\"Knee Deep Brewing Co.\",\"Liberty Street Brewing Co.\",\"Lion Bridge Brewing Co.\",\"Logsdon Farmhouse Ales\",\"Lone Star Brewing Co.\",\"Lone Tree Brewing Co.\",\"Lynnwood Brewing Concern - Production Facility\",\"Mad Anthony Brewing Co.\",\"Mad Fox Brewing Co.\",\"Masthead Brewing Co.\",\"Maui Brewing Co.\",\"McKenzie River Partners\",\"McNeill's Brewery\",\"Melvin Brewing\",\"Mendocino Brewing Co.\",\"Metazoa Brewing Co.\",\"Michelob Brewing Co.\",\"Mill Brewery, Eatery &amp; Bakery\",\"Moonraker Brewing Co.\",\"Nebraska Brewing Co.\",\"NoDa Brewing Co. - NE\",\"Nodding Head Brewing Co.\",\"Oaken Barrel Brewing Co.\",\"Old Marlborough Brewing Co.\",\"Old Town Brewing\",\"Olde Hickory Brewery\",\"Pacific Brewing Co.\",\"Peticolas Brewing Co.\",\"pFriem Family Brewers\",\"Phantom Canyon Brewing Co.\",\"Philipsburg Brewing Co.\",\"Pike Brewing Co.\",\"Pinthouse Pizza North\",\"PIVO Brewery\",\"Pizza Port San Clemente\",\"Pollyanna Brewing Co.\",\"Pony Express Brewing Co.\",\"Port Brewing &amp; The Lost Abbey\",\"Portland Brewing Co. (No 2)\",\"Quarter Celtic Brewpub\",\"Rahr &amp; Sons Brewing Co.\",\"Rainier Brewing Co. Inc\",\"RAM International/Big Horn Brewing\",\"Ram Restaurant &amp; Brewery (Indianapolis)\",\"Redwood Curtain Brewing Co.\",\"Revelry Brewing Co.\",\"Revolution Brewing\",\"Rhino Chasers\",\"River's Edge Brewing Co.\",\"Rocky River Brewing Co. - Ohio\",\"Rowley Farmhouse Ales\",\"Salem Beer Works\",\"San Andreas Brewing Co.\",\"Schaefer Brewing Co.\",\"Schlitz Brewing Co.\",\"Second Chance Beer Co.\",\"Shoe Tree Brewing Co.\",\"Silver Moon Brewing\",\"SLO Brewing Co.\",\"Smuggler's Brewpub\",\"Smuttynose Brewing Co.\",\"Smylie Brothers Brewing Co.\",\"Societe Brewing Co.\",\"SouthNorte Beer Co.\",\"Steelhead Brewery &amp; Cafe\",\"Stereo Brewing Co.\",\"Stone Brewing World Bistro &amp; Gardens - Liberty Station\",\"Sudwerk Brewing Co.\",\"TAPS Fish House and Brewery - Corona\",\"Terrapin Beer Co.\",\"The Church Brew Works\",\"The Freehouse\",\"The Rare Barrel\",\"Third Space Brewing\",\"Three Floyds Brewing Co.\",\"Titanic Brewing Co.\",\"Trinity Brewing Co.\",\"Twenty Tank Brewery\",\"Valhalla Microbrewery &amp; Restaurant\",\"Victory Brewing Co.\",\"Walnut Brewery\",\"Water Street Brewery\",\"Weyerbacher Brewing Co.\",\"Wiley Roots Brewing Co.\",\"Willoughby Brewing Co. (The)\",\"Wolverine State Brewing Co.\",\"Yazoo Brewing Co.\",\"21st Amendment Brewery Caf=C3=A9\",\"5 Rabbit Cerveceria\",\"75th Street Brewery\",\"Adelbert's Brewery\",\"Aftershock Brewing Co.\",\"Alarmist Brewing\",\"Alcatraz Brewing Co\",\"Allentown/Bethlehem Brew Works\",\"Alvarado Street Brewery\",\"Alvarado Street Brewery &amp; Tasting Room\",\"Amicas\",\"Appalachian Mountain Brewery - Portsmouth\",\"Arcadia Brewing Co.\",\"Ardent Craft Ales\",\"Arizona Roadhouse and Brewery\",\"Armadillo Ale Works\",\"Aurochs Brewing Co.\",\"Back Bay Brewing Co.\",\"Baere Brewing Co.\",\"Bagby Beer Co.\",\"Baker City Brewing Co.\",\"Barrio Brewing Co.\",\"Basil Ts Brewpub &amp; Italian Grill\",\"Bear Republic Factory Five\",\"BearWaters Brewing Co.\",\"Beaver St. Brewery\",\"Bell's Brewery\",\"Bemidji Brewing Co.\",\"Bent Paddle Brewing Co.\",\"Big Horn Brewing Co. @ The Ram 1\",\"Big Rock Chop House &amp; Brewery\",\"Big Top Brewing Co.\",\"Bills Tavern and Brewhouse\",\"Bison Brewing Co.\",\"BJ's Pizza, Grill &amp; Brewery\",\"BJ's Restaurant &amp; Brewery - Boulder\",\"Black Market Brewing Co.\",\"Black Project Spontaneous &amp; Wild Ales\",\"Blackstone Restaurant\",\"Blind Pig Brewing Co.\",\"Bonn Place Brewing\",\"Bottoms Up Brewing Co.\",\"Boulder Beer Co.\",\"Boxing Bear Brewing Co.\",\"Brasserie Saint James\",\"Bravery Brewing\",\"Breakers Restaurant &amp; Brewpub\",\"Breckenridge Brewery Denver\",\"Brew Kettle Production Works (The)\",\"BrewWorks Restaurant\",\"Bullfrog Brewery\",\"C3=9Cberbrew\",\"Campbell Brewing Co.\",\"Canteen Brew House\",\"Capital Brewery Co.\",\"Carolina Brewery\",\"Carson's Brewery\",\"Cascade Brewery Co. LLC\",\"Castle Island Brewing Co.\",\"Castle Springs Brewing Co.\",\"CB &amp; Potts Restaurant &amp; Brewery - Highlands Ranch\",\"Central Coast Brewing Co.\",\"Chelsea Brewery\",\"Chicago Pizza/BJ's Brewery\",\"Coast Brewing Co.\",\"Coldfire Brewing\",\"Colorado Boy Brewing Co.\",\"Community Beer Works\",\"CooperSmith's Pub &amp; Brewing\",\"Corporate Ladder Brewing Co.\",\"Corralitos Brewing Co.\",\"Craft Brew Alliance - Kona Brewery\",\"Creature Comforts Brewing Co.\",\"Crooked Lane Brewing Co.\",\"Crow Hop Brewing Co.\",\"Culture Brewing Co.\",\"Danville Brewing Co.\",\"DC Brau Brewing Co.\",\"Del Norte Brewing Co.\",\"Dempsey's Ale House/Sonoma Brewing\",\"Detroit Beer Co.\",\"Discretion Brewing\",\"Docent Brewing\",\"Dry Dock Brewing Co. - North Dock\",\"Duck-Rabbit Craft Brewery Inc (The)\",\"Duck Foot Brewing Co.\",\"DuClaw Brewing Co.\",\"Dust Bowl Brewing Co.\",\"E.J. Phair Brewing Co.\",\"Eagle Rock Brewery\",\"El Segundo Brewing Co.\",\"Emmett's Tavern &amp; Brewing Co.\",\"Eppig Brewing\",\"Equinox Brewing\",\"Eugene City Brewery\",\"Evansville Brewing Co.\",\"Far West Brewing Co.\",\"Fat Head's Brewery - Canton\",\"Fat Head's Brewery - N. Olmstead\",\"Fat Heads Brewery\",\"Fat Heads Brewery &amp; Saloon\",\"FATE Brewing Co.\",\"Fegley's Allentown &amp; Bethlehem Brew Works\",\"Fegley's Brew Works\",\"Figueroa Mountain Brewing - Arroyo Grande\",\"Figueroa Mountain Brewing - Santa Barbara\",\"Figueroa Mountain Brewing - Westlake Village\",\"Figueroa Mountain Brewing Co. - Buellton\",\"Fitzpatrick's\",\"Florida Beer Co.\",\"Fonta Flora Brewery\",\"Foothills Brewing Co.\",\"Freetail Brewing Co.\",\"Front Range Brewing Co.\",\"Full Sail Brewing at Riverplace\",\"Ghostfish Brewing Co.\",\"Gibb's Hundred Brewing Co.\",\"Goat Patch Brewing Co.\",\"Golden City Brewery\",\"Golden Pacific Brewing Co.\",\"GoodLife Brewing Co.\",\"Gordon Biersch Brewery Restaurant\",\"Grapevine Craft Brewery\",\"Gravely Brewing Co.\",\"Gray Brewing Co.\",\"Great Basin Brewing Co. - Sparks\",\"Great Notion Brewing\",\"Green Cheek Beer Co.\",\"Gun Hill Brewing Co.\",\"Hardywood Park Craft Brewery\",\"Hardywood West Creek\",\"Harmon Restaurant &amp; Brewery\",\"Harvester Brewing\",\"Haverhill Brewery\",\"Heartland Brewing Co.\",\"Hereford &amp; Hops Brewpub\",\"Heretic Brewing Co.\",\"Heritage Brewing Co.\",\"Herkimer Pub and Brewery\",\"Historic Brewing Co.\",\"Hobbs Tavern &amp; Brewing Co.\",\"Hoffbrau Steaks Brewery\",\"Holy City Brewing\",\"Honolulu Brewing Co.\",\"Hop Dogma Brewing Co.\",\"Hope Brewing Co.\",\"Hoppers Grill &amp; Brewing Co.\",\"Hoppy Brewing Co.\",\"Hops Restaurant, Bar and Brewery\",\"Hubcap Brewery &amp; Kitchen\",\"IMBIB Custom Brews\",\"Institution Ale Co.\",\"Iron Hill Brewery &amp; Restaurant #1\",\"Iron Hill Brewery &amp; Restaurant #3\",\"Ithaca Beer Co.\",\"J.E. Siebel &amp; Sons Co. Inc\",\"Jack's Abby Brewing\",\"Jarre Creek Ranch Restaurant and Brewing Co.\",\"John HarvardE2=80=99s Brew House\",\"Joseph James Brewing Co.\",\"Kelmers Brewhouse\",\"Kessler Brewing Co.\",\"Kettlehouse Brewing Co.\",\"Kilowatt Brewing\",\"Kona Brewery LLC\",\"Kona Brewing Co.\",\"Lager Heads Brewing Co.\",\"Lakefront Brewery\",\"Leinenkugel's Ballyard Brewery\",\"Local Color Brewing Co.\",\"Lonerider Brewing Co.\",\"LoneRider Brewing Co.\",\"Lost Abbey (The)\",\"Lost Forty Brewing\",\"Magnolia Gastropub and Brewery\",\"Maize Valley Craft Brewery\",\"Maplewood Brewing Co.\",\"Market Garden Brewery\",\"Marley's Brewery &amp; Grille\",\"Max Lager's Wood-Fired Grill &amp; Brewery\",\"McCoy's Public House\",\"Meadowlark Brewing\",\"Mickey's Brewing Co.\",\"Millersburg Brewing\",\"Mirror Image Brewing Co.\",\"Mission Brewery\",\"MobCraft Beer\",\"Moon River Brewing Co.\",\"Moontown Brewing Co.\",\"Moosejaw Pizza and Brewing\",\"Mother Earth Brewing\",\"Napa Valley Brewing Co.\",\"Nectar Ales\",\"Neshaminy Creek Brewing Co.\",\"New Belgium Brewing Co. - Ft. Collins\",\"New England Brewing Co.\",\"New Helvetia Brewing Co.\",\"New River Brewing Co.\",\"New Terrain Brewing Co.\",\"Newport Beach Brewing Co.\",\"Nexus Brewery\",\"Ninkasi Brewing Co.\",\"No Clue Craft Brewery\",\"Noble Ale Works\",\"Oak Creek Brewing Co.\",\"Oakshire Brewing\",\"Oasis Brewery And Restaurant\",\"Oasis Brewery Annex\",\"Ocean Beach Brewery\",\"Odd Side Ales\",\"Odin Brewing Co.\",\"Ogopogo Brewing\",\"Old Town Brewing Co.\",\"Olde Saratoga Brewing Co.\",\"Oldenberg Brewery/Drawbridge\",\"Oregon Trail Brewery\",\"Otter Creek Brewing/Wolaver's Organic Ales\",\"Our Mutual Friend Brewing\",\"Overland Stage Stop Brewery\",\"Packinghouse Brewing Co.\",\"Pagosa Brewing &amp; Grill\",\"Pale Fire Brewing Co.\",\"Panther Island Brewing Co.\",\"Papago Brewing Co.\",\"Pearl Brewing Co.\",\"Pedernales Brewing Co.\",\"Penrose Brewing Co.\",\"Peter B's Brewpub\",\"Pilot Brewing Co.\",\"Pittsburgh Brewing Co\",\"Portsmouth Brewery\",\"Powerhouse Brewing Co. (The)\",\"Powerhouse Restaurant &amp; Brewery\",\"Propolis Brewing\",\"Ram Restaurant and Big Horn Brewery - Boise\",\"Ram Restaurant and Big Horn Brewery - Seattle\",\"RAM Restaurant and Brewery - Wheeling\",\"Red Brick-Atlanta Brewing Co.\",\"Red Leg Brewing Co.\",\"Red Rock Brewery - Production\",\"Redhook Ales - Woodinville\",\"Redhook Brewery Woodinville\",\"Reuben's Brews\",\"Reuben's Brews - The Taproom\",\"Reuben's Brews Taproom\",\"Right Brain Brewery\",\"Rikenjaks Brewing Co. Inc\",\"Rio Salado Brewing Co. Inc\",\"Rip Current Brewery\",\"Ritual Brewing Co.\",\"Riverside Brewing Co.\",\"Rock Bottom Brewery - Desert Ridge\",\"Rock Bottom Brewery - King of Prussia\",\"Rock Bottom Brewery - South Denver\",\"Rock Bottom Brewery - Westminster\",\"Rock Bottom Westminster\",\"Rocket Frog Brewing Co.\",\"Rockford Brewing Co.\",\"Rockyard American Grill &amp; Brewing Co.\",\"Root Down Brewing Co.\",\"Ruby Mountain Brewing Co. Inc\",\"Saint Archer Brewing Co.\",\"Santa Barbara Brewing Co.\",\"Santa Clara Valley Brewing\",\"Save the World Brewing Co.\",\"Save The World Brewing Co.\",\"Second Street Brewery\",\"Silver Harbor Brewing Co.\",\"Six Rivers Brewery\",\"SKA Brewing\",\"Skipping Rock Beer Co.\",\"Slesar Bros. Brewing Co.\",\"SLO Brewing Co. - San Luis Obispo\",\"Sly Fox Brewhouse &amp; Eatery\",\"Snake River Brewing Jackson\",\"Snipes Mountain Brewing Co.\",\"Snow Goose Restaurant\",\"Social Kitchen &amp; Brewery\",\"South Street Brewery\",\"Southern Oregon And Pacific\",\"Spanish Peaks Brewing Co.\",\"Spellbound Brewing\",\"Starr Hill Brewery\",\"Steelhead Brewing Co. - Eugene\",\"Stony Creek Brewery\",\"Storm Peak Brewing Co.\",\"Strange Brewing Co.\",\"Stuft Pizza &amp; Brewing Co.\",\"Sunriver Brewing\",\"Sweetwater Tavern &amp; Brewery\",\"Sycamore Brewing\",\"Tabernash Brewing Co.\",\"Tahoe Mountain Brewing Co. - Truckee\",\"TAPS Fish House &amp; Brewery - Brea\",\"TAPS Fish House &amp; Brewery - Corona\",\"Temperance Beer Co.\",\"Templin Family Brewing\",\"Thai Me Up Brewery\",\"The BottleHouse Brewery And Meadery\",\"The Duck-Rabbit Craft Brewery\",\"The Dudes' Brewing Co.\",\"The Olde Mecklenburg Brewery\",\"Third Street Aleworks\",\"Thirsty Dog Grille and Brewery\",\"Thomas Kemper Brewery\",\"Thr3e Wise Men Brewing Co.\",\"Three Creeks Brewing Co.\",\"Three Weavers Brewing Co.\",\"Tied House Cafe &amp; Brewery\",\"Triple C Brewing\",\"Triple Rock Brewery\",\"Trumer Brauerei Berkeley\",\"Two Rivers Brewing Co.\",\"Two Rows Restaurant &amp; Brewery\",\"Typhoon Brewery\",\"Uncle Billy's Brew &amp; Que\",\"Uncle Billy's Brew &amp; Que - Lake Travis\",\"Union Colony Brewery\",\"Upslope Brewing Co. - Flatiron Park\",\"USA Cafe\",\"Ventura Coast Brewing Co.\",\"Vermont Pub And Brewery\",\"Vintage Brewing Co.\",\"Wagner Brewing Co.\",\"Wagner Valley Brewing Co.\",\"Walking Tree Brewery\",\"Wasatch Brewery\",\"Wayfinder Beer\",\"West Brothers Brewery\",\"West O Beer\",\"Western Reserve Brewing\",\"Westwood Brewing Co.\",\"Wibby Brewing\",\"Wicked Weed Brewing\",\"Wild Duck Brewery &amp; Restaurant\",\"Wild River Brewing\",\"Wolf Pack Brewing Co.\",\"Wren House Brewing Co.\",\"Ybor City Brewing Co.\",\"Yegua Creek Brewing Co.\",\"Zuni Street Brewing Co.\",\"(512) Brewing Co.\",\"10 Barrel Brewing Co. - Bend Pub\",\"105 West Brewing Co.\",\"12Degree Brewing\",\"14th Star Brewing Co.\",\"1623 Brewing Co.\",\"217 Brew Works\",\"21st Amendment Brewery Cafe\",\"23rd Street Brewery\",\"4 Noses Brewing Co.\",\"49th State Brewing Co.\",\"5 Stones Artisan Brewery\",\"515 Brewing Co.\",\"5280 Roadhouse &amp; Brewery\",\"54C2=B0 40' Br=ewing Co.\",\"6 Bears &amp; A Goat Brewing Co.\",\"6th and La Brea\",\"75th Street Brewery Lawrence\",\"Aardwolf Brewing Co.\",\"Abita Brewing Co.\",\"Acadian Brewing Co.\",\"Accomplice Beer Co.\",\"Adirondack Pub and Brewery\",\"Aeronaut Brewing Co.\",\"Against the Grain Brewery\",\"Ahnapee Brewery\",\"Aiken Brewing Co.\",\"Airways Brewing Co.\",\"Alameda Brewhouse\",\"Alaro Craft Brewery\",\"Alesong Brewing &amp; Blending - Tasting Room\",\"Alesong Brewing &amp; Tasting Room\",\"ALT Brew\",\"Altitude Chophouse &amp; Brewery\",\"Altstadt Brewery\",\"Americas Brewing Co/Walter Paytons Roundhouse\",\"Amicas Pizza, Microbrews and More\",\"Appalachian Mountain Brewery - Boone\",\"Arch Rock Brewing Co.\",\"Argus Brewery\",\"Arkane Aleworks\",\"Arrow Lodge Brewing\",\"Artifex Brewing Co.\",\"Arts District Brewing Co.\",\"Aspen Beer Co.\",\"Aspen Brewing Co.\",\"Aspetuck Brew Lab\",\"Attic Brewing Co.\",\"Augsburger Brewing Co.\",\"Augusta Brewing Co.\",\"Babe's Bar-B-Que &amp; Brewhouse\",\"Back East Brewing\",\"Back Street Brewery - Vista\",\"Badger Hill Brewing\",\"Bale Breaker Brewing Co.\",\"Ballast Point Brewing Co. - Chicago\",\"Ballast Point Brewing Co. - Home Brew Mart\",\"Banded Oak Brewing Co.\",\"Bankhead Brewing Co.\",\"Barebottle Brewing Co.\",\"Barley's Casino &amp; Brewing Co.\",\"Barley's Casino &amp;amp; Brewing Co.\",\"Barley Brothers Brewery &amp; Grill\",\"Barley Brothers Brewery and Grill\",\"Barley Brown's Brewpub\",\"Barley Forge Brewing\",\"Barley Naked Brewing Co.\",\"Barrel Mountain Brewing\",\"Barrel Theory Beer Co.\",\"Barren Hill Tavern and Brewery\",\"Bartlett Hall\",\"Base Camp Brewing Co.\",\"Batch Brewing Co.\",\"Bavarian Brewing Co. Ltd\",\"Baxter Brewing Co.\",\"Beachwood Brewing\",\"Beale's\",\"Bear Chase Brewing Co.\",\"Bear Republic Brewing Co. - Factory 5\",\"Bear Republic Brewing Co. - Healdsburg\",\"Bear Republic Brewing Co. - Production Facility\",\"Bear Republic Brewing Co. Factory Five\",\"Beartooth Brewing Co.\",\"Beaver Island Brewing Co.\",\"Beaver Street Brewery\",\"Beaver Street Brewery &amp; Whistle Stop CafC3=A9\",\"Begyle Brewing\",\"Bell's Eccentric Cafe\",\"Bellows Brew Crew (The)\",\"Benchmark Brewing Co.\",\"Benchtop Brewing Co.\",\"Bent River Brewing Co.\",\"Berghoff-Huber Brewing Co.\",\"Bethlehem Brew Works\",\"Bier Brewery\",\"Bier Brewery and Taproom\",\"Big aLICe Brewing Co.\",\"Big Bear Brewing Co.\",\"Big Bend Brewing Co.\",\"Big Buck Brewery and Steakhouse, Auburn Hills\",\"Big Grove Brewery\",\"Big Horn Brewing Co. @ Humperdink's\",\"Big Horn Brewing Co. @ The Ram 2\",\"Big Horn Brewing Co./CB-Potts\",\"Big Horn Brewing Co./RAM - Indianapolis\",\"Big House Brewing Co.\",\"Big Island Brewhaus\",\"Big River Grille and Brewing\",\"Big Rock Chop &amp; Brew House\",\"Big Rock Chop House\",\"Big Sexy Brewing Co.\",\"Big Sky Brewing Co.\",\"Big Time Brewery\",\"Big Ugly Brewing\",\"Bingo Beer Co.\",\"Bitter End Brewery\",\"Bitter Sisters Brewing Co.\",\"BJ's Grill &amp; Brewery\",\"BJ's Restaurant &amp; Brewery - Brea\",\"BJ's Restaurant &amp; Brewery - Portland, OR\",\"BJ's Restaurant &amp; Brewery - Reno\",\"BJ's Restaurant &amp; Brewery - Reno, NV &amp; Chandler, AZ\",\"BJ's Restaurant &amp; Brewery - Temple\",\"BJ's Restaurant &amp;amp; Brewery - Woodland Hills\",\"Black Forest Brew Haus LLC\",\"Black Mountain Brewing Co.\",\"Black Raven Brewing Co.\",\"Black Star Co-op\",\"Black Star Co-op Pub and Brewery\",\"Blackberry Farm Brewery\",\"Blind Owl Brewery\",\"Blind Tiger Brewery &amp;amp; Restaurant\",\"Blind Tiger Brewery Pub &amp; Play\",\"Block 15\",\"Block 15 Brewing Co.\",\"Blue Corn Brewery\",\"Blue Corn Caf=C3=A9 &amp; Brewery\",\"Blue Corn CafC3=A9 &amp; Brewery\",\"Blue Corn CafC3=A9 and Brewery\",\"Blue Mountain Barrel House\",\"Blue Mountain Barrel House and Organic Brewery\",\"Blue Pants Brewery\",\"Bluebird Brasserie\",\"Bob's House of Brews\",\"Bohannon Brewing Co.\",\"Bohemian Brewery\",\"Bombshell Beer Co.\",\"Bond Brothers Beer Co.\",\"Bonfire Brewing\",\"Bootstrap Brewing\",\"Boscos Little Rock Brewing Co.\",\"Boston Beer Works\",\"Bowigens Beer Co.\",\"Bradley's Restaurant\",\"Brasserie Monx Ltd\",\"Bravus Brewing Co.\",\"Breakside Brewery - Milwaukie Brewery\",\"Breakside Brewery - Pub Brewery\",\"Breakside Brewery + Beer Hall\",\"Brew Bus Brewing\",\"Brew Moon Enterprises Inc\",\"Brew Moon Restaurant &amp; Microbrewery\",\"Brew Moon South Shore Mall Ventures\",\"BrewDog Brewing Co.\",\"Brewer's Alley Restaurant &amp; Brewery\",\"Brewer's Alley Restaurant and Brewery\",\"Brewers Alley\",\"Brewery Rickoli\",\"Brewery Silvaticus\",\"Brewery Vivant\",\"Brewski Brewing Co.\",\"Brickstone Brewery\",\"Brickway Brewery &amp; Distillery\",\"Bridger Brewing\",\"Brimstone Brewing Co.\",\"Broad Ripple Brewing Co.\",\"Broadway Brewing\",\"Broken Compass Brewing\",\"Broken Plow Brewery\",\"Broken Tooth Brewing\",\"Bron Yr Aur Brewing Co.\",\"Brothers Craft Brewing\",\"BRU Handbuilt Ales &amp; Eats\",\"Bruery (The)\",\"Bruery Terreux\",\"Bruz Beers\",\"BTU Brasserie\",\"Buckhead Brewery &amp; Grill (The)\",\"Bull &amp;amp; Bush Brewery\",\"Bull Island Brewing Co.\",\"Bulldog Brewing Co.\",\"Buoy Beer Co.\",\"Burgeon Beer Co.\",\"Burke-Gilman Brewing Co.\",\"Burnside Brewing Co.\",\"Butcherknife Brewing Co.\",\"Butte Creek Brewing Co.\",\"Buzzards Bay Brewing\",\"C.B. &amp; Potts Restaurant &amp; Brewery - Westminster\",\"C.B. &amp; Potts Restaurant &amp;amp; Brewery - Fort Collins\",\"C.B. &amp; Potts Restaurant &amp;amp; Brewery - Westminster\",\"C.B. &amp; Potts/Big Horn Brewing\",\"C.B. Potts Restaurant &amp; Brewery (Fort Collins)\",\"Cabin Boys Brewery\",\"Caldera Brewing Co.\",\"Calhoun's Restaurant &amp; Brewing Co. of Harrisonburg, VA\",\"Cape May Brewing Co. - Rio Grande\",\"Capitol City Brewing Co. - Capitol Hill\",\"Captain Fatty's\",\"Carbondale Craft Beer\",\"Carolina Brewery - Chapel Hill\",\"Carter's Brewing\",\"Casa Agria Specialty Ales\",\"Cascade Lakes Brewing Co.\",\"CB &amp; Pott's Big Horn Brewery (Fort Collins)\",\"CB &amp; Potts Big Horn Brewery (Denver Tec)\",\"CB &amp; Potts Restaurant &amp; Brewery - Flatirons/Westminster\",\"CB &amp; Potts Restaurant &amp; Brewery - Fort Collins\",\"CB and Potts Restaurant and Brewery - Highlands Ranch\",\"Cedar Creek Brewery\",\"Cedar Springs Brewing Co.\",\"Cellar West Artisan Ales\",\"Cellar Works Brewing Co.\",\"Cerebral Brewing\",\"CervecerC3=ADa Colorado\",\"Cervecerias La Cruda\",\"Chainline Brewing Co.\",\"Champion Brewing Co.\",\"Charleville Vineyard &amp; Microbrewery\",\"Charlie And Jake's Brewery\",\"Cheluna Brewing Co.\",\"Cherryland Brewpub\",\"Chesapeake Bay Brewing Co.\",\"Chicago Brewing Co. - Las Vegas\",\"Chicago Brewing Co. - NV\",\"Chihuahua Cerveza\",\"Chilly Water Brewing Co.\",\"choc Beer Co.\",\"Choc Beer Co.\",\"ChopHouse and Brewery-Cleveland\",\"Christian Moerlein Brewing Co.\",\"Chuckanut - South Nut\",\"Chuckanut Brewery - South Nut\",\"Chula Vista Brewery\",\"Church Brew Works - Lawrenceville Brewery\",\"Cinder Block Brewery\",\"Circle Brewing Co.\",\"Cisco Brewers\",\"Cismontane Brewing Co.\",\"City Brewing Co.\",\"CJ's Brewery &amp; Grill\",\"Clandestine Brewing\",\"Cleveland Brewing Co.\",\"CO-Brew\",\"Coal Creek TAP\",\"Coast Brewing Co./Beau Rivage Resort\",\"Coast Range Brewing Co.\",\"Coda Brewing Co.\",\"CODA Brewing Co.\",\"Coeur D'Alene Brewing Co.\",\"Cogstone Brewing Co.\",\"Colorado Brewery &amp; Trading Co.\",\"Columbia Craft Brewing Co.\",\"Columbia River Brewing Co.\",\"Coors Archive Brewery\",\"Copper Club Brewing Co.\",\"Copperpoint Brewing Co.\",\"Coppertail Brewing\",\"Coronado Brewing Co.\",\"Coronado Brewing Company Brewpub\",\"Cowboy Restaurant &amp; Brewery (The)\",\"Coyote Springs Brewing Co.\",\"Crabtree Brewing Co.\",\"Craft Brew Alliance - Omission\",\"Craft Brew Alliance - Widmer\",\"Crank Arm Brewing Co.\",\"Cranker's Brewery\",\"Crested Butte Brewery\",\"Crooked Can Brewing Co.\",\"Crossbuck Brewing\",\"Currahee Brewing Co.\",\"Custom Brewcrafters Inc\",\"D. G. Yuengling &amp; Son Inc\",\"D9 Brewing Co.\",\"Dakota Brewing Co.\",\"Dale Bros Brewery\",\"Dale Bros. Brewery\",\"Dark Horse Brewing Co.\",\"Del Cielo Brewing Co.\",\"Delafield Brewhaus\",\"Dells Brewing Co.\",\"Denver Beer Co. - Canworks\",\"Deschutes Brewery Bend Public House\",\"Desperate Times Brewing Co.\",\"DESTIHL\",\"DESTIHL - Champaign\",\"Devil's Creek Brewery\",\"Devil's Logic Brewing\",\"Devils Backbone Brewing Co. - Outpost Production Facility\",\"Diamond Bear Brewing Co.\",\"Diebolt Brewing Co.\",\"Dillon Dam Brewery\",\"Dilworth Micro Brewery\",\"Divine Barrel Brewing\",\"Dixie Brewing Co. Inc\",\"Dock Street Brewing Co.\",\"DOG Brewing Co.\",\"Dogwood Brewing Co.\",\"Dornbusch Brewing Co.\",\"Dos Desperados Brewery\",\"Draught Works\",\"Dry Dock Brewing Co.- North Dock\",\"Dry Dock Brewing Co. - Production Facility\",\"Dueces Wild Brewery\",\"Earth - Bread + Brewery\",\"East Brother Beer Co.\",\"East Rock Brewing Co.\",\"Echo Brewing Cask and Barrel\",\"EdmundE2=80=99s Oast Brewing Co.\",\"Ei8ht Ball Brewing\",\"El Rancho Brewing\",\"Elevator Brewing Co.\",\"Elk Horn Brewery\",\"Elk Mountain Brewing Co.\",\"Elm City Brewing Co.\",\"Emmett's Brewing Co.\",\"Emmett's Brewing Co. - Wheaton\",\"Emmett's Tavern &amp; Brewing Co. - Palatine\",\"Enegren Brewing Co.\",\"Engine House #9 Restaurant &amp; Brewery\",\"Epic Brewing Co. LLC\",\"Epidemic Ales\",\"Equinox Brewing Co.\",\"Erie Brewing Co.\",\"Eris Brewery and Cider House\",\"Estes Park Brewery\",\"Etna Brewing Co.\",\"Eureka Heights Brew Co.\",\"Eureka Heights Brewing Co.\",\"Evasion Brewing - Production Facility\",\"Ex Novo Brewing Co.\",\"Excel Brewing Co.\",\"Exile Brewing\",\"Faction Brewing Co.\",\"Fair Winds Brewing Co.\",\"Family Business Beer Co.\",\"Fargo Brewing Co.\",\"Fat Head's Brewery - Portland\",\"Fat Head's Brewery &amp;amp; Saloon\",\"Fate Brewing Co.\",\"Fate Brewing Co. - Scottsdale, AZ\",\"Feather Falls Brewing Co.\",\"Ferment Brewing Co.\",\"Fifty West Brewing Co.\",\"FiftyFifty Brewing - Production Facility\",\"Figueroa Mountain Brewing - Buellton\",\"Figurehead Brewing Co.\",\"Finkel &amp; Garf Brewing Co.\",\"Firestone Walker Brewing Co. - The Propagator\",\"Fitger's Brewhouse\",\"Fitgers Brewhouse\",\"Flix Brewhouse\",\"Flix Brewhouse - Carmel\",\"Flying Aces Brewing Co.\",\"Folklore Brewing &amp; Meadery\",\"Former Future Brewing Co.\",\"Fort Collins Brewery\",\"Fort Collins Brewery (The)\",\"Fortside Brewing Co.\",\"Founders Restaurant &amp; Brewing Co.\",\"Four Day Ray Brewing\",\"Four Seasons Brewing Co.\",\"Fox River Brewing Co./Fratellos\",\"Free Will Brewing Co.\",\"Freetail Brewing Co. - Brewpub\",\"Fremont Brewing Co.\",\"Fretboard Brewing Co.\",\"Friends Brewing Co.\",\"Full Pint Brewing Co.\",\"Fulton Beer\",\"Funky Buddha Brewery\",\"GameCraft Brewing\",\"Garage Brewing Co.\",\"Garage Brewing Co. &amp; Pizzeria\",\"Gella's Diner &amp; Lb. Brewing Co.\",\"General Lafayette Inn &amp; Brewery\",\"Ghost River Brewing\",\"Ghostfish Brewing Company\",\"Gilbert Robinson Inc\",\"Gilded Otter Brewing Co.\",\"Glacier Brewhouse\",\"Glasscock Brewing Co.\",\"Gluek Brewing Co./Reflo Inc\",\"Golden Road Brewing\",\"Golden Road Brewing - Los Angeles\",\"Golden Valley Brewery and Pub\",\"Goldwater Brewing Co.\",\"Good River Beer\",\"Goose Island Brewpub\",\"Gordon Biersch Brewery Restaurant - Annapolis\",\"Gordon Biersch Brewery Restaurant - Navy Yard\",\"Gordon Biersch Brewery Restaurant - Rockville, MD\",\"Gordon Biersch Brewery Restaurant - Tysons Corner\",\"Gordon Biersch Brewing Co.\",\"Grand Teton Brewing\",\"Granite City Food &amp; Brewery\",\"Great American Restaurants - Sweetwater Tavern\",\"Great American Restaurants - Sweetwater Tavern Centreville\",\"Great Basin Brewing Co. - Production Facility\",\"Great Basin Brewing Co. - Reno\",\"Great Heights Brewing Co.\",\"Greenview Brewing\",\"Grist Brewing Co.\",\"Grumpy Troll Brewery, Restaurant &amp; Pizzeria (The)\",\"Gunnison Brewery\",\"Gunwhale Ales\",\"H.H. Hinder Brewing Co.\",\"Hale's Ales Brewery &amp; Pub\",\"Hale's Ales Brewery &amp;amp; Pub\",\"Half Acre Beer Co.\",\"Ham's Restaurant &amp; Brewhouse\",\"Ham's Restaurant &amp;amp; Brewhouse\",\"Hamm's Brewing Co.\",\"Hangar 24 Craft Brewery\",\"Harpoon Brewery\",\"Haymarket Pub &amp; Brewery\",\"Headlands Brewing Co.\",\"Heartland Brewery\",\"Heavy Seas Beer\",\"Heileman Brewing Co.\",\"Helltown Brewing\",\"Henderson Brewing Co.\",\"Henry Weinhard's Brewing\",\"Heritage Hill Brewhouse &amp; Kitchen\",\"Heroes Restaurant and Brewery\",\"Hi-Wire Brewing - Big Top Production Facility\",\"Hi-Wire Brewing - South Slope\",\"Hibernia Brewing Co.\",\"High Heel Brewing\",\"High Hops Brewery\",\"High Noon Saloon &amp; Brewery\",\"High Point Brewing Corp\",\"High Sierra Brewing Co.\",\"Highland Brewing Co.\",\"Highland Park Brewery\",\"HofbrauHaus Brewery &amp; Biergarten at Station Casino\",\"HofbrC3=A4uhaus Clevelan=d\",\"Holidaily Brewing Co.\",\"Holler Brewing Co.\",\"Hook &amp; Ladder Brewing Co.\",\"Hoppers Brooker Creek Grille &amp; Tap Room\",\"Hoppers Grill &amp;amp; Brewing Co.\",\"Hoppin' Frog Brewing\",\"Hopping Gnome Brewing Co.\",\"Hops Bistro &amp; Brewery\",\"HOPS! Bistro &amp; Brewery\",\"HopSaint Brewing Co.\",\"Horse Thief Hollow\",\"Horse Thief Hollow Brewery\",\"Horse Thief Hollow Brewing Co.\",\"Houston Brewery\",\"Hubcap Brewery &amp;amp; Kitchen - Dallas\",\"Humperdink's Restaurant and Brewery\",\"Humperdinks Big Horn Brewing\",\"Huss Brewing Co.\",\"Hutton &amp; Smith Brewing Co.\",\"Hutton &amp; Smith Brewing Co. - M. L. King\",\"Hyde Park Brewing Co.\",\"Idle Spur\",\"Ignite Brewing Co.\",\"IL Vicino Brewing Co.\",\"Indeed Brewing Co.\",\"Independent Brewing Co.\",\"Insight Brewing Co.\",\"Iowa Brewing Co.\",\"Irish Times Pub &amp; Brewery\",\"Iron Hill Brewery &amp; Restaurant - Phoenixville\",\"Iron Hill Brewery &amp; Restaurant - West Chester\",\"Iron Hill Brewery &amp; Restaurant - Wilmington\",\"Iron Hill Brewery &amp; Restaurant #2\",\"Iron Hill Brewery &amp;amp; Restaurant\",\"Iron Hill Brewery &amp;amp; Restaurant - Lancaster\",\"Iron Hill Restaurant and Brewery\",\"Iron Triangle Brewing Co.\",\"Ironworks Brewery &amp; Pub\",\"Ironworks Pub\",\"Irwin Brewing Co.\",\"Issaquah Brewhouse\",\"Issaquah Brewhouse - Rogue Ales\",\"J.J. Bitting Brewing Co.\",\"Jack's Abby Craft Lagers\",\"Jack Pine Brewery\",\"JAFB Wooster Brewery\",\"Jaxon's Restaurant &amp; Brewing\",\"Jekyll Brewing\",\"Jessup Farm Barrel House\",\"John Harvard's Brew House #2\",\"John Harvard=E2=80=99s Brew House\",\"John HarvardE2=80=99s Br=ew House\",\"John HarvardE2=80=99s Brew =House\",\"John HarvardE2=80=99s Brew Ho=use\",\"Jones Street Brewery\",\"Joyride Brewing Co.\",\"Jump Cafe\",\"Jupiter Brewpub\",\"Kane Brewing Co.\",\"Karbach Brewing Co.\",\"Karl Strauss Brewing Co. - Anaheim\",\"Karl Strauss Brewing Co. - Carlsbad\",\"Karl Strauss Brewing Co. - Costa Mesa\",\"Kern River Brewing\",\"KettleHouse Brewing Co.\",\"Kidders Brewpub\",\"Kiitos Brewing\",\"Kinetic Brewing Co.\",\"Kohola Brewery\",\"Kootenai River Brewing Co.\",\"Kulshan Brewing Co.\",\"La Conner Brewing Co.\",\"La Reforma\",\"LaConner Brewing Co.\",\"Lake Tahoe Brewing Co. Inc\",\"Lakes &amp;amp; Legends Brewing Co.\",\"Lamplighter Brewing Co.\",\"Lander Brewing Co.\",\"Latitude 42=C2=B0 Brewing Co.\",\"Latrobe Brewing Co.\",\"LauderAle\",\"Laughing Dog Brewing\",\"Launch Pad Brewery\",\"Lavery Brewing Co.\",\"Lawrenceville Brewing Co.\",\"Lawson's Finest Liquids\",\"Lazarus Brewing Co.\",\"LazyG Brewhouse\",\"Leavenworth Brewery\",\"Left Coast Brewing Co.\",\"Leinenkugel Brewing Co.\",\"Level Crossing Brewing Co.\",\"Lexington Avenue Brewery\",\"Lickinghole Creek Craft Brewery\",\"Light the Lamp Brewery\",\"Lind Brewing Co.\",\"Liquid Mechanics Brewing Co.\",\"Listermann Brewing Co.\",\"Little Brother Brewing\",\"Little City Brewing Co.\",\"Little Machine\",\"Live Oak Brewing Co.\",\"Living the Dream Brewing Co.\",\"Lock 27 Brewing\",\"Lockport Brewery\",\"Logsdon Organic Farm Brewery\",\"Lompoc Brewing - The 5th Quadrant\",\"Lone Pine Brewing Co.\",\"Lone Pine Brewing Co. - Gorham Tasting Room\",\"Lonetree Brewing Ltd\",\"Los Gatos Brewing Co.\",\"Lost Coast Brewery and CafC3=A9\",\"Louisiana Jack's\",\"Loveland Aleworks\",\"Low Tide Brewing\",\"LowDown Brewery + Kitchen\",\"Lucky Envelope Brewing\",\"Lucky Luke Brewing Co.\",\"Lynnwood Brewing Concern\",\"MacTarnahan's Brewing Co.\",\"MacTarnahan's Portland Brewing Co.\",\"MadeWest Brewing Co.\",\"Madison River Brewing Co.\",\"MadTree Brewing 2.0\",\"Magnolia Gastropub &amp; Brewery\",\"Main &amp; Six Brewing Co.\",\"Mankato Brewery\",\"MAP Brewing Co.\",\"Maplewood Brewery\",\"Marble Brewery - Mav Lab\",\"Marble Brewery - Production\",\"Market Garden Brewery - Production Brewery\",\"Martha's Exchange\",\"Mash House Restaurant &amp; Brewing Co. (The)\",\"Maui Brewing Co. - Brewpub\",\"Maui Brewing Co. - Production\",\"Maui Brewing Co./Fish &amp; Game Rotisserie\",\"Maui Brewing Co./Fish &amp;amp; Game Rotisserie\",\"Mayflower Brewing Co.\",\"Mazama Brewing Co.\",\"McCoy's Public House and Brewkitchen\",\"McFleshman's Brewing Co.\",\"McHale's Brewhouse\",\"Melvin Brewing - Thai Me Up\",\"Melvin Brewing Co.\",\"Metazoa Brewing Co. - Stringtown Production Facility\",\"Metazoa Brewing Co. - Taproom\",\"Midland Brewing Co.\",\"Midnight Pig Beer\",\"Midwest Coast Brewing Co.\",\"Migration Brewing Co.\",\"Migration Brewing Co. - Glisan\",\"Mile High Brewing Co.\",\"Mile Wide Beer Co.\",\"Minocqua Brewing Co.\",\"Mishawaka Brewing Co.\",\"Mispillion River Brewing\",\"Missoula Brewing Co.\",\"Moab Brewery\",\"Modist Brewing Co.\",\"Moksa Brewing Co.\",\"Monday Night Brewing\",\"Monday Night Brewing - Garage\",\"Monkey Paw Brewing\",\"Monkey Paw Brewing Co.\",\"Monkless Belgian Ales\",\"Montgomery Brewing Co.\",\"Moonraker Brewing Co. - Production Facility\",\"Morgan Street Brewery\",\"Mother's Brewing Co.\",\"Mother Earth Brew Co.\",\"Motorworks Brewing\",\"MotoSonora Brewing Co.\",\"Mountain Valley Brew Pub\",\"Moylan's Brewery &amp; Restaurant\",\"Mraz Brewing Co.\",\"Munkle Brewing Co.\",\"Mystery Brewing Co.\",\"Napa Smith Brewery\",\"Narragansett Brewing Co.\",\"Nashville Brewing Co.\",\"Native Brewing Co.\",\"Nebraska Brewing Co. - Papillion\",\"Nedloh Brewing Co.\",\"Neshaminy Creek Brewing\",\"Neuweiler Brewing Co. Inc\",\"Nevin's Brewing Co.\",\"New Bohemia Brewing Co.\",\"New English Brewing Co.\",\"New Glarus Brewing Co. - Hilltop\",\"New Magnolia Brewing Co.\",\"New Mexico Brewers Guild\",\"New Planet Beer Co.\",\"New Road Brew House\",\"New Trail Brewing Co.\",\"Night Shift Brewing\",\"Nine-Band Brewing Co.\",\"No-Li Brewhouse\",\"Noble Beast Brewing Co.\",\"NoDa Brewing Co. - Davidson\",\"Noon Whistle Brewing Co.\",\"Nor'wester Brewery\",\"North By Northwest Restaurant and Brewery - Slaughter\",\"North East Brewing Co. Inc\",\"North Park Beer Co.\",\"O'Connor Brewing Co.\",\"O'so Brewing\",\"O.H.S.O. Brewery - Gilbert\",\"O.H.S.O. Brewery + Distillery\",\"Oak Highlands Brewery\",\"Oasis, Texas Brewing Co.\",\"OB Brewery\",\"Ocelot Brewing\",\"Ocelot Brewing Co.\",\"Odd13 Brewing\",\"Off Color Brewing\",\"Offshore Ale Co.\",\"Oggi's Sports Brewhouse Pizza\",\"Ohana Brewing Co.\",\"Old Bust Head Brewing Co.\",\"Old Schoolhouse Brewery\",\"Olde Auburn Ale House\",\"Olde Peninsula Brewpub &amp; Restaurant\",\"Omission Brewing Co.\",\"On Tap Bistro &amp; Brewery\",\"On Tour Brewing Co.\",\"One Barrel Brewing Co.\",\"Oregon Ale And Beer Co.\",\"Oregon City Brewing Co.\",\"Ornery Beer Co.\",\"Orpheus Brewing\",\"Ortlieb's Brewery &amp; Grille\",\"Otter Creek Brewing Co.\",\"Otto Brothers Brewing Co.\",\"Our Mutual Friend Malt &amp; Brew\",\"Out of Bounds Brewing Co.\",\"Outer Banks Brewing Co.\",\"P.H. Woods\",\"P.H. Woods Restaurant &amp; Brewery\",\"Pacific Beach Brewhouse\",\"Paducah Beer Werks\",\"Pagosa Brewing Co.\",\"Panther Island Brewing\",\"Paradigm Shift Brewing\",\"Parish Brewing Co.\",\"Park Slope Brewing Co.\",\"Pedal Haus Brewery\",\"Pelican Brewing Co. - Tillamook\",\"Pelican Pub &amp;amp; Brewery\",\"Perrin Brewing Co.\",\"Perry Street Brewing\",\"Phantom Ales\",\"Philipsburg Brewing Co. - The Vault\",\"Pig's Eye Brewing Co.\",\"Pig's Eye Brewing Co. LLC\",\"Pinellas Ale Works\",\"Piney River Brewing Co.\",\"Pinthouse Pizza\",\"Pinthouse Pizza - South Lamar\",\"Pinthouse Pizza Craft Brewpub\",\"Pisgah Brewing Co.\",\"Pizza Port - Bressi Ranch\",\"Pizza Port Bressi Ranch\",\"Platform Beer Co.\",\"Platt Park Brewing Co.\",\"Pocock Brewing Co.\",\"Pond Farm Brewing Co.\",\"Precarious Beer Project - Precarious Beer Hall\",\"Precarious Beer Project E2=80=93 Beer Hall\",\"Primitive Beer\",\"Printer's Ale Manufacturing Co.\",\"Prison City Brewing\",\"Prodigal Brewery (The)\",\"Proper Brewing Co.\",\"Prost Brewing\",\"Prost Brewing Co.\",\"PT's Brewing Co.\",\"Public Coast Brewing Company\",\"Pug Ryan's Brewing Co.\",\"Pug Ryans Brewery\",\"Pump House Restaurant &amp; Brewery\",\"Pure Project\",\"Quincy Ships Brewing Co.\",\"Rabbit Hole Brewing\",\"Rahr &amp; Sons Brewing\",\"Raised Grain Brewing Co.\",\"Raleigh Brewing Co.\",\"RAM Restaurant &amp; Brewery - Schaumburg\",\"Ram Restaurant &amp; Brewery - Seattle\",\"RAM Restaurant &amp; Brewery - Seattle\",\"Ram Restaurant &amp; Brewery (2)\",\"Ram Restaurant and Brewery - Illinois\",\"Ram Restaurant and Brewery - Indianapolis\",\"RAM Restaurant and Brewery - Lakewood\",\"RAM/Big Horn Brewery - Seattle\",\"RAM/Big Horn Brewery - Wheeling\",\"Random Row Brewing Co.\",\"Ratio Beerworks\",\"Red Ass Brewing Co.\",\"Red Cypress Brewery\",\"Red Lodge Ales / H &amp; H Brewing Co.\",\"Red Rock Brewing Co. - Production\",\"Red Star Brewery &amp; Grille\",\"Redhook Ales - Portsmouth\",\"Redrock Brewery\",\"Refuge Brewery\",\"Renegade Brewing Co.\",\"Resident Brewing Co.\",\"Reuben's Brews - Production Brewery\",\"Revelation Craft Brewing Co.\",\"Revolver Brewing\",\"Rhinegeist - Innovation Brewery\",\"Rhinegeist Brewing\",\"Rhomberg Brewing Co.\",\"Rip Current Brewing\",\"River Bluff Brewing\",\"River Dog Brewing Co.\",\"River Horse Brewing Co.\",\"River Market Brewing Co.\",\"Rivertowne Pour House\",\"RJ Rockers Brewing Co.\",\"Roadhouse Brewing Co.\",\"Roak Brewing Co.\",\"Rochester Mills Beer Co.\",\"Rock Bottom Arlington\",\"Rock Bottom Brewery - Arlington\",\"Rock Bottom Brewery - Bellevue\",\"Rock Bottom Brewery - Campbell\",\"Rock Bottom Brewery - Campbell, CA\",\"Rock Bottom Brewery - Denver\",\"Rock Bottom Brewery - Des Moines\",\"Rock Bottom Brewery - La Jolla\",\"Rock Bottom Brewery - Milwaukee\",\"Rock Bottom Brewery - Orland Park\",\"Rock Bottom Brewery - Pittsburgh\",\"Rock Bottom Brewery - Scottsdale\",\"Rock Bottom Brewery - Seattle\",\"Rock Bottom King of Prussia\",\"Rockford Brewing Co. - Rockford, Michigan\",\"Rockwell Beer Co.\",\"Rocky River Brewing Co. - Tennessee\",\"Rogue Ales Issaquah Brewhouse\",\"Rohrbach Brewing Co.\",\"Roundhouse Brewery\",\"Royal Docks Brewhouse and Cannery\",\"Royal Oak Brewery (The)\",\"Rubicon Brewing Company Pub\",\"Russian River Brewing Co. - Production\",\"Russian River Brewing Co. Dry Creek Valley\",\"Sacramento Brewing Co.\",\"Sam Adams Brew House\",\"Samuel Adams - Cincinnati Brewery\",\"Samuel Adams Brewing Co.\",\"San Juan Island Brewing Co.\",\"Sanctum Brewing Co.\",\"SandLot\",\"SandLot Brewery at Coors Field\",\"Sanford Brewing Co.\",\"Sanitas Brewing Co.\",\"Santa Maria Brewing Co.\",\"Saranac/F.X. Matt Brewing Co.\",\"Sarasota Brewing Co.\",\"Schlafly Beer/The Saint Louis Brewery\",\"Scorched Earth Brewing Co.\",\"Scratch Brewing Co.\",\"Sea Dog Brewing Co. (No 2)\",\"Seagram Beverages\",\"Seedstock Brewery\",\"Seismic Brewing Co.\",\"Shades Brewing\",\"Shades of Pale Brewery\",\"Shine Brewing Co.\",\"Shmaltz Brewing Co.\",\"Side Project Brewing\",\"Silver Branch Brewing Co.\",\"Silver City Restaurant &amp; Brewery\",\"SingleSpeed Brewing\",\"Six Ten Brewing\",\"Slack Tide Brewing Co.\",\"Sleeping Giant Brewing Co.\",\"Sleeping Lady Brewing Co/Snow Goose Restaurant\",\"SLO Brew\",\"SLO Brewing Co. - Paso Robles\",\"Smartmouth Brewing Co.\",\"Smog City Brewing\",\"Smog City Brewing Co.\",\"Smog City Brewing Wood Cellar\",\"Snake River Brewing of Lander\",\"Snow Goose Restaurant and Sleeping Lady Brewing Co.\",\"Sockeye Brewing\",\"Solid Rock Brewing\",\"Sophisticated Otter Brewing Co.\",\"Sound Brewery\",\"South Park Brewing - CA\",\"Spangalang Brewery\",\"Speakeasy Ales &amp; Lagers\",\"Spearfish Brewing Co.\",\"Spencer Devon Brewing\",\"Spilled Grain Brewhouse\",\"SpindleTap Brewery\",\"Sports City CafC3=A9= &amp; Brewery\",\"Spring Street Brewing Co.\",\"Squatters and Wasatch Beers\",\"Squatters Beer\",\"Squatters Craft Beers\",\"St. Florian's Brewery\",\"Stadium Pizza Main St.\",\"Standard Deviant Brewing\",\"Stanislaus Area Association\",\"Stark Mill Brewery\",\"Starr Brothers Brewing Co.\",\"Starr Hill Pilot Brewery &amp;amp; Side Stage\",\"Station 26 Brewing Co.\",\"Steelhead Brewery - Irvine\",\"Steelhead Brewing Co. - Burlingame\",\"Stickman Brews\",\"StillFire Brewing\",\"Stillmank Brewing Co.\",\"StormBreaker Brewing\",\"Stoudts Brewing Co.\",\"Studio Brew\",\"Sullivan's Black Forest Brew Haus &amp; Grill\",\"Sun King Brewery\",\"Sun King Brewing\",\"Sun King Brewing - Fishers Small Batch\",\"SunUp Brewing Co.\",\"Susquehanna Brewing Co.\",\"Swamp Rabbit Brewery &amp; Taproom\",\"Swashbuckler Brewing Co.\",\"T-Bonz Homegrown Ales\",\"Taft's Ale House\",\"TaftE2=80=99s Brewing Co.\",\"Tampa Bay Brewing Co.\",\"Tampa Bay Brewing Co. - Ybor City\",\"Tap &amp;amp; Growler\",\"Tap It Brewing Co.\",\"Tapistry Brewing Co.\",\"TAPS Brewery &amp; Barrel Room\",\"TAPS Brewery &amp;amp; Barrel Room\",\"TAPS Fish House &amp;amp; Brewery\",\"TAPS Fish House and Brewery\",\"Taxman Brewing Co.\",\"Temblor Brewing Co.\",\"Ten Pin Brewing Co.\",\"Tenaya Creek\",\"Tenaya Creek Brewery\",\"Tequesta Brewing Co.\",\"Territorial Brewing Co.\",\"Texas Beer Co.\",\"The Beer Co.\",\"The Brew Kettle Taproom and Smokehouse\",\"The Chamber By Wooden Robot Brewery\",\"The Civil Life Brewing Co.\",\"The Northampton Brewery\",\"The Packinghouse Brewing Co.\",\"The Royal Oak Brewery\",\"The Sandlot\",\"The Sandlot Brewery at Coors Field\",\"The Sycamore Brewing Cannery\",\"The Tap Beer Co.\",\"The Tap Brewery\",\"The Vanguard Brewpub &amp; Distillery\",\"The Wrecking Bar Brewpub\",\"Thirsty Monk Pub Brewery\",\"Thirsty Planet Brewing\",\"Thomas Creek Brewery\",\"Thornapple Brewing Co.\",\"Thousand Oaks Brewing Co.\",\"Three Creeks Production\",\"Three Floyds Brewing Co. LLC\",\"Three Magnets Brewing\",\"Three Mile Brewing Co.\",\"Three Needs Brewery\",\"Three Notch'd Brewing Co.\",\"Thunderhawk Alements\",\"Thunderhead Brewing Co.\",\"Tied House Cafe &amp; Brewery - Mtn View\",\"Tin Roof Brewing Co.\",\"Toltec Brewing Co.\",\"Topa Topa Brewing Co.\",\"Torched Hop Brewing Co.\",\"Town Brewing Co.\",\"Track 7 Brewing Co. - Natomas\",\"Trap Rock Restaurant and Brewery\",\"TrC3=B6egs Brewi=ng Co.\",\"Tri-City Brewing Co.\",\"Tribus Beer Co.\",\"Tribute Brewing Co.\",\"Trim Tab Brewing\",\"Trinity Brewing\",\"Triple C Brewing Co.\",\"Triton Brewing Co.\",\"Triumph Brewing Co. of Philadelphia\",\"Triumph Brewing Co. of Princeton\",\"Trout Brook Brewing Co.\",\"Trout Creek Brewing Co.\",\"True Anomaly Brewing Co.\",\"True Vine Brewing Co.\",\"Trustworthy Brewing Co.\",\"Tumbleroot Brewery and Distillery\",\"Turtle Mountain Brewing Co.\",\"Twin Peaks Brewery\",\"Twin Sisters Brewing Co.\",\"Two Beers Brewing Co.\",\"Two Kilts Brewing\",\"Two Roads Brewing Co.\",\"Two Roots Brewing Co.\",\"Union Craft Brewing Co.\",\"Unique Beers\",\"Unlikely Cowboy Restaurant &amp; Brewery (The)\",\"Unsung Brewing Co.\",\"Urban Roots Brewing &amp;amp; Smokehouse\",\"Urban South Brewery - New Orleans\",\"URBN St. Brewing Co.\",\"Ursa Minor Brewing\",\"Utah Brewers Co-op\",\"Utepils Brewing Co.\",\"Vail Brewing Co. - Vail Village Pilot\",\"Val Blatz Brewery\",\"Vallensons' Brewing Co.\",\"Valley Brewing Co.\",\"Valley Forge Brewing Co.\",\"Verboten Brewing\",\"Vertigo Brewing\",\"Village Brewery\",\"Village Idiot Brewing Co.\",\"Vine Street Pub &amp; Brewery\",\"Vino's Pizza*Pub*Brewery\",\"Virginia Brewing Co.\",\"von Trapp Brewing\",\"Voodoo Brewery\",\"Wachusett Brewing Co.\",\"Waconia Brewing Co.\",\"Walking Man Brewing\",\"Wallenpaupack Brewing Co.\",\"Wasatch Brew Pub\",\"Watch City Brewing Co.\",\"Watson Brothers Brewhouse\",\"Weasel Boy Brewing Co.\",\"Wedge Brewing Co.\",\"Weeping Radish Restaurant\",\"Weinkeller Brewery\",\"Werk Force Brewing Co.\",\"West Bros Brewery\",\"West Kill Brewing\",\"Westbound &amp; Down Brewing Co.\",\"White Rock Alehouse &amp; Brewery\",\"Wicked Weed - Funk House\",\"Wicked Weed Brewing - Asheville\",\"Wicked Weed Brewing Funkatorium\",\"Widmer Brothers Brewing\",\"Wiens Brewing Co./Wiens Family Cellars\",\"Wild Barrel Brewing Co.\",\"Wild Boar Brewing Co.\",\"Wild Ride Brewing\",\"Wild Wolf Brewing Co.\",\"William S Newman Brewing Co.\",\"Wilmington Brewing Co.\",\"Wind River Brewing Co.\",\"Wiseacre Brewing Co.\",\"Wit's End Brewing Co.\",\"Wolf's Ridge Brewing\",\"Wolf's Ridge Brewing - Production Operations\",\"Wolf Tongue Brewery\",\"Wooden Robot\",\"Wormtown Brewery\",\"Wormtown Brewing Co.\",\"Worthy Brewing Co.\",\"Wynwood Brewing Co.\",\"Yak and Yeti Brewpub\",\"Yakima Brewing\",\"Yeast of Eden\",\"Yellow Springs Brewery\",\"Zele International\",\"Zipline Brewing Co.\",\"Zoiglhaus Brewing Co.\",\"ZwanzigZ Brewing\"],[60,56,54,39,32,32,32,28,26,26,25,25,24,23,22,21,21,21,20,19,19,18,17,17,17,17,17,17,16,16,15,15,15,15,15,15,15,14,14,14,14,14,14,14,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>brewery<\\/th>\\n      <th>n<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":2},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}\r\nbeer_awards %>% \r\n  count(category, sort = TRUE) %>% \r\n  DT::datatable()\r\n\r\n\r\n\r\n{\"x\":{\"filter\":\"none\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\",\"168\",\"169\",\"170\",\"171\",\"172\",\"173\",\"174\",\"175\",\"176\",\"177\",\"178\",\"179\",\"180\",\"181\",\"182\",\"183\",\"184\",\"185\",\"186\",\"187\",\"188\",\"189\",\"190\",\"191\",\"192\",\"193\",\"194\",\"195\",\"196\",\"197\",\"198\",\"199\",\"200\",\"201\",\"202\",\"203\",\"204\",\"205\",\"206\",\"207\",\"208\",\"209\",\"210\",\"211\",\"212\",\"213\",\"214\",\"215\",\"216\",\"217\",\"218\",\"219\",\"220\",\"221\",\"222\",\"223\",\"224\",\"225\",\"226\",\"227\",\"228\",\"229\",\"230\",\"231\",\"232\",\"233\",\"234\",\"235\",\"236\",\"237\",\"238\",\"239\",\"240\",\"241\",\"242\",\"243\",\"244\",\"245\",\"246\",\"247\",\"248\",\"249\",\"250\",\"251\",\"252\",\"253\",\"254\",\"255\",\"256\",\"257\",\"258\",\"259\",\"260\",\"261\",\"262\",\"263\",\"264\",\"265\",\"266\",\"267\",\"268\",\"269\",\"270\",\"271\",\"272\",\"273\",\"274\",\"275\",\"276\",\"277\",\"278\",\"279\",\"280\",\"281\",\"282\",\"283\",\"284\",\"285\",\"286\",\"287\",\"288\",\"289\",\"290\",\"291\",\"292\",\"293\",\"294\",\"295\",\"296\",\"297\",\"298\",\"299\",\"300\",\"301\",\"302\",\"303\",\"304\",\"305\",\"306\",\"307\",\"308\",\"309\",\"310\",\"311\",\"312\",\"313\",\"314\",\"315\",\"316\",\"317\",\"318\",\"319\",\"320\",\"321\",\"322\",\"323\",\"324\",\"325\",\"326\",\"327\",\"328\",\"329\",\"330\",\"331\",\"332\",\"333\",\"334\",\"335\",\"336\",\"337\",\"338\",\"339\",\"340\",\"341\",\"342\",\"343\",\"344\",\"345\",\"346\",\"347\",\"348\",\"349\",\"350\",\"351\",\"352\",\"353\",\"354\",\"355\",\"356\",\"357\",\"358\",\"359\",\"360\",\"361\",\"362\",\"363\",\"364\",\"365\",\"366\",\"367\",\"368\",\"369\",\"370\",\"371\",\"372\",\"373\",\"374\",\"375\",\"376\",\"377\",\"378\",\"379\",\"380\",\"381\",\"382\",\"383\",\"384\",\"385\",\"386\",\"387\",\"388\",\"389\",\"390\",\"391\",\"392\",\"393\",\"394\",\"395\",\"396\",\"397\",\"398\",\"399\",\"400\",\"401\",\"402\",\"403\",\"404\",\"405\",\"406\",\"407\",\"408\",\"409\",\"410\",\"411\",\"412\",\"413\",\"414\",\"415\",\"416\",\"417\",\"418\",\"419\",\"420\",\"421\",\"422\",\"423\",\"424\",\"425\",\"426\",\"427\",\"428\",\"429\",\"430\",\"431\",\"432\",\"433\",\"434\",\"435\",\"436\",\"437\",\"438\",\"439\",\"440\",\"441\",\"442\",\"443\",\"444\",\"445\",\"446\",\"447\",\"448\",\"449\",\"450\",\"451\",\"452\",\"453\",\"454\",\"455\",\"456\",\"457\",\"458\",\"459\",\"460\",\"461\",\"462\",\"463\",\"464\",\"465\",\"466\",\"467\",\"468\",\"469\",\"470\",\"471\",\"472\",\"473\",\"474\",\"475\",\"476\",\"477\",\"478\",\"479\",\"480\",\"481\",\"482\",\"483\",\"484\",\"485\",\"486\",\"487\",\"488\",\"489\",\"490\",\"491\",\"492\",\"493\",\"494\",\"495\",\"496\",\"497\",\"498\",\"499\",\"500\",\"501\",\"502\",\"503\",\"504\",\"505\",\"506\",\"507\",\"508\",\"509\",\"510\",\"511\",\"512\",\"513\",\"514\",\"515\"],[\"Classic Irish-Style Dry Stout\",\"American-Style Pale Ale\",\"Bock\",\"Robust Porter\",\"Imperial Stout\",\"German-Style Pilsener\",\"German-Style Wheat Ale\",\"American-Style Amber Lager\",\"Brown Porter\",\"Irish-Style Red Ale\",\"American-Style Brown Ale\",\"Golden or Blonde Ale\",\"Vienna-Style Lager\",\"American-Style India Pale Ale\",\"Oatmeal Stout\",\"Barley Wine-Style Ale\",\"Rye Beer\",\"Specialty Beer\",\"Experimental Beer\",\"Scottish-Style Ale\",\"English-Style Summer Ale\",\"American-Style Wheat Beer\",\"English-Style Brown Ale\",\"American-Style Strong Pale Ale\",\"English-Style India Pale Ale\",\"American-Style Stout\",\"Herb and Spice Beer\",\"American-Style Amber/Red Ale\",\"Wood- and Barrel-Aged Beer\",\"American-Style Dark Lager\",\"American-Style Specialty Lager\",\"Belgian- and French-Style Ale\",\"Belgian-Style Abbey Ale\",\"Belgian-Style Witbier\",\"German-Style Schwarzbier\",\"Proam\",\"Sweet Stout\",\"Wood- and Barrel-Aged Strong Beer\",\"Baltic-Style Porter\",\"Old Ale or Strong Ale\",\"Belgian-Style Lambic or Sour Ale\",\"Belgian-Style Strong Specialty Ale\",\"Dortmunder or German-Style Oktoberfest\",\"Wood- and Barrel-Aged Sour Beer\",\"Aged Beer\",\"American-Style Sour Ale\",\"Bohemian Style Pilsener\",\"Munich-Style Helles\",\"Other Strong Beer\",\"American-Style Light Lager\",\"Bohemian-Style Pilsener\",\"Classic English Style Pale Ale\",\"Imperial Red Ale\",\"American-Style Lager\",\"Classic English-Style Pale Ale\",\"Ordinary or Special Bitter\",\"Scotch Ale\",\"Wood- and Barrel-Aged Strong Stout\",\"Imperial India Pale Ale\",\"South German-Style Hefeweizen\",\"Strong Scotch Ale\",\"Extra Special Bitter\",\"German-Style Altbier\",\"Chocolate Beer\",\"Coffee Beer\",\"Session Beer\",\"Smoke Beer\",\"American-Belgo-Style Ale\",\"American-Style Black Ale\",\"European-Style Pilsener\",\"Kellerbier or Zwickelbier\",\"Fruit Wheat Beer\",\"Gluten-Free Beer\",\"American-Style Premium Lager\",\"German-Style Doppelbock or Eisbock\",\"Specialty Honey Beer\",\"Coffee Flavored Beer\",\"English-Style Mild Ale\",\"Field Beer\",\"Fruit Beer\",\"German-Style Sour Ale\",\"Pro-Am Competition\",\"Smoke-Flavored Beer\",\"American-Style Fruit Beer\",\"American-Style Cream Ale\",\"Extra Special Bitter or Strong Bitter\",\"French- and Belgian-Style Saison\",\"Munchner-Style Helles\",\"American-Style or International-Style Pilsener\",\"American-Style Wheat Beer With Yeast\",\"Belgian-Style Sour Ale\",\"Bitter\",\"Foreign Style Stout\",\"German-Style Kolsch / Koln-Style Kolsch\",\"Honey Beer\",\"India Pale Ale\",\"Sweet Stout or Cream Stout\",\"Belgian-Style Blonde Ale or Pale Ale\",\"Belgian-Style Fruit Beer\",\"Belgian-Style Tripel\",\"Brett Beer\",\"German-Style Maerzen\",\"Historical Beer\",\"Other Belgian-Style Ale\",\"Other Strong Ale or Lager\",\"Session India Pale Ale\",\"Classic Saison\",\"Dark Lager\",\"European-Style Dark / Munchner Dunkel\",\"European-Style Dunkel\",\"American-Style Amber / Red Ale\",\"Imperial or Double India Pale Ale\",\"Experimental Beer (Lager or Ale)\",\"Export Stout\",\"Foreign-Style Stout\",\"German-Style Doppelbock\",\"Golden Ale / Canadian Style Ale\",\"International-Style Pilsener\",\"Stouts\",\"American-Style Hefeweizen\",\"American Lager\",\"Barley Wine\",\"Chili Beer\",\"Coffee Stout or Porter\",\"Fruited Wood- and Barrel-Aged Sour Beer\",\"German-Style Maerzen / Oktoberfest\",\"German-Style MC3=A4rzen\",\"Imperial or Double Red Ale\",\"Old Ale/Strong Ale\",\"Porters\",\"Specialty Saison\",\"Alts\",\"American Light Lager\",\"German-Style KC3=B6lsch\",\"German-Style Koelsch\",\"Gluten Free Beer\",\"Non-Alcoholic (Beer) Malt Beverage\",\"Smoke Flavored Beers\",\"Specialty\",\"American-Style Lager or Light Lager\",\"American Premium Lager\",\"British Stout\",\"Cellar or Unfiltered Beer\",\"European Pilsner\",\"Foreign (Export)-Style Stout\",\"Fruit And Vegetable Beer\",\"German-Style Brown Ale / Dusseldorf-Style Altbier\",\"German-Style Strong Bock\",\"International-Style Pale Ale\",\"Light Lager\",\"Mixed-Culture Brett Beer\",\"American-Style Cream Ale or Lager\",\"American Malt Liquor\",\"American Wheat Ale Or Lager\",\"Barley Wines\",\"Bocks\",\"Double Red Ale\",\"Fruited American-Style Sour Ale\",\"Marzen / Oktoberfeset\",\"Pale Ales\",\"Pumpkin/Squash Beer or Pumpkin Spice Beer\",\"Scottish Style Ale\",\"Strong Ales\",\"American-Style \\\"Light\\\" Amber Lager\",\"American-Style Specialty Lager or Cream Ale or Lager\",\"American Dark Lager\",\"American Lagers\",\"American Pale Ale\",\"English Style Brown Ale\",\"German Style Schwarzbier\",\"Herb and Spice or Chocolate Beer\",\"Juicy or Hazy Pale Ale\",\"Pumpkin Beer\",\"Raspberry Beers\",\"Smoke-Flavored Beers\",\"Specialty Honey Lager or Ale\",\"Strong Ale\",\"Vienna Style Lager\",\"Amber Ales\",\"Amber Lager\",\"American-Style Brett Ale\",\"American-Style Brett Beer\",\"American-Style Lager or Premium Lager\",\"American-Style Lager, Light Lager or Premium Lager\",\"American Amber Ale\",\"American Light Lagers\",\"Australian-Style Pale Ale\",\"Barley Wine Style Ale\",\"Belgian- &amp; French-Style Specialty Ales\",\"Belgian-Style Ales\",\"Blonde Ale\",\"Brown Ales\",\"Double Hoppy Red Ale\",\"English Brown Ale\",\"English Style Bitter\",\"European Style Pilsener\",\"Field Beer or Pumpkin Beer\",\"Fresh or Wet Hop Ale\",\"Fruit, Vegetable\",\"Fruit, Vegetables\",\"Herb / Spice Beers\",\"India Pale Ales\",\"Indigenous Beer\",\"Juicy or Hazy India Pale Ale\",\"Kellerbier/Zwickelbier\",\"Kolsch\",\"Munchener Helles\",\"South German-Style Hefeweizen/Hefeweissbier\",\"Specialty Stouts\",\"Wheat Beers\",\"(Extra Special) Strong Bitter\",\"Aged Beer (Ale or Lager)\",\"Amber/Viennas\",\"American-Style Wheat Ale or Lager\",\"American Brown Ale\",\"American Brown Ales\",\"American Lager/Ale or Cream Ale\",\"American Light Pilsners\",\"American Premium Lagers\",\"American Wheats\",\"Australian-Style or International-Style Pale Ale\",\"Belgian-Style White (or Wit) / Belgian-Style Wheat\",\"Belgian-Style White (or Wit)/Belgian-Style\",\"Belgian Style Ale\",\"Belgian Style Ales\",\"Belgian Style Specialty Ales\",\"Belgian Style Strong Specialty Ale\",\"Berliner-Style Weisse\",\"Bitter or Pale Mild Ale\",\"Blond/Golden Ales\",\"Collab\",\"Contemporary Gose\",\"Doppelbock\",\"Dry Stouts\",\"English Style (Extra Special) Strong Bitter\",\"French- and Belgian Style Saison\",\"Fresh Hop Ale\",\"Munchener Helles And Export\",\"Porter\",\"Scottish Ales\",\"Smoked Beer\",\"Specialty Beers\",\"Wood- and Barrel-aged Beer\",\"American-Style Amber Ale\",\"American-Style Wheat Ale Or Lager\",\"American-Style Wheat Beer with Yeast\",\"American Lager-Ales\",\"American Specialty Lager\",\"Belgian-and French-Style Ale\",\"Belgian-Style Dubbel or Quadrupel\",\"Belgian and French-Style Ale\",\"Cream Ales\",\"English-Style Bitter\",\"European-Style Dark/Muchner Dunkel\",\"Fresh Hop Beer\",\"German-Style Brown Ale/Dusseldorf-Style\",\"German-Style K=C3=B6lsch\",\"German-Style MC3=A4rzen/Oktoberfest\",\"German Style Wheat Ale\",\"Herb and Spice Beers\",\"Herb, Spice\",\"Juicy or Hazy Imperial India Pale Ale\",\"Juicy or Hazy Strong Pale Ale\",\"Maerzen/Oktoberfests\",\"Marzen/Oktoberfest\",\"Munchner Helles\",\"Other Strong Ales &amp; Lagers\",\"Specialty Honey Ales Or Lagers\",\"Traditional Bitter\",\"Traditional English Style Bitter\",\"Ale, American Brown Ale\",\"Ale, Barley Wine\",\"Ale, Blonde Ale\",\"Ale, Dry Stout\",\"Ale, India Pale Ale\",\"Ale, Porter\",\"Ale, Scottish Ale\",\"Amber Ale/American Pale Ales\",\"America-Style Light Lager\",\"American-Belgo Style Ale\",\"American-Style India Black Ale\",\"American-Style Lager or American-Style Malt Liquor\",\"American-Style Lager or American-Style Pilsener\",\"American-Style Lager or Ice Lager or Malt Liquor\",\"American-Style Lager or Malt Liquor\",\"American-Style Lager/Ale or Cream\",\"American-Style Lager/Ale or Cream Ale\",\"American-Style Lager/Ale Or Cream Ale\",\"American-Style Light Lager or German-Style Light Lager\",\"American-Style or German-Style Sour Ale\",\"American-Style Pilsener\",\"American-Style Pilsener or International-Style Pilsener\",\"American-Style Sour Ale or German-Style Sour Ale\",\"American Amber Lager\",\"American Cream Ale or Lager\",\"American Dry Lager\",\"American Dry Lagers\",\"American Lager-Ale/Cream Ale\",\"American Lager / Ale or Cream Ale\",\"American Lager / Ale Or Cream Ale\",\"American Lager/Ale Cream Ale\",\"American Pilsener\",\"American Pilseners\",\"American Pilsners\",\"American Premium Dark Pilseners\",\"Belgian- &amp; French-Style Ale\",\"Belgian-Style Ale\",\"Belgian-Style Dark Strong Ale or Belgian-Style Quadrupel\",\"Belgian-Style Dubbel or Quadruple\",\"Belgian-Style Pale Strong Ale\",\"Belgian-Style Specialty Ale\",\"Belgian and French-Style Specialty Ales\",\"Belgian Style Abbey Ale\",\"Blonde/Golden Ales\",\"Bock Beers\",\"Bocks/Dopplebocks\",\"Chocolate / Cocoa Flavored Beers\",\"Continental Pilsners\",\"Dortmunder / European Style Export\",\"Dry Beers\",\"Drys\",\"English-Style (Extra Special) Strong Bitter\",\"English-Style or International-Style Pale Ale\",\"English Ale\",\"English Mild or Bitter\",\"English Old Ale / English &amp; American Strong Ales\",\"English Old Ale/Strong Ale\",\"English Style Dark Mild Ale or English-Style Brown Ale\",\"English Style Strong Bitter\",\"European-Style Dark Lager/Munich-Style Dunkel\",\"European Classic Pilseners\",\"Foreign (Export) Style Stout\",\"French- Belgian-Style Saison\",\"French-and Belgian-Style Saison\",\"French-Belgian Style Saison\",\"Fruit Beer or Field Beer\",\"Fruit Beer or Vegetable Beer\",\"Fruit or Vegetable Beer\",\"Garden Beer (Fruit &amp; Vegetable)\",\"German-Style Brown / Dusseldorf-Style Altbier\",\"German-Style Hefeweizen\",\"German Style Doppelbock or Eisbock\",\"German Style M=C3=A4rzen\",\"German Style Pilsener\",\"German Wheat Ale\",\"German Wheats\",\"Golden Ale/Canadian Style Ale\",\"Gose\",\"Herb, Spices\",\"Herb/Spice Beers\",\"International-Style Dark Lager\",\"International Dark Lager\",\"International Pale Ale\",\"International Pilsener\",\"Lager, Amber Lager\",\"Lager, American Malt Liquor\",\"Lager, American Premium Lager\",\"Malt Liquor\",\"Malt Liquors\",\"Mixed, American Wheat\",\"Mixed, Dusseldorf Altbier\",\"Mixed, European Pilsener\",\"Mixed, German Wheat\",\"Mixed, Herb, Spice\",\"Munchner Helles &amp; Dortmunder X\",\"Munich-Style Dunkel or European-Style Dark Lager\",\"Munich Style Helles\",\"Non-Alcoholic Malt Beverage\",\"Nonalcoholic Malt Beverages\",\"Other Strong Ales\",\"Pumpkin Spice Beer\",\"Smoke Flavored\",\"South German Style Hefeweizen/Hefeweissbier\",\"Specialty Berliner-Style Weisse\",\"Specialty Berliner Weisse\",\"Specialty Honey Lagers or Ales\",\"Stout\",\"Vienna/Marzen/Octoberfest Beer\",\"Wood- and Barrel-aged Strong Beer\",\"Ale, American Pale/Amber Ale\",\"Ale, Classic English Pale Ale\",\"Ale, English Brown Ale\",\"Ale, Strong Ale\",\"Ales\",\"American-Style Amber Lager or Dark Lager\",\"American-Style Lager / Ale Or Cream Ale\",\"American Cream Ales\",\"American Lager / Ale / Cream Ale\",\"American Malt Liquors\",\"American Pale/Amber Ale\",\"American Premium Dark Lagers\",\"American Premium Dark Pilsners\",\"American Premium Pilseners\",\"American Premium Pilsners\",\"Belgian-Style Strong Specialty Ales\",\"Belgian &amp; French Style Specialty Ales\",\"Chocolate / Cocoa Flavored Beer\",\"Classic Pale Ales\",\"Contemporary American-Style Pilsener\",\"Continental Amber Lagers\",\"Doppelbocks\",\"Dry Stout\",\"Dusseldorf Style Altbier\",\"Dusseldorf Style Altbiers\",\"Emerging India Pale Ale\",\"English Old Ale / English Strong Ale\",\"English Style Mild Ale\",\"English Style Old Ale / Strong Ale\",\"European-Style Dark / Munchner\",\"European Ambers\",\"European Dark/Munchner Dunkels\",\"European Darks\",\"European Style Dark / Munchener Dunkel\",\"European Style Dark/Munchener Dunkel\",\"European Style Dunkel\",\"Experimental Beer (Lager Or Ale)\",\"Experimental India Pale Ale\",\"Export/Specials\",\"Fruit Beers (other than raspberry)\",\"German-Style Dark Lager\",\"German-Style K=C3=B6lsch/K=C3=B6ln-Style K=C3=B6lsch\",\"German-Style KC3==B6lsch\",\"German Dark Lager\",\"German Style Altbier\",\"German Style Brown / Dusseldorf Style Altbier\",\"German Style Brown Ale/Dusseldorf Style Alt\",\"German Style K=C3=B6lsch\",\"German Style MC3=A4rzen\",\"German Style Strong Bock\",\"German Wheat\",\"India Pale Lager or Malt Liquor\",\"Indigenous/Regional Beer\",\"Juicy or Hazy Imperial or Double India Pale Ale\",\"Lager, American Dry Lager\",\"Lager, American Lager\",\"Lager, American Light Lager\",\"Lager, Bock\",\"Lager, Dark Lager\",\"Lager, Munchner Helles &amp; Dortmunder Export\",\"Leipzig-Style Gose or Contemporary Gose\",\"Mixed, American Lager-Ale/Cream Ale\",\"Mixed, Fruit, Vegetable\",\"Mixed, Non-Alcoholic\",\"Mixed, Smoke Flavored\",\"Non-Alcohol Beer or Alcohol-Free Beer\",\"Non Alcoholic Malt Beverages\",\"Old Ale or Strong Ale or Barley Wine-Style Ale\",\"Other Low Strength Ale or Lager\",\"Pilsener\",\"Pro-Am\",\"Rauch\",\"Scotch Ales\",\"Session Beer or Non-Alcohol Beer\",\"South German Style Hefeweizen\",\"Strong Red Ale\",\"Traditional Bitters\",\"Vienna Lager\",\"Wood-and Barrel-Aged Beer\",\"Ale, Sweet Stout\",\"Ale, Traditional Bitter\",\"American-Style Black Ale or American-Style Stout\",\"American-Style Wheat Wine Ale\",\"American Wheat\",\"Beer With Yeast\",\"Belgian-Style Ale or French-Style Ale\",\"Belgian-Style Dubbel\",\"Belgian-Style Specialty Ales\",\"Belgian-Style White (or Wit)/Belgian-Style Wheat\",\"Classic English Pale Ale\",\"Dopplebock\",\"Dortmund/Export/Specials\",\"Dortmunder/European Style Export or German-Style Oktoberfest/Wiesen (Meadow)\",\"Dusseldorf Altbier\",\"English-Style Dark Mild Ale or Brown Ale\",\"English Syle Brown Ale\",\"European-Style Dark/M=C3=BCnchner Dunkel\",\"European-Style Dark/MC3=BCnchn=er Dunkel\",\"European-Style Dark/MC3=BCnchner Dunkel\",\"European Style Dark/M=C3=BCnchner Dunkel\",\"French &amp; Belgian-Style Saison\",\"German-Style KC3=B6lsch/K=C3=B6ln-=Style K=C3=B6lsch\",\"German-Style KC3=B6lsch/K=C3=B6ln-Style K=C3=B6l=sch\",\"German-Style M=C3=A4rzen/Oktoberfest\",\"German-Style MC3==A4rzen\",\"German-Style MC3=A4=rzen/Oktoberfest\",\"German-Style MC3=A4r=zen\",\"German-Style MC3=A4rzen/Oktoberfes=t\",\"German-Style MC3=AFrzen / Oktoberfest\",\"German-Style MC3=AFrzen /= Oktoberfest\",\"German Style Brown Ale/D=C3=BCsseldorf Style Altbier\",\"German Style Brown Ale/DC3=BCsseldorf Style Altbier\",\"German Style Brown/Dusseldorf Style Alt\",\"German Style KC3=B6lsch/K==C3=B6ln Style K=C3=B6lsch\",\"German Style KC3=B6lsch/K=C3=B6ln Style K=C3=B6lsch\",\"German Style KC3=B6lsch/K=C3=B6ln Style K=C3=B6lsch=\",\"M=C3=BCnchner (Munich) Style Helles\",\"MC3=BCnchner (Munich) Style Hell=es\",\"Mixed, Specialty\",\"Muenchers\",\"Munchner Helles And Export\",\"Old Ale / Strong Ale\",\"Other Strong Ales &amp;amp; Lagers\",\"Out of Category =E2=80=93 Traditionally Brewed Beer\",\"Out of Category E2=80=93 Traditionally B=rewed Beer\",\"Out of Category E2=80=93 Traditionally Bre=wed Beer\",\"Out of Category E2=80=93 Traditionally Brewed B=eer\",\"Out of Category E2=80=93 Traditionally Brewed Beer&lt;=/\",\"Pumpkin/Squash Beer\",\"Scottish-Style Ales\",\"Scottish Ale\",\"Specialty Ales\",\"Specialty Honey Ales Or Lager\",\"Vienna\",\"Vienna Style Lagers\",\"Weizen\"],[62,61,61,61,60,59,56,55,55,53,51,49,49,48,48,47,47,47,45,45,44,43,43,42,41,36,36,35,35,34,34,34,34,34,34,34,33,33,32,32,31,31,31,31,30,30,30,30,30,29,29,29,29,28,28,28,28,28,27,27,27,26,26,25,25,25,25,24,24,24,24,23,23,22,22,22,21,21,21,21,21,21,21,20,19,19,18,18,17,17,17,16,16,16,16,16,16,15,15,15,15,15,15,15,15,15,14,14,14,14,13,13,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>category<\\/th>\\n      <th>n<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":2},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}\r\nbeer_awards %>% \r\n  count(city, sort = TRUE) %>% \r\n  DT::datatable()\r\n\r\n\r\n\r\n{\"x\":{\"filter\":\"none\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\",\"168\",\"169\",\"170\",\"171\",\"172\",\"173\",\"174\",\"175\",\"176\",\"177\",\"178\",\"179\",\"180\",\"181\",\"182\",\"183\",\"184\",\"185\",\"186\",\"187\",\"188\",\"189\",\"190\",\"191\",\"192\",\"193\",\"194\",\"195\",\"196\",\"197\",\"198\",\"199\",\"200\",\"201\",\"202\",\"203\",\"204\",\"205\",\"206\",\"207\",\"208\",\"209\",\"210\",\"211\",\"212\",\"213\",\"214\",\"215\",\"216\",\"217\",\"218\",\"219\",\"220\",\"221\",\"222\",\"223\",\"224\",\"225\",\"226\",\"227\",\"228\",\"229\",\"230\",\"231\",\"232\",\"233\",\"234\",\"235\",\"236\",\"237\",\"238\",\"239\",\"240\",\"241\",\"242\",\"243\",\"244\",\"245\",\"246\",\"247\",\"248\",\"249\",\"250\",\"251\",\"252\",\"253\",\"254\",\"255\",\"256\",\"257\",\"258\",\"259\",\"260\",\"261\",\"262\",\"263\",\"264\",\"265\",\"266\",\"267\",\"268\",\"269\",\"270\",\"271\",\"272\",\"273\",\"274\",\"275\",\"276\",\"277\",\"278\",\"279\",\"280\",\"281\",\"282\",\"283\",\"284\",\"285\",\"286\",\"287\",\"288\",\"289\",\"290\",\"291\",\"292\",\"293\",\"294\",\"295\",\"296\",\"297\",\"298\",\"299\",\"300\",\"301\",\"302\",\"303\",\"304\",\"305\",\"306\",\"307\",\"308\",\"309\",\"310\",\"311\",\"312\",\"313\",\"314\",\"315\",\"316\",\"317\",\"318\",\"319\",\"320\",\"321\",\"322\",\"323\",\"324\",\"325\",\"326\",\"327\",\"328\",\"329\",\"330\",\"331\",\"332\",\"333\",\"334\",\"335\",\"336\",\"337\",\"338\",\"339\",\"340\",\"341\",\"342\",\"343\",\"344\",\"345\",\"346\",\"347\",\"348\",\"349\",\"350\",\"351\",\"352\",\"353\",\"354\",\"355\",\"356\",\"357\",\"358\",\"359\",\"360\",\"361\",\"362\",\"363\",\"364\",\"365\",\"366\",\"367\",\"368\",\"369\",\"370\",\"371\",\"372\",\"373\",\"374\",\"375\",\"376\",\"377\",\"378\",\"379\",\"380\",\"381\",\"382\",\"383\",\"384\",\"385\",\"386\",\"387\",\"388\",\"389\",\"390\",\"391\",\"392\",\"393\",\"394\",\"395\",\"396\",\"397\",\"398\",\"399\",\"400\",\"401\",\"402\",\"403\",\"404\",\"405\",\"406\",\"407\",\"408\",\"409\",\"410\",\"411\",\"412\",\"413\",\"414\",\"415\",\"416\",\"417\",\"418\",\"419\",\"420\",\"421\",\"422\",\"423\",\"424\",\"425\",\"426\",\"427\",\"428\",\"429\",\"430\",\"431\",\"432\",\"433\",\"434\",\"435\",\"436\",\"437\",\"438\",\"439\",\"440\",\"441\",\"442\",\"443\",\"444\",\"445\",\"446\",\"447\",\"448\",\"449\",\"450\",\"451\",\"452\",\"453\",\"454\",\"455\",\"456\",\"457\",\"458\",\"459\",\"460\",\"461\",\"462\",\"463\",\"464\",\"465\",\"466\",\"467\",\"468\",\"469\",\"470\",\"471\",\"472\",\"473\",\"474\",\"475\",\"476\",\"477\",\"478\",\"479\",\"480\",\"481\",\"482\",\"483\",\"484\",\"485\",\"486\",\"487\",\"488\",\"489\",\"490\",\"491\",\"492\",\"493\",\"494\",\"495\",\"496\",\"497\",\"498\",\"499\",\"500\",\"501\",\"502\",\"503\",\"504\",\"505\",\"506\",\"507\",\"508\",\"509\",\"510\",\"511\",\"512\",\"513\",\"514\",\"515\",\"516\",\"517\",\"518\",\"519\",\"520\",\"521\",\"522\",\"523\",\"524\",\"525\",\"526\",\"527\",\"528\",\"529\",\"530\",\"531\",\"532\",\"533\",\"534\",\"535\",\"536\",\"537\",\"538\",\"539\",\"540\",\"541\",\"542\",\"543\",\"544\",\"545\",\"546\",\"547\",\"548\",\"549\",\"550\",\"551\",\"552\",\"553\",\"554\",\"555\",\"556\",\"557\",\"558\",\"559\",\"560\",\"561\",\"562\",\"563\",\"564\",\"565\",\"566\",\"567\",\"568\",\"569\",\"570\",\"571\",\"572\",\"573\",\"574\",\"575\",\"576\",\"577\",\"578\",\"579\",\"580\",\"581\",\"582\",\"583\",\"584\",\"585\",\"586\",\"587\",\"588\",\"589\",\"590\",\"591\",\"592\",\"593\",\"594\",\"595\",\"596\",\"597\",\"598\",\"599\",\"600\",\"601\",\"602\",\"603\",\"604\",\"605\",\"606\",\"607\",\"608\",\"609\",\"610\",\"611\",\"612\",\"613\",\"614\",\"615\",\"616\",\"617\",\"618\",\"619\",\"620\",\"621\",\"622\",\"623\",\"624\",\"625\",\"626\",\"627\",\"628\",\"629\",\"630\",\"631\",\"632\",\"633\",\"634\",\"635\",\"636\",\"637\",\"638\",\"639\",\"640\",\"641\",\"642\",\"643\",\"644\",\"645\",\"646\",\"647\",\"648\",\"649\",\"650\",\"651\",\"652\",\"653\",\"654\",\"655\",\"656\",\"657\",\"658\",\"659\",\"660\",\"661\",\"662\",\"663\",\"664\",\"665\",\"666\",\"667\",\"668\",\"669\",\"670\",\"671\",\"672\",\"673\",\"674\",\"675\",\"676\",\"677\",\"678\",\"679\",\"680\",\"681\",\"682\",\"683\",\"684\",\"685\",\"686\",\"687\",\"688\",\"689\",\"690\",\"691\",\"692\",\"693\",\"694\",\"695\",\"696\",\"697\",\"698\",\"699\",\"700\",\"701\",\"702\",\"703\",\"704\",\"705\",\"706\",\"707\",\"708\",\"709\",\"710\",\"711\",\"712\",\"713\",\"714\",\"715\",\"716\",\"717\",\"718\",\"719\",\"720\",\"721\",\"722\",\"723\",\"724\",\"725\",\"726\",\"727\",\"728\",\"729\",\"730\",\"731\",\"732\",\"733\",\"734\",\"735\",\"736\",\"737\",\"738\",\"739\",\"740\",\"741\",\"742\",\"743\",\"744\",\"745\",\"746\",\"747\",\"748\",\"749\",\"750\",\"751\",\"752\",\"753\",\"754\",\"755\",\"756\",\"757\",\"758\",\"759\",\"760\",\"761\",\"762\",\"763\",\"764\",\"765\",\"766\",\"767\",\"768\",\"769\",\"770\",\"771\",\"772\",\"773\",\"774\",\"775\",\"776\",\"777\",\"778\",\"779\",\"780\",\"781\",\"782\",\"783\",\"784\",\"785\",\"786\",\"787\",\"788\",\"789\",\"790\",\"791\",\"792\",\"793\",\"794\",\"795\",\"796\",\"797\",\"798\",\"799\",\"800\",\"801\",\"802\",\"803\"],[\"Denver\",\"Portland\",\"Milwaukee\",\"San Diego\",\"Seattle\",\"Chicago\",\"Fort Collins\",\"San Antonio\",\"Golden\",\"Salt Lake City\",\"Bend\",\"Boulder\",\"Saint Louis\",\"Austin\",\"Albuquerque\",\"Juneau\",\"Carlsbad\",\"Indianapolis\",\"Paso Robles\",\"Boston\",\"San Francisco\",\"Cleveland\",\"Longmont\",\"Jackson\",\"Durango\",\"Houston\",\"Bellingham\",\"Dallas\",\"Kansas City\",\"Pacific City\",\"Pittsburgh\",\"Santa Rosa\",\"Eugene\",\"Las Vegas\",\"New Glarus\",\"Larkspur\",\"Minneapolis\",\"Madison\",\"Colorado Springs\",\"Santa Cruz\",\"Atlanta\",\"Baker City\",\"Louisville\",\"Solana Beach\",\"Adamstown\",\"Aurora\",\"Philadelphia\",\"San Marcos\",\"Billings\",\"Charlotte\",\"Chico\",\"Los Angeles\",\"Roseland\",\"Auburn\",\"Baltimore\",\"Frederick\",\"Rochester\",\"Wilmington\",\"Healdsburg\",\"Hood River\",\"Long Beach\",\"Newport\",\"Anchorage\",\"Cincinnati\",\"Fogelsville\",\"Santa Fe\",\"Berkeley\",\"Middleton\",\"Tampa\",\"Brea\",\"Broomfield\",\"Buellton\",\"Chattanooga\",\"Nashville\",\"New York\",\"Sacramento\",\"San Clemente\",\"Springfield\",\"Tempe\",\"St. Louis\",\"Chippewa Falls\",\"Fort Worth\",\"Ft. Bragg\",\"Huntington Beach\",\"North Olmsted\",\"Santa Barbara\",\"Scottsdale\",\"Woodridge\",\"Arlington\",\"Asheville\",\"Cambridge\",\"Davis\",\"Idaho Springs\",\"Lexington\",\"Media\",\"Raleigh\",\"Tucson\",\"Ashburn\",\"Boonville\",\"Centreville\",\"Charlottesville\",\"Dillon\",\"Grand Rapids\",\"Greeley\",\"Loveland\",\"Oakland\",\"Prescott\",\"Topeka\",\"Alexandria\",\"Anaheim\",\"Brooklyn\",\"Castle Rock\",\"Corona\",\"Detroit\",\"Flagstaff\",\"Flossmoor\",\"Glenwood Springs\",\"Harrisburg\",\"Saint Paul\",\"Southampton\",\"Temecula\",\"Akron\",\"Antioch\",\"Blanco\",\"Blue Lake\",\"Columbia\",\"Elk Grove\",\"Farmville\",\"Fredericksburg\",\"Lafayette\",\"Milton\",\"New Ulm\",\"Phoenix\",\"Royal Oak\",\"Sparks\",\"Stevens Point\",\"Westminster\",\"Amana\",\"Bear\",\"Boise\",\"Corvallis\",\"Fortuna\",\"Helena\",\"Kernville\",\"La Jolla\",\"Lakewood\",\"Laramie\",\"Memphis\",\"Placentia\",\"Portsmouth\",\"Richmond\",\"Rocky River\",\"San Luis Obispo\",\"Sunnyvale\",\"Winston-Salem\",\"Woodinville\",\"Allentown\",\"Appleton\",\"Arcata\",\"Columbus\",\"Crozet\",\"Flint\",\"Framingham\",\"Fresno\",\"Holland\",\"Lake Placid\",\"Lawrence\",\"Middleburg Heights\",\"Novato\",\"Reno\",\"Silverdale\",\"Somerdale\",\"Telluride\",\"Truckee\",\"Tustin\",\"Warrenville\",\"Alpine\",\"Bay Shore\",\"Bethesda\",\"Birmingham\",\"Bloomington\",\"Bremerton\",\"Chandler\",\"Charleston\",\"Concord\",\"Cooperstown\",\"Greenville\",\"Hailey\",\"Kalamazoo\",\"Lahaina\",\"Lake Havasu City\",\"Lake Oswego\",\"Long Valley\",\"Lubbock\",\"Missoula\",\"Monroe\",\"Oceanside\",\"Omaha\",\"Pottstown\",\"Riverside\",\"San Leandro\",\"Sheridan\",\"Smithton\",\"Tacoma\",\"Torrance\",\"Vista\",\"Wilkes-Barre\",\"Woodbridge\",\"Afton\",\"Albany\",\"Amherst\",\"Athens\",\"Burlington\",\"Canton\",\"Claremont\",\"Cloverdale\",\"Duluth\",\"Easton\",\"Evanston\",\"Frisco\",\"Galesburg\",\"Glen Mills\",\"Glendale\",\"Green Bay\",\"Hays\",\"Henderson\",\"Hershey\",\"Kailua-Kona\",\"Libertyville\",\"Little Rock\",\"Milford\",\"Milwaukie\",\"Monterey\",\"Morgan Hill\",\"Myrtle Beach\",\"New Hope\",\"Newark\",\"Orlando\",\"Patchogue\",\"Phoenixville\",\"Rancho Cucamonga\",\"Red Lodge\",\"Redmond\",\"Ridgway\",\"Savannah\",\"Shiner\",\"St. Louis Park\",\"Utica\",\"Victor\",\"Warren\",\"Washington\",\"Wheeling\",\"Arvada\",\"Aston\",\"Boca Raton\",\"Boone\",\"Bridgewater Corners\",\"Brooklyn Center\",\"Burlingame\",\"Campbell\",\"Carson City\",\"Cedar Rapids\",\"Costa Mesa\",\"Culver City\",\"Dexter\",\"Elmsford\",\"Erie\",\"Evansville\",\"Frankenmuth\",\"Goleta\",\"Goodyear\",\"Guerneville\",\"Harrisonburg\",\"High Point\",\"Highlands Ranch\",\"Lancaster\",\"Lodi\",\"Marble Falls\",\"Midvale\",\"Moriarty\",\"Munster\",\"Niwot\",\"North Syracuse\",\"O'Fallon\",\"Olathe\",\"Olympia\",\"Park City\",\"Philipsburg\",\"Pleasantville\",\"Royersford\",\"Salinas\",\"San Jose\",\"San Rafael\",\"Santee\",\"Sebastopol\",\"Sioux Falls\",\"St. Paul\",\"Tracy\",\"Tumwater\",\"Ventura\",\"Waltham\",\"Waterbury\",\"Webberville\",\"Whitefish\",\"Wichita\",\"Ann Arbor\",\"Bellaire\",\"Berthoud\",\"Bethlehem\",\"Biloxi\",\"Braintree\",\"Calmar\",\"Camas\",\"Carpinteria\",\"Central City\",\"Coral Gables\",\"Croydon\",\"Downingtown\",\"Durango/Bayfield\",\"Edmonds\",\"Englewood\",\"Falls Church\",\"Fishers\",\"Floosmoor\",\"Fullerton\",\"Greensboro\",\"Greenwood\",\"Hickory\",\"Hollister\",\"Iowa City\",\"Irvine\",\"Issaquah\",\"King of Prussia\",\"Lakeland\",\"Lemont\",\"Littleton\",\"Lone Tree\",\"Melbourne\",\"Middlebury\",\"Mount Holly\",\"Mountain View\",\"New Orleans\",\"Newport Beach\",\"Newton\",\"Norfolk\",\"Oak Harbor\",\"Ocean Beach\",\"Pagosa Springs\",\"Papillion\",\"Pinedale\",\"Plainfield\",\"Pleasanton\",\"Providence\",\"Redlands\",\"Rockford\",\"Salem\",\"Salida\",\"Sarasota\",\"Sisters\",\"Steamboat Springs\",\"Sterling\",\"Strongsville\",\"Sunnyside\",\"Superior\",\"Tillamook\",\"Tinley Park\",\"Ukiah\",\"Vail\",\"Wayne\",\"West Chester\",\"West Dundee\",\"Williamsport\",\"Willoughby\",\"Wisconsin Dells\",\"(Corona, CA) Brea\",\"Addison\",\"Arrington\",\"Arroyo Grande\",\"Bel Air\",\"Bellevue\",\"Bemidji\",\"Bloomfield\",\"Bloomsburg\",\"Bozeman\",\"Branford\",\"Brattleboro\",\"Bronx\",\"Buffalo\",\"Calistoga\",\"Camarillo\",\"Cannon Beach\",\"Carmel\",\"Cherry Hill\",\"Coronado\",\"Covington\",\"Crested Butte\",\"Dana Point\",\"Danville\",\"Denton\",\"Dover\",\"El Segundo\",\"Elk Rapids\",\"Emsworth\",\"Escondido\",\"Fort Lauderdale\",\"Fort Mitchell\",\"Fort Wayne\",\"Geneva\",\"Granby\",\"Grand Haven\",\"Grants Pass\",\"Grapevine\",\"Hampton\",\"Hartville\",\"Haverhill\",\"Honolulu\",\"Inglewood\",\"Ithaca\",\"Jacksonville\",\"Janesville\",\"Kinston\",\"Krebs\",\"LaConner\",\"Lafayette Hill\",\"Lander\",\"Latrobe\",\"Leavenworth\",\"Lincoln\",\"Mammoth\",\"Mammoth Lakes\",\"Massillon\",\"McKinleyville\",\"McMinnville\",\"Medford\",\"Medina\",\"Memphis/Nashville\",\"Millersburg\",\"Moreno Valley\",\"Morganton\",\"Moultonborough\",\"Noblesville\",\"Norwood\",\"Novi\",\"Orange\",\"Palmetto\",\"Petaluma\",\"Pittsboro\",\"Port Charlotte\",\"Port Townsend\",\"Red Bank\",\"Rocklin\",\"Saint Joseph\",\"San Gabriel\",\"San Juan Capistrano\",\"Saratoga Springs\",\"Sedona\",\"Sevierville\",\"Sidney\",\"Soquel\",\"Spokane\",\"Staunton\",\"Stockton\",\"Sunriver\",\"Traverse City\",\"Tukwila\",\"Turlock\",\"Upland\",\"Vero Beach\",\"Watsonville\",\"Wausau\",\"Wells\",\"West Okoboji\",\"West Ossipee\",\"West Yellowstone\",\"Westlake Village\",\"Whitestown\",\"Williamsburg\",\"Windsor\",\"Worcester\",\"(Bethesda, MD) Louisville\",\"(Brea, CA) Brea\",\"(College Park - Indianapolis, IN) Louisville\",\"(Disney Boardwalk, FL) Chattanooga\",\"(King of Prussia, PA) Louisville\",\"(La Jolla, CA) Louisville\",\"(Rockville, MD) Chattanooga\",\"(San Diego, CA) Louisville\",\"(Westminster, CO) Louisville\",\"Abita Springs\",\"Aiken\",\"Akron/Canton\",\"Alameda\",\"Algoma\",\"Algonquin\",\"Allen\",\"Alpharetta\",\"Amesbury\",\"Annandale\",\"Annapolis\",\"Arden\",\"Ashland\",\"Aspen\",\"Astoria\",\"Atascadero\",\"Ava\",\"Avon\",\"Bakersfield\",\"Bangor\",\"Barberton\",\"Bargersville\",\"Baton Rouge\",\"Battle Creek\",\"Battle Ground\",\"Baxter\",\"Bay City\",\"Bedford\",\"Bedford Park\",\"Belgrade\",\"Berekely Heights\",\"Big Rapids\",\"Black Mountain\",\"Blacksburg\",\"Blue Ash\",\"Bluemont\",\"Bluffton\",\"Bolivar\",\"Bonners Ferry\",\"Boulder/Chandler/Clear Lake\",\"Bourbonnais\",\"Boynton Beach\",\"Bradenton\",\"Brainerd\",\"Breckenridge\",\"Breese\",\"Bridgeport\",\"Bridgman\",\"Bristol\",\"Brookline\",\"Broussard\",\"Bucyrus\",\"Burbank\",\"Canal Winchester\",\"Canon Beach\",\"Cape May\",\"Cape May Court House\",\"Carbondale\",\"Carlisle\",\"Carmel-By-The-Sea\",\"Carpenteria\",\"Carrollton\",\"Cary\",\"Casselberry\",\"Cave Creek\",\"Cedar Springs\",\"Centerville\",\"Champaign\",\"Chandler/Boulder\",\"Chapel Hill\",\"Chesapeake\",\"Cheyenne\",\"Chula Vista\",\"Cibolo\",\"CincinnatiE2=80=8E\",\"Clearlake\",\"Clive\",\"Cody\",\"Coeur D'Alene\",\"Cold Spring\",\"Collegeville\",\"Collingswood\",\"Comstock\",\"Comstock Park\",\"Coral Springs\",\"Cornelius\",\"Covina\",\"Credted Butte\",\"Crystal Bay\",\"Danbury\",\"Delafield\",\"Denali National Park\",\"Des Moines\",\"Desert Ridge\",\"Dothan\",\"Dripping Springs\",\"Dubuque\",\"Dulles\",\"Eagle\",\"Eagle River\",\"Eau Claire\",\"Edgewater\",\"Edinburg\",\"Effingham\",\"El Cajon\",\"El Dorado Hills\",\"El Granada\",\"El Paso\",\"Eldersburg\",\"Estes Park\",\"Etna\",\"Eureka\",\"Everett\",\"Evergreen\",\"Ewing\",\"Export\",\"Fairfield\",\"Fargo\",\"Farmingdale\",\"Fayetteville\",\"Fort Meyers\",\"Franklin\",\"Fremont\",\"Friday Harbor\",\"Fruita\",\"Ft. Wayne\",\"Gaylord\",\"Gilbert\",\"Gilroy\",\"Gold Beach\",\"Goochland\",\"Gorham\",\"Granbury\",\"Grand Forks\",\"Grayslake\",\"Greensburg\",\"Gunnison\",\"Half Moon Bay\",\"Hartford\",\"Hawley\",\"Hermosa Beach\",\"Hillsboro\",\"Hillsborough\",\"Holly Springs\",\"Honeoye Falls\",\"Hyde Park\",\"Independence\",\"Ipswich\",\"Irving\",\"Jantzen Beach/Lloyd Center/Clear Lake\",\"Johns Island\",\"Johnson City\",\"Junction City\",\"Justin\",\"Kailua Kona\",\"Kamuela\",\"Kearney\",\"Keene\",\"Kennesaw\",\"Kent\",\"Kihei\",\"Kill Devil Hills\",\"King City\",\"Kirkland\",\"La Vista\",\"LaCrosse\",\"Laguna Hills\",\"Lake Elsinore\",\"Lake George\",\"Largo\",\"Lawrenceville\",\"Lombard\",\"Long Island City\",\"Lorton\",\"Los Gatos\",\"Lyons\",\"Malvern\",\"Manchester\",\"Manheim\",\"Mankato\",\"Manteo\",\"Maplewood\",\"Marina del Rey\",\"Marshall\",\"Martinez\",\"Maui\",\"Meadville\",\"Miami\",\"Midland\",\"Mill Valley\",\"Minocqua\",\"Mishawaka\",\"Moab\",\"Modesto\",\"Moline\",\"Monroeville\",\"Montgomery\",\"Moorpark\",\"Moses Lake\",\"Mount Horeb\",\"N. Canton\",\"Naches\",\"Nantucket\",\"Napa\",\"Nashua\",\"Nederland\",\"Nellysford\",\"New Haven\",\"New Paltz\",\"Normal\",\"North Charleston\",\"North Kansas City\",\"North Versailles\",\"Northamapton\",\"Oak Bluffs\",\"Ocean\",\"Oregon City\",\"Orland Park\",\"Oroville\",\"Oshkosh\",\"Oxnard\",\"Pacific Beach\",\"Paducah\",\"Palatine\",\"Palm Beach\",\"Palm Harbor\",\"Palmdale\",\"Parker\",\"Pearland\",\"Perkasie\",\"Pittsburg\",\"Pittston\",\"Plover\",\"Plymouth\",\"Pomona\",\"Pompey\",\"Ponderay\",\"Portage\",\"Poulsbo\",\"Princeton\",\"Quincy\",\"Rancho Mirage\",\"Rehoboth Beach\",\"Rio Rancho\",\"Roanoke\",\"Rosedale\",\"Rowlett\",\"Saint Albans\",\"Saint Cloud\",\"Saint Petersburg\",\"Sainte Genevieve\",\"Sanford\",\"Santa Ana\",\"Santa Clarita\",\"Sarver\",\"Schaumburg\",\"Scotia\",\"Seven Points\",\"Sherman Oaks\",\"Sherwood\",\"Silver Spring\",\"Somerville\",\"South Denver\",\"South Salt Lake\",\"Spartanburg\",\"Spearfish\",\"Spicewood\",\"St Paul\",\"St. Joseph\",\"Stafford\",\"Stamford\",\"Stevenson\",\"Stockbridge\",\"Stowe\",\"Stratford\",\"Sturgeon Bay\",\"Suffern\",\"Suwanee\",\"Syracuse\",\"Taylor\",\"Temple\",\"Tequesta\",\"Torrington\",\"Travelers Rest\",\"Tulsa\",\"Tyler\",\"Vancouver\",\"Vint Hill\",\"Waconia\",\"Walla Walla\",\"Walland\",\"Washougal\",\"Waterloo\",\"Watertown\",\"Waukesha\",\"Waupaca\",\"West Des Moines\",\"West Kill\",\"West Palm Beach\",\"Westland\",\"Westmont\",\"Westport\",\"Wheat Ridge\",\"Wheaton\",\"Wilson\",\"Winston - Salem\",\"Winter Garden\",\"Winter Springs\",\"Winthrop\",\"Woodbury\",\"Woodland Hills\",\"Wooster\",\"Yakima\",\"Yellow Springs\",\"Zanesville\"],[145,119,96,86,86,74,72,71,69,68,66,60,56,48,47,45,44,44,43,41,39,37,36,35,33,33,31,30,30,29,29,29,28,27,27,26,26,25,24,24,23,23,23,23,22,22,22,22,21,20,20,20,20,19,19,19,19,19,18,18,18,18,17,17,17,17,16,16,16,15,15,15,15,15,15,15,15,15,15,14,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>city<\\/th>\\n      <th>n<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":2},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}\r\nfct_other()\r\nWe can also collapse levels by grouping together some levels into Other using fct_other().\r\nIn fct_other() we can either:\r\n- specify which categories we want to __keep__, where all the rest will be bucketed into the `Other` category.\r\n- specify which categories we want to __drop__ - i.e. which categories do we want to be bucketed into the `Other` category.\r\n\r\nLet‚Äôs say that we‚Äôre only interested in the Pilseners in the category variable.\r\nWe can keep these Pilseners, and combine all others into a Non-Pilseners category using fct_other() with the keep argument.\r\n\r\n\r\nbeer_awards %>% \r\n   mutate(category = as_factor(category)) %>% \r\n   mutate(category = fct_other(category,\r\n             # which levels do you want to keep?\r\n             keep = c('German-Style Pilsener',\r\n             'Bohemian Style Pilsener',\r\n             'Bohemian-Style Pilsener',\r\n             'European-Style Pilsener',\r\n             'American-Style or International-Style Pilsener',\r\n             'International-Style Pilsener',\r\n             'European Pilsner',\r\n             'European Style Pilsener',\r\n             'American Light Pilsners',\r\n             'American-Style Lager or American-Style Pilsener',\r\n             'American-Style Pilsener',\r\n             'American-Style Pilsener or International-Style Pilsener',\r\n             'American Pilsener',\r\n             'American Pilseners',\r\n             'American Pilsners',\r\n             'American Premium Dark Pilseners',\r\n             'Continental Pilsners',\r\n             'European Classic Pilseners',\r\n             'German Style Pilsener',\r\n             'International Pilsener',\r\n             'Mixed, European Pilsener',\r\n             'American Premium Dark Pilsners',\r\n             'American Premium Pilseners',\r\n             'American Premium Pilsners',\r\n             'Contemporary American-Style Pilsener',\r\n             'Pilsener'),\r\n             # relabel the 'Other' level\r\n             other_level = \"Non-Pilseners\"\r\n         )) %>% \r\n   pull(category) %>% \r\n   levels()\r\n \r\n\r\n [1] \"American Pilsener\"                                      \r\n [2] \"Bohemian-Style Pilsener\"                                \r\n [3] \"German-Style Pilsener\"                                  \r\n [4] \"International Pilsener\"                                 \r\n [5] \"American-Style Lager or American-Style Pilsener\"        \r\n [6] \"Contemporary American-Style Pilsener\"                   \r\n [7] \"International-Style Pilsener\"                           \r\n [8] \"American-Style Pilsener\"                                \r\n [9] \"American-Style Pilsener or International-Style Pilsener\"\r\n[10] \"American-Style or International-Style Pilsener\"         \r\n[11] \"Bohemian Style Pilsener\"                                \r\n[12] \"European-Style Pilsener\"                                \r\n[13] \"European Style Pilsener\"                                \r\n[14] \"German Style Pilsener\"                                  \r\n[15] \"Pilsener\"                                               \r\n[16] \"European Pilsner\"                                       \r\n[17] \"Mixed, European Pilsener\"                               \r\n[18] \"European Classic Pilseners\"                             \r\n[19] \"American Light Pilsners\"                                \r\n[20] \"American Pilsners\"                                      \r\n[21] \"American Premium Dark Pilsners\"                         \r\n[22] \"American Premium Pilsners\"                              \r\n[23] \"American Pilseners\"                                     \r\n[24] \"American Premium Dark Pilseners\"                        \r\n[25] \"American Premium Pilseners\"                             \r\n[26] \"Continental Pilsners\"                                   \r\n[27] \"Non-Pilseners\"                                          \r\n\r\nWe have successfully kept all Pilseners, and all others have been grouped into the ‚ÄúNon-Pilseners‚Äù category.\r\nWhat if we want to keep everything else, and group all Pilseners into a separate category? We can instead use the drop argument.\r\n\r\n\r\n    beer_awards %>% \r\n       mutate(category = as_factor(category)) %>% \r\n       mutate(category = fct_other(category,\r\n                 # which levels do you want to drop?\r\n                 drop = c('German-Style Pilsener',\r\n                 'Bohemian Style Pilsener',\r\n                 'Bohemian-Style Pilsener',\r\n                 'European-Style Pilsener',\r\n                 'American-Style or International-Style Pilsener',\r\n                 'International-Style Pilsener',\r\n                 'European Pilsner',\r\n                 'European Style Pilsener',\r\n                 'American Light Pilsners',\r\n                 'American-Style Lager or American-Style Pilsener',\r\n                 'American-Style Pilsener',\r\n                 'American-Style Pilsener or International-Style Pilsener',\r\n                 'American Pilsener',\r\n                 'American Pilseners',\r\n                 'American Pilsners',\r\n                 'American Premium Dark Pilseners',\r\n                 'Continental Pilsners',\r\n                 'European Classic Pilseners',\r\n                 'German Style Pilsener',\r\n                 'International Pilsener',\r\n                 'Mixed, European Pilsener',\r\n                 'American Premium Dark Pilsners',\r\n                 'American Premium Pilseners',\r\n                 'American Premium Pilsners',\r\n                 'Contemporary American-Style Pilsener',\r\n                 'Pilsener'),\r\n                 # relabel the 'Other' level\r\n                 other_level = \"Pilseners\"\r\n             )) %>% \r\n       pull(category) %>% \r\n       levels() %>% \r\n       as_tibble() %>% \r\n       DT::datatable()\r\n \r\n\r\n\r\n{\"x\":{\"filter\":\"none\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\",\"168\",\"169\",\"170\",\"171\",\"172\",\"173\",\"174\",\"175\",\"176\",\"177\",\"178\",\"179\",\"180\",\"181\",\"182\",\"183\",\"184\",\"185\",\"186\",\"187\",\"188\",\"189\",\"190\",\"191\",\"192\",\"193\",\"194\",\"195\",\"196\",\"197\",\"198\",\"199\",\"200\",\"201\",\"202\",\"203\",\"204\",\"205\",\"206\",\"207\",\"208\",\"209\",\"210\",\"211\",\"212\",\"213\",\"214\",\"215\",\"216\",\"217\",\"218\",\"219\",\"220\",\"221\",\"222\",\"223\",\"224\",\"225\",\"226\",\"227\",\"228\",\"229\",\"230\",\"231\",\"232\",\"233\",\"234\",\"235\",\"236\",\"237\",\"238\",\"239\",\"240\",\"241\",\"242\",\"243\",\"244\",\"245\",\"246\",\"247\",\"248\",\"249\",\"250\",\"251\",\"252\",\"253\",\"254\",\"255\",\"256\",\"257\",\"258\",\"259\",\"260\",\"261\",\"262\",\"263\",\"264\",\"265\",\"266\",\"267\",\"268\",\"269\",\"270\",\"271\",\"272\",\"273\",\"274\",\"275\",\"276\",\"277\",\"278\",\"279\",\"280\",\"281\",\"282\",\"283\",\"284\",\"285\",\"286\",\"287\",\"288\",\"289\",\"290\",\"291\",\"292\",\"293\",\"294\",\"295\",\"296\",\"297\",\"298\",\"299\",\"300\",\"301\",\"302\",\"303\",\"304\",\"305\",\"306\",\"307\",\"308\",\"309\",\"310\",\"311\",\"312\",\"313\",\"314\",\"315\",\"316\",\"317\",\"318\",\"319\",\"320\",\"321\",\"322\",\"323\",\"324\",\"325\",\"326\",\"327\",\"328\",\"329\",\"330\",\"331\",\"332\",\"333\",\"334\",\"335\",\"336\",\"337\",\"338\",\"339\",\"340\",\"341\",\"342\",\"343\",\"344\",\"345\",\"346\",\"347\",\"348\",\"349\",\"350\",\"351\",\"352\",\"353\",\"354\",\"355\",\"356\",\"357\",\"358\",\"359\",\"360\",\"361\",\"362\",\"363\",\"364\",\"365\",\"366\",\"367\",\"368\",\"369\",\"370\",\"371\",\"372\",\"373\",\"374\",\"375\",\"376\",\"377\",\"378\",\"379\",\"380\",\"381\",\"382\",\"383\",\"384\",\"385\",\"386\",\"387\",\"388\",\"389\",\"390\",\"391\",\"392\",\"393\",\"394\",\"395\",\"396\",\"397\",\"398\",\"399\",\"400\",\"401\",\"402\",\"403\",\"404\",\"405\",\"406\",\"407\",\"408\",\"409\",\"410\",\"411\",\"412\",\"413\",\"414\",\"415\",\"416\",\"417\",\"418\",\"419\",\"420\",\"421\",\"422\",\"423\",\"424\",\"425\",\"426\",\"427\",\"428\",\"429\",\"430\",\"431\",\"432\",\"433\",\"434\",\"435\",\"436\",\"437\",\"438\",\"439\",\"440\",\"441\",\"442\",\"443\",\"444\",\"445\",\"446\",\"447\",\"448\",\"449\",\"450\",\"451\",\"452\",\"453\",\"454\",\"455\",\"456\",\"457\",\"458\",\"459\",\"460\",\"461\",\"462\",\"463\",\"464\",\"465\",\"466\",\"467\",\"468\",\"469\",\"470\",\"471\",\"472\",\"473\",\"474\",\"475\",\"476\",\"477\",\"478\",\"479\",\"480\",\"481\",\"482\",\"483\",\"484\",\"485\",\"486\",\"487\",\"488\",\"489\",\"490\"],[\"American Amber Lager\",\"American Lager\",\"American-Belgo-Style Ale\",\"American-Style Amber/Red Ale\",\"American-Style Black Ale or American-Style Stout\",\"American-Style Brown Ale\",\"American-Style Cream Ale\",\"American-Style Fruit Beer\",\"American-Style India Pale Ale\",\"American-Style Pale Ale\",\"American-Style Sour Ale\",\"American-Style Strong Pale Ale\",\"American-Style Wheat Beer\",\"Belgian-Style Abbey Ale\",\"Belgian-Style Ale or French-Style Ale\",\"Belgian-Style Lambic or Sour Ale\",\"Belgian-Style Specialty Ale\",\"Belgian-Style Strong Specialty Ale\",\"Belgian-Style Witbier\",\"Bock\",\"Brett Beer\",\"Brown Porter\",\"Chili Beer\",\"Chocolate Beer\",\"Classic Saison\",\"Coffee Beer\",\"Coffee Stout or Porter\",\"Contemporary Gose\",\"Dortmunder or German-Style Oktoberfest\",\"English Ale\",\"English Mild or Bitter\",\"English-Style Brown Ale\",\"Experimental Beer\",\"Experimental India Pale Ale\",\"Extra Special Bitter\",\"Field Beer\",\"Fresh Hop Beer\",\"Fruit Wheat Beer\",\"Fruited American-Style Sour Ale\",\"Fruited Wood- and Barrel-Aged Sour Beer\",\"German Dark Lager\",\"German-Style Altbier\",\"German-Style Doppelbock or Eisbock\",\"German-Style Koelsch\",\"German-Style Maerzen\",\"German-Style Wheat Ale\",\"Gluten-Free Beer\",\"Golden or Blonde Ale\",\"Herb and Spice Beer\",\"Historical Beer\",\"Honey Beer\",\"Imperial India Pale Ale\",\"Imperial Stout\",\"International Dark Lager\",\"International Pale Ale\",\"Irish-Style Red Ale\",\"Juicy or Hazy Imperial India Pale Ale\",\"Juicy or Hazy India Pale Ale\",\"Juicy or Hazy Pale Ale\",\"Juicy or Hazy Strong Pale Ale\",\"Kellerbier or Zwickelbier\",\"Light Lager\",\"Mixed-Culture Brett Beer\",\"Munich-Style Helles\",\"Oatmeal Stout\",\"Old Ale or Strong Ale or Barley Wine-Style Ale\",\"Other Strong Beer\",\"Pumpkin Beer\",\"Robust Porter\",\"Rye Beer\",\"Scotch Ale\",\"Scottish-Style Ale\",\"Session Beer or Non-Alcohol Beer\",\"Session India Pale Ale\",\"Smoke Beer\",\"Specialty Beer\",\"Specialty Berliner-Style Weisse\",\"Specialty Saison\",\"Stout\",\"Strong Red Ale\",\"Sweet Stout or Cream Stout\",\"Vienna-Style Lager\",\"Wood- and Barrel-Aged Beer\",\"Wood- and Barrel-Aged Sour Beer\",\"Wood- and Barrel-Aged Strong Beer\",\"Wood- and Barrel-Aged Strong Stout\",\"Aged Beer\",\"American-Style Amber Lager\",\"American-Style Black Ale\",\"American-Style Stout\",\"Australian-Style Pale Ale\",\"Baltic-Style Porter\",\"Barley Wine-Style Ale\",\"Belgian- and French-Style Ale\",\"Belgian-Style Blonde Ale or Pale Ale\",\"Belgian-Style Dark Strong Ale or Belgian-Style Quadrupel\",\"Belgian-Style Dubbel\",\"Belgian-Style Fruit Beer\",\"Belgian-Style Pale Strong Ale\",\"Belgian-Style Tripel\",\"Classic Irish-Style Dry Stout\",\"Collab\",\"Double Hoppy Red Ale\",\"Emerging India Pale Ale\",\"English-Style India Pale Ale\",\"English-Style Mild Ale\",\"English-Style or International-Style Pale Ale\",\"English-Style Summer Ale\",\"Export Stout\",\"German-Style Dark Lager\",\"German-Style Sour Ale\",\"Imperial Red Ale\",\"India Pale Lager or Malt Liquor\",\"International-Style Dark Lager\",\"Non-Alcohol Beer or Alcohol-Free Beer\",\"Old Ale or Strong Ale\",\"Ordinary or Special Bitter\",\"Other Belgian-Style Ale\",\"Proam\",\"Pumpkin/Squash Beer or Pumpkin Spice Beer\",\"Session Beer\",\"South German-Style Hefeweizen\",\"Specialty Berliner Weisse\",\"American-Style Lager or American-Style Malt Liquor\",\"American-Style Wheat Beer with Yeast\",\"Belgian-Style Dubbel or Quadrupel\",\"Berliner-Style Weisse\",\"Classic English-Style Pale Ale\",\"Dark Lager\",\"Gose\",\"International-Style Pale Ale\",\"Juicy or Hazy Imperial or Double India Pale Ale\",\"Munich-Style Dunkel or European-Style Dark Lager\",\"American-Style Lager or Malt Liquor\",\"American-Style Wheat Beer With Yeast\",\"Australian-Style or International-Style Pale Ale\",\"Double Red Ale\",\"Fresh or Wet Hop Ale\",\"Leipzig-Style Gose or Contemporary Gose\",\"Pro-Am\",\"American-Style Amber Lager or Dark Lager\",\"American-Style Lager or Ice Lager or Malt Liquor\",\"American-Style Light Lager or German-Style Light Lager\",\"European-Style Dark Lager/Munich-Style Dunkel\",\"German-Style Schwarzbier\",\"Pumpkin Spice Beer\",\"Pumpkin/Squash Beer\",\"American-Style Dark Lager\",\"American-Style Lager or Light Lager\",\"Belgian-Style Dubbel or Quadruple\",\"European-Style Dark/MC3=BCnchner Dunkel\",\"European-Style Dark/MC3=BCnchn=er Dunkel\",\"European-Style Dark/M=C3=BCnchner Dunkel\",\"French- and Belgian-Style Saison\",\"German-Style KC3=B6lsch\",\"German-Style MC3=A4rzen\",\"German-Style MC3==A4rzen\",\"American-Style Brett Beer\",\"European-Style Dunkel\",\"Foreign-Style Stout\",\"Indigenous/Regional Beer\",\"Specialty Honey Beer\",\"Field Beer or Pumpkin Beer\",\"French &amp; Belgian-Style Saison\",\"Fresh Hop Ale\",\"Fruit Beer\",\"German-Style K=C3=B6lsch\",\"Indigenous Beer\",\"Pro-Am Competition\",\"American-Style Brett Ale\",\"American-Style Lager, Light Lager or Premium Lager\",\"American-Style Specialty Lager or Cream Ale or Lager\",\"German-Style MC3=A4r=zen\",\"Sweet Stout\",\"American-Style India Black Ale\",\"Coffee Flavored Beer\",\"Extra Special Bitter or Strong Bitter\",\"German-Style KC3==B6lsch\",\"Gluten Free Beer\",\"Herb and Spice or Chocolate Beer\",\"Kellerbier/Zwickelbier\",\"Out of Category E2=80=93 Traditionally Brewed B=eer\",\"Out of Category =E2=80=93 Traditionally Brewed Beer\",\"Out of Category E2=80=93 Traditionally Brewed Beer&lt;=/\",\"Smoked Beer\",\"American-Style Cream Ale or Lager\",\"American-Style Lager or Premium Lager\",\"American-Style Light Lager\",\"American-Style Specialty Lager\",\"Barley Wine Style Ale\",\"Belgian and French-Style Ale\",\"Belgian Style Strong Specialty Ale\",\"Classic English Style Pale Ale\",\"English Style Brown Ale\",\"English Style Mild Ale\",\"European Style Dunkel\",\"Foreign Style Stout\",\"French- and Belgian Style Saison\",\"Fruit Beer or Field Beer\",\"German Style Altbier\",\"German Style Doppelbock or Eisbock\",\"German Style K=C3=B6lsch\",\"German Style M=C3=A4rzen\",\"German Style Schwarzbier\",\"Munich Style Helles\",\"Out of Category E2=80=93 Traditionally B=rewed Beer\",\"Out of Category E2=80=93 Traditionally Bre=wed Beer\",\"Scottish Style Ale\",\"South German Style Hefeweizen\",\"Vienna Style Lager\",\"America-Style Light Lager\",\"American-Belgo Style Ale\",\"American-Style Hefeweizen\",\"American-Style or German-Style Sour Ale\",\"Bitter or Pale Mild Ale\",\"English-Style Dark Mild Ale or Brown Ale\",\"Fruit or Vegetable Beer\",\"German-Style Strong Bock\",\"Imperial or Double Red Ale\",\"Smoke-Flavored Beer\",\"Strong Scotch Ale\",\"Aged Beer (Ale or Lager)\",\"American-Style Lager\",\"American-Style Sour Ale or German-Style Sour Ale\",\"American-Style Wheat Wine Ale\",\"Belgian Style Abbey Ale\",\"Belgian-Style Sour Ale\",\"Belgian-Style White (or Wit)/Belgian-Style Wheat\",\"Cellar or Unfiltered Beer\",\"Dortmunder/European Style Export or German-Style Oktoberfest/Wiesen (Meadow)\",\"English Style Dark Mild Ale or English-Style Brown Ale\",\"European Style Dark/M=C3=BCnchner Dunkel\",\"Experimental Beer (Lager or Ale)\",\"Foreign (Export) Style Stout\",\"Fruit Beer or Vegetable Beer\",\"German Style Brown Ale/D=C3=BCsseldorf Style Altbier\",\"German Style Brown Ale/DC3=BCsseldorf Style Altbier\",\"German Style KC3=B6lsch/K==C3=B6ln Style K=C3=B6lsch\",\"German Style KC3=B6lsch/K=C3=B6ln Style K=C3=B6lsch=\",\"German Style KC3=B6lsch/K=C3=B6ln Style K=C3=B6lsch\",\"German Style MC3=A4rzen\",\"German Style Strong Bock\",\"Imperial or Double India Pale Ale\",\"M=C3=BCnchner (Munich) Style Helles\",\"MC3=BCnchner (Munich) Style Hell=es\",\"Other Low Strength Ale or Lager\",\"Other Strong Ale or Lager\",\"South German Style Hefeweizen/Hefeweissbier\",\"Specialty Honey Lager or Ale\",\"American Cream Ale or Lager\",\"American-Style Amber / Red Ale\",\"Belgian-and French-Style Ale\",\"Belgian-Style White (or Wit) / Belgian-Style Wheat\",\"Bitter\",\"European-Style Dark / Munchner Dunkel\",\"Foreign (Export)-Style Stout\",\"French- Belgian-Style Saison\",\"Fruit And Vegetable Beer\",\"German-Style Brown Ale / Dusseldorf-Style Altbier\",\"German-Style Kolsch / Koln-Style Kolsch\",\"German-Style Maerzen / Oktoberfest\",\"Munchner-Style Helles\",\"Old Ale/Strong Ale\",\"South German-Style Hefeweizen/Hefeweissbier\",\"Wood- and Barrel-aged Beer\",\"Wood- and Barrel-aged Strong Beer\",\"American-Style \\\"Light\\\" Amber Lager\",\"American-Style Premium Lager\",\"British Stout\",\"French-Belgian Style Saison\",\"Non-Alcoholic (Beer) Malt Beverage\",\"American Lager/Ale or Cream Ale\",\"Beer With Yeast\",\"Belgian-Style White (or Wit)/Belgian-Style\",\"European-Style Dark/Muchner Dunkel\",\"German-Style Brown Ale/Dusseldorf-Style\",\"German-Style K=C3=B6lsch/K=C3=B6ln-Style K=C3=B6lsch\",\"German-Style KC3=B6lsch/K=C3=B6ln-=Style K=C3=B6lsch\",\"German-Style MC3=A4rzen/Oktoberfest\",\"American Dark Lager\",\"French-and Belgian-Style Saison\",\"Garden Beer (Fruit &amp; Vegetable)\",\"German-Style Doppelbock\",\"German-Style Hefeweizen\",\"German-Style KC3=B6lsch/K=C3=B6ln-Style K=C3=B6l=sch\",\"German-Style MC3=A4=rzen/Oktoberfest\",\"German-Style M=C3=A4rzen/Oktoberfest\",\"Wood-and Barrel-Aged Beer\",\"(Extra Special) Strong Bitter\",\"American-Style Lager/Ale or Cream\",\"Belgian- &amp; French-Style Ale\",\"Belgian-Style Strong Specialty Ales\",\"German-Style MC3=A4rzen/Oktoberfes=t\",\"Old Ale / Strong Ale\",\"American-Style Lager/Ale or Cream Ale\",\"American-Style Wheat Ale or Lager\",\"Belgian- &amp; French-Style Specialty Ales\",\"Belgian-Style Ale\",\"Chocolate / Cocoa Flavored Beer\",\"American Lager / Ale or Cream Ale\",\"Belgian-Style Ales\",\"Chocolate / Cocoa Flavored Beers\",\"English Old Ale / English &amp; American Strong Ales\",\"English Style (Extra Special) Strong Bitter\",\"English-Style Bitter\",\"European-Style Dark / Munchner\",\"Fruit Beers (other than raspberry)\",\"Golden Ale / Canadian Style Ale\",\"Herb and Spice Beers\",\"Other Strong Ales &amp; Lagers\",\"Raspberry Beers\",\"Smoke-Flavored Beers\",\"Specialty Beers\",\"Specialty Honey Lagers or Ales\",\"Belgian and French-Style Specialty Ales\",\"English Old Ale / English Strong Ale\",\"English-Style (Extra Special) Strong Bitter\",\"German-Style MC3=AFrzen /= Oktoberfest\",\"German-Style MC3=AFrzen / Oktoberfest\",\"India Pale Ale\",\"Other Strong Ales &amp;amp; Lagers\",\"American-Style Amber Ale\",\"American-Style Lager/Ale Or Cream Ale\",\"American-Style Wheat Ale Or Lager\",\"Barley Wine\",\"Belgian &amp; French Style Specialty Ales\",\"Belgian Style Ales\",\"Doppelbock\",\"English Old Ale/Strong Ale\",\"English Style Bitter\",\"European Style Dark/Munchener Dunkel\",\"Experimental Beer (Lager Or Ale)\",\"German Style Brown Ale/Dusseldorf Style Alt\",\"German Style Brown/Dusseldorf Style Alt\",\"German Style Wheat Ale\",\"Golden Ale/Canadian Style Ale\",\"Herb/Spice Beers\",\"Kolsch\",\"Marzen/Oktoberfest\",\"Munchener Helles\",\"Nonalcoholic Malt Beverages\",\"Other Strong Ales\",\"Smoke Flavored Beers\",\"Specialty\",\"Specialty Honey Ales Or Lagers\",\"American-Style Lager / Ale Or Cream Ale\",\"Belgian Style Specialty Ales\",\"Dopplebock\",\"Dortmunder / European Style Export\",\"English Style Old Ale / Strong Ale\",\"English Style Strong Bitter\",\"European Style Dark / Munchener Dunkel\",\"German Style Brown / Dusseldorf Style Altbier\",\"Herb / Spice Beers\",\"Marzen / Oktoberfeset\",\"Specialty Honey Ales Or Lager\",\"Amber Lager\",\"American Amber Ale\",\"American Brown Ale\",\"American Lager / Ale / Cream Ale\",\"American Light Lager\",\"American Pale Ale\",\"American Specialty Lager\",\"American Wheat Ale Or Lager\",\"Belgian Style Ale\",\"Dry Stouts\",\"English Syle Brown Ale\",\"Munchener Helles And Export\",\"Munchner Helles And Export\",\"Non Alcoholic Malt Beverages\",\"Specialty Stouts\",\"Strong Ale\",\"Traditional English Style Bitter\",\"American Lager / Ale Or Cream Ale\",\"American Malt Liquor\",\"American Premium Lager\",\"Belgian-Style Specialty Ales\",\"Blonde Ale\",\"German-Style Brown / Dusseldorf-Style Altbier\",\"Non-Alcoholic Malt Beverage\",\"Scottish-Style Ales\",\"Vienna Lager\",\"American Dry Lager\",\"American Lager/Ale Cream Ale\",\"Classic English Pale Ale\",\"Dusseldorf Style Altbier\",\"English Brown Ale\",\"Fruit, Vegetable\",\"German Wheat Ale\",\"Herb, Spice\",\"Porter\",\"Scottish Ales\",\"Traditional Bitter\",\"Ale, American Brown Ale\",\"Ale, American Pale/Amber Ale\",\"Ale, Barley Wine\",\"Ale, Blonde Ale\",\"Ale, Classic English Pale Ale\",\"Ale, Dry Stout\",\"Ale, English Brown Ale\",\"Ale, India Pale Ale\",\"Ale, Porter\",\"Ale, Scottish Ale\",\"Ale, Strong Ale\",\"Ale, Sweet Stout\",\"Ale, Traditional Bitter\",\"Lager, Amber Lager\",\"Lager, American Dry Lager\",\"Lager, American Lager\",\"Lager, American Light Lager\",\"Lager, American Malt Liquor\",\"Lager, American Premium Lager\",\"Lager, Bock\",\"Lager, Dark Lager\",\"Lager, Munchner Helles &amp; Dortmunder Export\",\"Mixed, American Lager-Ale/Cream Ale\",\"Mixed, American Wheat\",\"Mixed, Dusseldorf Altbier\",\"Mixed, Fruit, Vegetable\",\"Mixed, German Wheat\",\"Mixed, Herb, Spice\",\"Mixed, Non-Alcoholic\",\"Mixed, Smoke Flavored\",\"Mixed, Specialty\",\"American Brown Ales\",\"American Lager-Ale/Cream Ale\",\"American Pale/Amber Ale\",\"American Wheat\",\"Dry Stout\",\"Dusseldorf Altbier\",\"German Wheat\",\"Munchner Helles &amp; Dortmunder X\",\"Scottish Ale\",\"Smoke Flavored\",\"Vienna\",\"Amber Ale/American Pale Ales\",\"Amber/Viennas\",\"American Dry Lagers\",\"American Lager-Ales\",\"American Lagers\",\"American Light Lagers\",\"American Malt Liquors\",\"American Premium Lagers\",\"American Wheats\",\"Barley Wines\",\"Blonde/Golden Ales\",\"Bocks\",\"Classic Pale Ales\",\"Dortmund/Export/Specials\",\"Dusseldorf Style Altbiers\",\"Fruit, Vegetables\",\"German Wheats\",\"Herb, Spices\",\"India Pale Ales\",\"Maerzen/Oktoberfests\",\"Munchner Helles\",\"Porters\",\"Scotch Ales\",\"Specialty Ales\",\"Stouts\",\"Strong Ales\",\"Traditional Bitters\",\"Alts\",\"Amber Ales\",\"American Premium Dark Lagers\",\"Blond/Golden Ales\",\"Brown Ales\",\"Doppelbocks\",\"Drys\",\"European Dark/Munchner Dunkels\",\"Export/Specials\",\"Malt Liquors\",\"Pale Ales\",\"Rauch\",\"Weizen\",\"Bock Beers\",\"Cream Ales\",\"Dry Beers\",\"European Ambers\",\"Malt Liquor\",\"Muenchers\",\"Vienna/Marzen/Octoberfest Beer\",\"Wheat Beers\",\"European Darks\",\"Ales\",\"American Cream Ales\",\"Bocks/Dopplebocks\",\"Continental Amber Lagers\",\"Vienna Style Lagers\",\"Pilseners\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>value<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"columnDefs\":[{\"orderable\":false,\"targets\":0}]}},\"evals\":[],\"jsHooks\":[]}\r\nThere are no individual ‚ÄúPilsener‚Äù observations now, instead all Pilseners have been grouped into the ‚ÄúOther‚Äù category which we renamed to be ‚ÄúPilseners‚Äù.\r\nfct_lump()\r\nIn the beer_awards$city variable we have 803 cities. Say we‚Äôre only interested in the top 10 cities represented in the awards.\r\nWe can do this using fct_lump() along with the argument n.\r\n\r\n\r\nbeer_awards %>% \r\n    mutate(city = as_factor(city)) %>% \r\n    # keep the top 10 cities with the most observations\r\n    # and collapse all other cities into an `Other` category\r\n    mutate(city = fct_lump(city, n = 10)) %>% \r\n    pull(city) %>% \r\n    levels()\r\n  \r\n\r\n [1] \"San Antonio\"    \"Portland\"       \"Denver\"        \r\n [4] \"Golden\"         \"Chicago\"        \"San Diego\"     \r\n [7] \"Salt Lake City\" \"Seattle\"        \"Milwaukee\"     \r\n[10] \"Fort Collins\"   \"Other\"         \r\n\r\nWe can also keep categories with some percentage of the observations using fct_lump() along with the argument prop.\r\n\r\n\r\nbeer_awards %>% \r\n    mutate(city = as_factor(city)) %>% \r\n    # keep the cities with at least 1.5% of the observations\r\n    # and collapse all other cities into an `Other` category\r\n    mutate(city = fct_lump(city, prop = 0.015,\r\n                           # we can again relabel the 'Other' category\r\n                           other_level = \"Rest of the Cities\")) %>% \r\n    pull(city) %>% \r\n    levels()\r\n  \r\n\r\n[1] \"Portland\"           \"Denver\"             \"San Diego\"         \r\n[4] \"Seattle\"            \"Milwaukee\"          \"Rest of the Cities\"\r\n\r\nRe-labeling levels\r\nSometimes your factor categories will have long names. You many want to shorten these for graphs etc.\r\nbrewing_materials$type\r\n\r\n\r\nbrewing_materials %>% \r\n  count(type, sort = TRUE)\r\n\r\n\r\n# A tibble: 12 x 2\r\n   type                           n\r\n   <chr>                      <int>\r\n 1 Barley and barley products   120\r\n 2 Corn and corn products       120\r\n 3 Hops (dry)                   120\r\n 4 Hops (used as extracts)      120\r\n 5 Malt and malt products       120\r\n 6 Other                        120\r\n 7 Rice and rice products       120\r\n 8 Sugar and syrups             120\r\n 9 Total Grain products         120\r\n10 Total Non-Grain products     120\r\n11 Total Used                   120\r\n12 Wheat and wheat products     120\r\n\r\nfct_recode()\r\nThe brewing_materials$type variable has some long names. Let‚Äôs use fct_recode() to rename these.\r\n\r\n\r\nbrewing_materials %>% \r\n  mutate(type = as_factor(type)) %>% \r\n  mutate(type = fct_recode(type,\r\n          # \"new_name\" = \"old_name\"                 \r\n          \"Barley\"     = \"Barley and barley products\",\r\n          \"Malt\"       = \"Malt and malt products\",\r\n          \"Rice\"       = \"Rice and rice products\",\r\n          \"Corn\"       = \"Corn and corn products\",\r\n          \"Wheat\"      = \"Wheat and wheat products\",\r\n          # Notice here I am kinda doing the equivalent of fct_collapse()\r\n          # by assigning 2 categories to new \"Hops\" category\r\n          \"Hops\"       = \"Hops (dry)\",\r\n          \"Hops\"       = \"Hops (used as extracts)\"\r\n          )) %>% \r\n  count(type, sort = TRUE)\r\n\r\n\r\n# A tibble: 11 x 2\r\n   type                         n\r\n   <fct>                    <int>\r\n 1 Hops                       240\r\n 2 Malt                       120\r\n 3 Corn                       120\r\n 4 Rice                       120\r\n 5 Barley                     120\r\n 6 Wheat                      120\r\n 7 Total Grain products       120\r\n 8 Sugar and syrups           120\r\n 9 Other                      120\r\n10 Total Non-Grain products   120\r\n11 Total Used                 120\r\n\r\nReorder levels\r\nWhen visualising data we often want to reorder the levels of our factors. We can use fct_reorder(), fct_reorder2(), fct_infreq() and fct_rev() for ordering our factors for visuals.\r\nfct_infreq() and fct_rev()\r\nfct_infreq() orders by the frequency of each category.\r\nLet‚Äôs say we were interested in which breweries did the best over time in terms of winning gold medals.\r\n\r\n\r\ntheme_set(theme_light())\r\n\r\nbeer_awards %>% \r\n  # I only care about Gold medals\r\n  filter(medal == \"Gold\") %>% \r\n  # I am only interested in top 10 most successful breweries\r\n  mutate(brewery = fct_lump(brewery, n = 10,\r\n                            # if there are ties in 10th and 11th position, keep the first one\r\n                            ties.method = \"first\")) %>% \r\n  # add a count variable which will be named `n`\r\n  add_count(brewery, medal) %>% \r\n  # remove the Other category since it overwhelms the plot\r\n  filter(brewery != \"Other\") %>% \r\n  # order the brewery by the frequency in each brewery\r\n  ggplot(aes(y = fct_infreq(brewery))) +\r\n  geom_bar(fill = \"#f4e4e7\") +\r\n  geom_text(aes(label = as.character(n),\r\n                x = n + .06), hjust = \"center\",\r\n            colour = \"#5196b4\") +\r\n  labs(x = \"\",\r\n       y = \"\",\r\n       title = \"Breweries that won the most gold medals over time\") +\r\n  theme(axis.text.x = element_blank(),\r\n        axis.ticks.x = element_blank())\r\n\r\n\r\n\r\n\r\nThe fct_infreq() orders it from most frequent (which is shown at bottom of plot, because ggplot plots the levels from the bottom going up) to least frequent (shown at top of plot). Visually we see the least frequent at top of the plot, and most frequent at the bottom of the plot.\r\nTo see what fct_infreq() does let‚Äôs look at the levels.\r\n\r\n\r\nbeer_awards %>% \r\n  filter(medal == \"Gold\") %>% \r\n  mutate(brewery = fct_lump(brewery, n = 10,\r\n                            ties.method = \"first\")) %>%\r\n  filter(brewery != \"Other\") %>%\r\n  mutate(brewery = fct_infreq(brewery)) %>% \r\n  pull(brewery) %>% \r\n  levels()\r\n\r\n\r\n [1] \"Pabst Brewing Co.\"               \r\n [2] \"Firestone Walker Brewing Co.\"    \r\n [3] \"Boston Beer Co.\"                 \r\n [4] \"Miller Brewing Co.\"              \r\n [5] \"Anheuser-Busch, Inc\"             \r\n [6] \"New Belgium Brewing Co.\"         \r\n [7] \"Alaskan Brewing and Bottling Co.\"\r\n [8] \"Marin Brewing Co.\"               \r\n [9] \"Pelican Pub & Brewery\"           \r\n[10] \"New Glarus Brewing Co.\"          \r\n[11] \"Other\"                           \r\n\r\nIt is sometimes better to see bar plots in descending order on the visual (i.e.¬†we want to see the most frequent at top of plot, and least frequent at the bottom). This can be accomplished by combining fct_rev() with fct_infreq().\r\n\r\n\r\nbeer_awards %>% \r\n  filter(medal == \"Gold\") %>% \r\n  mutate(brewery = fct_lump(brewery, n = 10,\r\n                            ties.method = \"first\")) %>% \r\n  add_count(brewery, medal) %>% \r\n  filter(brewery != \"Other\") %>%\r\n  # show in decreasing order of winners on plot\r\n  ggplot(aes(y = fct_rev(fct_infreq(brewery)))) +\r\n  geom_bar(fill = \"#f4e4e7\") +\r\n  geom_text(aes(label = as.character(n),\r\n                x = n + .06), hjust = 1.2,\r\n            colour = \"#5196b4\",\r\n            size = 4.5,\r\n            position = position_dodge(width = 1)) +\r\n  labs(x = \"\",\r\n       y = \"\",\r\n       title = \"Breweries that won the most gold medals over time\") +\r\n  theme(axis.text.x = element_blank(),\r\n        axis.ticks.x = element_blank())\r\n\r\n\r\n\r\n\r\n\r\n\r\nbeer_awards %>% \r\n  mutate(brewery = fct_lump(brewery, n = 10)) %>% \r\n  add_count(brewery, medal) %>% \r\n  filter(brewery != \"Other\") %>% \r\n  ggplot(aes(y = fct_rev(fct_infreq(brewery)))) +\r\n  geom_bar(fill = \"#f4e4e7\") +\r\n  geom_text(aes(label = as.character(n),\r\n                x = n + .06), hjust = 1.2,\r\n            colour = \"#5196b4\",\r\n            size = 4.2,\r\n            position = position_dodge(width = 1)) +\r\n  facet_wrap(~ fct_inorder(medal)) +\r\n  labs(x = \"\",\r\n       y = \"\",\r\n       title = \"Most successful breweries over time\",\r\n       subtitle = \"In all medal categories\") +\r\n  theme(axis.text.x = element_blank(),\r\n        axis.ticks.x = element_blank())\r\n\r\n\r\n\r\n\r\nfct_reorder()\r\nOn occasion you may want to reorder to make your visuals easier to read. You can do this using fct_reorder().\r\nfct_reorder(var, some_other_var, some_func) where:\r\nvar: the variable you want to reorder (below this is the brewery variable)\r\nsome_other_var: what should determine the order that var will be put into? Below we‚Äôre going to reorder brewery by the count of medals the brewery received.\r\nsome_func: Is there some summary function that must be applied? For example, should we sum up some_other_var, or take the median of some_other_var for the order of var to be determined by. Below since we have Bronze, Silver and Gold medals we‚Äôre going to sum up the counts in each medal category and use that to determine which order brewery should be in.\r\nUltimately we want to plot the most successful breweries from most successful to least successful in the top 10.\r\n\r\n\r\nbeer_awards %>% \r\n  # keep top 10 breweries, lump all the rest into Other\r\n  mutate(brewery = fct_lump(brewery, n = 10)) %>% \r\n  add_count(brewery, medal) %>% \r\n  select(brewery, medal, n) %>% \r\n  distinct() %>% \r\n  # remove the \"Other\" category because it makes it hard\r\n  # to see all the rest\r\n  filter(brewery != \"Other\") %>% \r\n  # reorder the brewery by the sum of the number of all\r\n  # medals such that brewery with most medals are at top\r\n  mutate(brewery = fct_reorder(brewery, n, sum)) %>% \r\n  mutate(medal = fct_relevel(medal,\r\n                                \"Bronze\",\r\n                                \"Silver\",\r\n                                \"Gold\")) %>% \r\n  ggplot(aes(n, brewery, \r\n             fill = medal)) +\r\n  geom_col() +\r\n  geom_text(aes(label = n, fontface = \"bold\"), \r\n            position = position_stack(vjust = 0.5),\r\n            colour = \"white\") +\r\n  scale_fill_viridis_d() +\r\n  labs(x = \"\",\r\n       y = \"\",\r\n       title = \"Breweries with the most medals\",\r\n       fill = \"Medal\") +\r\n  theme(axis.text.x = element_blank(),\r\n        axis.ticks.x = element_blank()) +\r\n  guides(fill = guide_legend(reverse = TRUE))\r\n\r\n\r\n\r\n\r\nCode\r\nYou will find the RMarkdown replica of this post here.\r\nSession Info\r\n\r\n\r\nShow code\r\n\r\nsessionInfo()\r\n\r\n\r\nR version 3.6.3 (2020-02-29)\r\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\r\nRunning under: Windows 10 x64 (build 19042)\r\n\r\nMatrix products: default\r\n\r\nlocale:\r\n[1] LC_COLLATE=English_South Africa.1252 \r\n[2] LC_CTYPE=English_South Africa.1252   \r\n[3] LC_MONETARY=English_South Africa.1252\r\n[4] LC_NUMERIC=C                         \r\n[5] LC_TIME=English_South Africa.1252    \r\n\r\nattached base packages:\r\n[1] stats     graphics  grDevices utils     datasets  methods  \r\n[7] base     \r\n\r\nother attached packages:\r\n [1] forcats_0.5.0   stringr_1.4.0   dplyr_1.0.2     purrr_0.3.4    \r\n [5] readr_1.4.0     tidyr_1.1.2     tibble_3.0.3    ggplot2_3.3.2  \r\n [9] tidyverse_1.3.0 formatR_1.7    \r\n\r\nloaded via a namespace (and not attached):\r\n [1] Rcpp_1.0.6        lubridate_1.7.9   assertthat_0.2.1 \r\n [4] digest_0.6.27     utf8_1.1.4        R6_2.5.0         \r\n [7] cellranger_1.1.0  backports_1.1.6   reprex_0.3.0     \r\n[10] evaluate_0.14     httr_1.4.2        pillar_1.4.6     \r\n[13] rlang_0.4.10      curl_4.3          readxl_1.3.1     \r\n[16] rstudioapi_0.13   DT_0.16           rmarkdown_2.6.6  \r\n[19] labeling_0.3      htmlwidgets_1.5.1 munsell_0.5.0    \r\n[22] broom_0.7.2       compiler_3.6.3    modelr_0.1.8     \r\n[25] xfun_0.20         pkgconfig_2.0.3   htmltools_0.5.1  \r\n[28] downlit_0.2.1     tidyselect_1.1.0  codetools_0.2-16 \r\n[31] emo_0.0.0.9000    viridisLite_0.3.0 fansi_0.4.1      \r\n[34] crayon_1.3.4      dbplyr_2.0.0      withr_2.4.0      \r\n[37] grid_3.6.3        jsonlite_1.7.2    gtable_0.3.0     \r\n[40] lifecycle_0.2.0   DBI_1.1.0         magrittr_2.0.1   \r\n[43] scales_1.1.0      cli_2.2.0         stringi_1.5.3    \r\n[46] farver_2.0.3      fs_1.5.0          xml2_1.3.2       \r\n[49] ellipsis_0.3.1    generics_0.1.0    vctrs_0.3.2      \r\n[52] distill_1.2       tools_3.6.3       glue_1.4.2       \r\n[55] hms_0.5.3         crosstalk_1.1.0.1 yaml_2.2.1       \r\n[58] colorspace_1.4-1  rvest_0.3.6       knitr_1.30       \r\n[61] haven_2.3.1      \r\n\r\nFurther Resources\r\nChapter on Factors in R for Data Science.\r\n{forcats} Tidyverse Page.\r\nVignette on {forcats} by Emily Robinson.\r\nDavid Robinson‚Äôs TidyTuesday screencasts often include much factor wrangling.\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-01-30-control-your-factors-with-forcats/preview.jpg",
    "last_modified": "2021-02-20T21:39:33+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-12-31-using-tidyverse-with-dbs-partiii/",
    "title": "Using the tidyverse with Databases - Part III",
    "description": "Setting up, and connecting to a Star Wars MySQL Database",
    "author": [
      {
        "name": "Vebash Naidoo",
        "url": "https://twitter.com/Sciencificity"
      }
    ],
    "date": "2020-12-31",
    "categories": [
      "SQL",
      "databases",
      "tidyverse",
      "dbplyr",
      "MySQL",
      "MariaDB"
    ],
    "contents": "\r\n\r\nContents\r\nRecapPart I\r\nPart II\r\n\r\nWhat are we tackling in Part III?\r\nSetup a MySQL DBCreate a local MySQL instance\r\nOur data\r\nCreate some tables\r\n\r\nConnections PaneMake a connectionODBC\r\nAppropriate DBI-compliant package\r\n\r\nWriting to a MySQL Database from RStudio\r\n\r\nCommunicate with our MySQL DatabaseConnect\r\nTake a look around\r\nExplore data\r\nDone? Remember to disconnect!\r\nFin\r\n\r\nAcknowledgements\r\nMore resources\r\n\r\n\r\n\r\n\r\n\r\nblockquote {\r\n  background: #f9f9f9;\r\n  border-left: 10px solid #ccc;\r\n  margin: 1.5em 10px;\r\n  padding: 0.5em 10px;\r\n  quotes: \"\\201C\"\"\\201D\"\"\\2018\"\"\\2019\";\r\n}\r\nblockquote:before {\r\n  color: #ccc;\r\n  content: open-quote;\r\n  font-size: 4em;\r\n  line-height: 0.1em;\r\n  margin-right: 0.25em;\r\n  vertical-align: -0.4em;\r\n}\r\n# blockquote:after {\r\n#   color: #ccc;\r\n#   content:\"\\201D\";\r\n#   font-size: 4em;\r\n#   line-height: 0.1em;\r\n#   margin-right: 0.25em;\r\n#   vertical-align: -0.4em;\r\n# }\r\nblockquote p {\r\n  display: inline;\r\n}\r\n\r\n\r\nWhen gone am I, the last of the Jedi will you be. The Force runs strong in your family. Pass on what you have learned.\r\n\r\n\r\n‚Äî Yoda\r\n\r\nPhoto by Marija Zaric on Unsplash\r\nRecap\r\nPart I\r\nIn Part I we made a connection to a SQLite Database (DB).\r\nPart II\r\nIn Part II we progressed a bit further, with more in-depth {dplyr} workflows, and we also brought the data into R after doing most of the computation on the database itself.\r\nWhat are we tackling in Part III?\r\nWe‚Äôre going to:\r\nDo a quick run through of setting up a MySQL database.\r\nConnect to the database using the Connections Pane in RStudio, which is essentially a connection using an ODBC Driver.\r\nLeverage the MySQL DBMS to do the computation of the query on the database, instead of in R, bringing the aggregated data into R when needed. We will collect() (i.e.¬†bring data into R when we‚Äôre using functions that need the full dataset, not the ‚Äúlazy result‚Äù).\r\nFor visualisations using ggplot.\r\nSome functions only work on data in a dataframe like structure, and can‚Äôt work with the ‚Äúlazy query‚Äù result. We will need to collect() the data in this case to proceed with our data pipeline e.g.¬†pivot_longer() as we will see later.\r\n\r\ncollecting data is when we bring the data into R. If you recall in the Part II post we pulled data into R when we had our aggregated data computed via a query we ran in the DBMS itself.\r\nThe project on GitHub, has the code to setup the tables in the MySQL DB from R.\r\nSetup a MySQL DB\r\nWe‚Äôre going to set-up a local MySQL DB.\r\nWe‚Äôre going to use {dplyr}‚Äôs starwars dataset.\r\nWe‚Äôll supplement this with survey data from a TidyTuesday dataset back in 2018, as well as some information on the franchise revenue also from TidyTuesday.\r\nCreate a local MySQL instance\r\nGo to the MySQL page to download the appropriate server for you. I am on a Windows machine so I used the MySQL Installer for Windows.\r\nRun through the setup.\r\nFollow the setup steps - I installed a ‚ÄúFull version‚Äù.\r\nIf you did not create your ‚Äúroot‚Äù user during the setup process (this happened to me), open the MySQL Installer from your machine‚Äôs Startup Menu.\r\nClick Reconfigure next to MySQL Server.\r\n\r\nCheck Show Advanced and Logging Options.\r\nClick Next > to navigate the setup, which will ask you to setup a password for root.\r\n\r\n\r\nI opened MySQL Workbench and setup a user named admin, after connecting to the local host. It is good practise to keep your root user aside for security reasons, therefore creating other profiles to access the DB is advised.\r\nI created a ‚Äúschema‚Äù by clicking on the little Database icon in MySQL Workbench\r\nLink is ‚ÄúCreate a new schema in the connected server‚Äù.\r\n\r\nAlternately in the MySQL Command Line Client run:\r\nCREATE DATABASE starwars CHARACTER SET utf8 COLLATE utf8_unicode_ci;\r\nThat‚Äôs it for the MySQL DBMS itself, the rest of the work for setting up our DB will be done in R.\r\nOur data\r\nIn the {dplyr} üì¶ we have a dataset starwars which has information for the characters.\r\n\r\n\r\n# need to figure out what data is included\r\n# in a package? \r\n# Call data(package = \"pkg_name\")\r\n# which gives you a nice list of included datasets\r\ndata(package = \"dplyr\")\r\n\r\n\r\n\r\n\r\nLet‚Äôs have a squizz at the starwars dataset.\r\n\r\n\r\nstarwars\r\n\r\n\r\n# A tibble: 87 x 14\r\n   name  height  mass hair_color skin_color eye_color birth_year sex  \r\n   <chr>  <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr>\r\n 1 Luke~    172    77 blond      fair       blue            19   male \r\n 2 C-3PO    167    75 <NA>       gold       yellow         112   none \r\n 3 R2-D2     96    32 <NA>       white, bl~ red             33   none \r\n 4 Dart~    202   136 none       white      yellow          41.9 male \r\n 5 Leia~    150    49 brown      light      brown           19   fema~\r\n 6 Owen~    178   120 brown, gr~ light      blue            52   male \r\n 7 Beru~    165    75 brown      light      blue            47   fema~\r\n 8 R5-D4     97    32 <NA>       white, red red             NA   none \r\n 9 Bigg~    183    84 black      light      brown           24   male \r\n10 Obi-~    182    77 auburn, w~ fair       blue-gray       57   male \r\n# ... with 77 more rows, and 6 more variables: gender <chr>,\r\n#   homeworld <chr>, species <chr>, films <list>, vehicles <list>,\r\n#   starships <list>\r\n\r\nI broke this dataset apart to create different tables containing subsets of the information so we can practise on:\r\nfilms: contains information on the movies.\r\nvehicles: contains a listing on the vehicles in the movies.\r\nstarships: contains a listing for the starships in the movies.\r\nappearances: which has a listing of each character against the film they appeared in.\r\nvehicles_piloted: has a listing of each character against the vehicle they drove.\r\nstarships_piloted: has a listing of each character against the starship they piloted.\r\ncharacters: has information on each character for example their height, mass etc.\r\nsurvey: contains information from a survey run on the popularity of the Star Wars movies, characters etc.\r\nsurvey_levels: contains an id per character level rating e.g.¬†Very unfavorably was coded as 1.\r\nfranchise: contains the revenue of the franchise across different media - e.g.¬†how much revenue comes from movies, merchandise etc.\r\n\r\n\r\nhtml {\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\r\n}\r\n\r\n#qzobhueiin .gt_table {\r\n  display: table;\r\n  border-collapse: collapse;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  color: #333333;\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  font-style: normal;\r\n  background-color: #FFFFFF;\r\n  width: auto;\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #A8A8A8;\r\n  border-right-style: none;\r\n  border-right-width: 2px;\r\n  border-right-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #A8A8A8;\r\n  border-left-style: none;\r\n  border-left-width: 2px;\r\n  border-left-color: #D3D3D3;\r\n}\r\n\r\n#qzobhueiin .gt_heading {\r\n  background-color: #FFFFFF;\r\n  text-align: center;\r\n  border-bottom-color: #FFFFFF;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n}\r\n\r\n#qzobhueiin .gt_title {\r\n  color: #333333;\r\n  font-size: 125%;\r\n  font-weight: initial;\r\n  padding-top: 4px;\r\n  padding-bottom: 4px;\r\n  border-bottom-color: #FFFFFF;\r\n  border-bottom-width: 0;\r\n}\r\n\r\n#qzobhueiin .gt_subtitle {\r\n  color: #333333;\r\n  font-size: 85%;\r\n  font-weight: initial;\r\n  padding-top: 0;\r\n  padding-bottom: 4px;\r\n  border-top-color: #FFFFFF;\r\n  border-top-width: 0;\r\n}\r\n\r\n#qzobhueiin .gt_bottom_border {\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n}\r\n\r\n#qzobhueiin .gt_col_headings {\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n}\r\n\r\n#qzobhueiin .gt_col_heading {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: normal;\r\n  text-transform: inherit;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n  vertical-align: bottom;\r\n  padding-top: 5px;\r\n  padding-bottom: 6px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  overflow-x: hidden;\r\n}\r\n\r\n#qzobhueiin .gt_column_spanner_outer {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: normal;\r\n  text-transform: inherit;\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n}\r\n\r\n#qzobhueiin .gt_column_spanner_outer:first-child {\r\n  padding-left: 0;\r\n}\r\n\r\n#qzobhueiin .gt_column_spanner_outer:last-child {\r\n  padding-right: 0;\r\n}\r\n\r\n#qzobhueiin .gt_column_spanner {\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  vertical-align: bottom;\r\n  padding-top: 5px;\r\n  padding-bottom: 6px;\r\n  overflow-x: hidden;\r\n  display: inline-block;\r\n  width: 100%;\r\n}\r\n\r\n#qzobhueiin .gt_group_heading {\r\n  padding: 8px;\r\n  color: #333333;\r\n  background-color: #ADEFD1FF;\r\n  font-size: 100%;\r\n  font-weight: initial;\r\n  text-transform: inherit;\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n  vertical-align: middle;\r\n}\r\n\r\n#qzobhueiin .gt_empty_group_heading {\r\n  padding: 0.5px;\r\n  color: #333333;\r\n  background-color: #ADEFD1FF;\r\n  font-size: 100%;\r\n  font-weight: initial;\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  vertical-align: middle;\r\n}\r\n\r\n#qzobhueiin .gt_from_md > :first-child {\r\n  margin-top: 0;\r\n}\r\n\r\n#qzobhueiin .gt_from_md > :last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n#qzobhueiin .gt_row {\r\n  padding-top: 3px;\r\n  padding-bottom: 3px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  margin: 10px;\r\n  border-top-style: solid;\r\n  border-top-width: 1px;\r\n  border-top-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n  vertical-align: middle;\r\n  overflow-x: hidden;\r\n}\r\n\r\n#qzobhueiin .gt_stub {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: initial;\r\n  text-transform: inherit;\r\n  border-right-style: solid;\r\n  border-right-width: 2px;\r\n  border-right-color: #D3D3D3;\r\n  padding-left: 12px;\r\n}\r\n\r\n#qzobhueiin .gt_summary_row {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  text-transform: inherit;\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n}\r\n\r\n#qzobhueiin .gt_first_summary_row {\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n}\r\n\r\n#qzobhueiin .gt_grand_summary_row {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  text-transform: inherit;\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n}\r\n\r\n#qzobhueiin .gt_first_grand_summary_row {\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  border-top-style: double;\r\n  border-top-width: 6px;\r\n  border-top-color: #D3D3D3;\r\n}\r\n\r\n#qzobhueiin .gt_striped {\r\n  background-color: rgba(128, 128, 128, 0.05);\r\n}\r\n\r\n#qzobhueiin .gt_table_body {\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n}\r\n\r\n#qzobhueiin .gt_footnotes {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  border-bottom-style: none;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 2px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 2px;\r\n  border-right-color: #D3D3D3;\r\n}\r\n\r\n#qzobhueiin .gt_footnote {\r\n  margin: 0px;\r\n  font-size: 90%;\r\n  padding: 4px;\r\n}\r\n\r\n#qzobhueiin .gt_sourcenotes {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  border-bottom-style: none;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 2px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 2px;\r\n  border-right-color: #D3D3D3;\r\n}\r\n\r\n#qzobhueiin .gt_sourcenote {\r\n  font-size: 90%;\r\n  padding: 4px;\r\n}\r\n\r\n#qzobhueiin .gt_left {\r\n  text-align: left;\r\n}\r\n\r\n#qzobhueiin .gt_center {\r\n  text-align: center;\r\n}\r\n\r\n#qzobhueiin .gt_right {\r\n  text-align: right;\r\n  font-variant-numeric: tabular-nums;\r\n}\r\n\r\n#qzobhueiin .gt_font_normal {\r\n  font-weight: normal;\r\n}\r\n\r\n#qzobhueiin .gt_font_bold {\r\n  font-weight: bold;\r\n}\r\n\r\n#qzobhueiin .gt_font_italic {\r\n  font-style: italic;\r\n}\r\n\r\n#qzobhueiin .gt_super {\r\n  font-size: 65%;\r\n}\r\n\r\n#qzobhueiin .gt_footnote_marks {\r\n  font-style: italic;\r\n  font-size: 65%;\r\n}\r\nData Dictionary for the Star Wars Database\r\n    \r\n    \r\n      Field Type\r\n      Notes\r\n    films\r\n    id\r\n      integer\r\n      Identification field for the film e.g. 5\r\n    films\r\n      string\r\n      Movie Name e.g. \"The Empire Strikes Back\"\r\n    year\r\n      double\r\n      Year movie was released e.g. 1980\r\n    vehicles\r\n    id\r\n      integer\r\n      Identification field for the vehicle e.g. 3\r\n    vehicles\r\n      string\r\n      Name of vehicle e.g. \"Tribubble bongo\"\r\n    starships\r\n    id\r\n      integer\r\n      Identification field for the starship e.g. 10\r\n    starships\r\n      string\r\n      Name of starship e.g. \"Millennium Falcon\"\r\n    characters\r\n    name\r\n      string\r\n      Character Name e.g. Leia Organa\r\n    height\r\n      integer\r\n      Height of character\r\n    mass\r\n      double\r\n      Mass of character\r\n    hair_color\r\n      string\r\n      Hair Color of character\r\n    skin_color\r\n      string\r\n      Skin Color of character\r\n    eye_color\r\n      string\r\n      Eye Color of character\r\n    birth_year\r\n      double\r\n      Birth Year of character\r\n    sex\r\n      string\r\n      Sex of character\r\n    gender\r\n      string\r\n      Gender of character\r\n    homeworld\r\n      string\r\n      Homeworld of character\r\n    species\r\n      string\r\n      Species of character\r\n    appearances\r\n    film_id\r\n      integer\r\n      Link into the films table, e.g. 4 (denoting character appeared in \"A New Hope\")\r\n    name\r\n      string\r\n      Character Name e.g. Leia Organa\r\n    vehicles_piloted\r\n    vehicle_id\r\n      integer\r\n      Link into the vehicles table, e.g. 3 (denoting character drove a \"Tribubble bongo\")\r\n    name\r\n      string\r\n      Character Name e.g. Obi-Wan Kenobi\r\n    starships_piloted\r\n    starship_id\r\n      integer\r\n      Link into the starships table, e.g. 10 (denoting character piloted a \"Millennium Falcon\")\r\n    name\r\n      string\r\n      Character Name e.g. Chewbacca\r\n    survey_levels\r\n    id\r\n      integer\r\n      Identification for the survey response e.g. 1\r\n    level\r\n      string\r\n      The survey response e.g. \"Very unfavorably\"\r\n    survey\r\n    respondent_id\r\n      integer\r\n      Identification for the survey respondent e.g. 3292879998\r\n    any_of_6\r\n      string\r\n      Did respondent watch any of the 6 movies? (Original 6 before reboot) - e.g. Yes, No\r\n    star_wars_fan\r\n      string\r\n      Is the respondent a star wars fan? - e.g. Yes, No\r\n    watched_The Phantom Menace\r\n      string\r\n      Did the respondent watch said movie? - e.g. Yes, No\r\n    watched_A New Hope\r\n      string\r\n      Did the respondent watch said movie? - e.g. Yes, No\r\n    watched_Attack of the Clones\r\n      string\r\n      Did the respondent watch said movie? - e.g. Yes, No\r\n    watched_Return of the Jedi\r\n      string\r\n      Did the respondent watch said movie? - e.g. Yes, No\r\n    watched_Revenge of the Sith\r\n      string\r\n      Did the respondent watch said movie? - e.g. Yes, No\r\n    watched_The Empire Strikes Back\r\n      string\r\n      Did the respondent watch said movie? - e.g. Yes, No\r\n    rank_A New Hope\r\n      double\r\n      How does the respondent rank the movie? 1=Best, 6 =Worst\r\n    rank_Attack of the Clones\r\n      double\r\n      How does the respondent rank the movie? 1=Best, 6 =Worst\r\n    rank_Return of the Jedi\r\n      double\r\n      How does the respondent rank the movie? 1=Best, 6 =Worst\r\n    rank_Revenge of the Sith\r\n      double\r\n      How does the respondent rank the movie? 1=Best, 6 =Worst\r\n    rank_The Empire Strikes Back\r\n      double\r\n      How does the respondent rank the movie? 1=Best, 6 =Worst\r\n    rank_The Phantom Menace\r\n      double\r\n      How does the respondent rank the movie? 1=Best, 6 =Worst\r\n    `Han Solo`\r\n      integer\r\n      Link into survey_levels table where 5 = Very favorably\r\n    `Luke Skywalker`\r\n      integer\r\n      Link into survey_levels table where 5 = Very favorably\r\n    `Leia Organa`\r\n      integer\r\n      Link into survey_levels table where 5 = Very favorably\r\n    `Anakin Skywalker`\r\n      integer\r\n      Link into survey_levels table where 5 = Very favorably\r\n    `Obi-Wan Kenobi`\r\n      integer\r\n      Link into survey_levels table where 5 = Very favorably\r\n    `Palpatine`\r\n      integer\r\n      Link into survey_levels table where 5 = Very favorably\r\n    `Darth Vader`\r\n      integer\r\n      Link into survey_levels table where 5 = Very favorably\r\n    `Lando Calrissian`\r\n      integer\r\n      Link into survey_levels table where 5 = Very favorably\r\n    `Boba Fett`\r\n      integer\r\n      Link into survey_levels table where 5 = Very favorably\r\n    `C-3P0`\r\n      integer\r\n      Link into survey_levels table where 5 = Very favorably\r\n    `R2-D2`\r\n      integer\r\n      Link into survey_levels table where 5 = Very favorably\r\n    `Jar Jar Binks`\r\n      integer\r\n      Link into survey_levels table where 5 = Very favorably\r\n    `Padme Amidala`\r\n      integer\r\n      Link into survey_levels table where 5 = Very favorably\r\n    `Yoda`\r\n      integer\r\n      Link into survey_levels table where 5 = Very favorably\r\n    who_shot_first\r\n      string\r\n      Han, Greedo, or \"I don't understand the question\"\r\n    know_expanded_universe\r\n      string\r\n      Does respondent know the expanded universe? Yes / No\r\n    fan_expanded_universe\r\n      string\r\n      Does respondent like the expanded universe? Yes / No\r\n    trekkie\r\n      string\r\n      Is respondent a Star Trek fan? Yes / No\r\n    Gender\r\n      string\r\n      Gender e.g. Male\r\n    Age\r\n      string\r\n      Age range e.g. 30-44\r\n    Household Income\r\n      string\r\n      Income range e.g. $50,000 - $99,999\r\n    Education\r\n      string\r\n      Education level e.g. Some college or Associate degree\r\n    Location (Census Region)\r\n      string\r\n      Location of respondent e.g. East South Central\r\n    franchise\r\n    franchise\r\n      string\r\n      Star Wars\r\n    revenue_category\r\n      string\r\n      Category of revenue generation e.g. Book sales\r\n    revenue_billion_dollars\r\n      double\r\n      Revenue earned from category, in billions of dollars\r\n    year_created\r\n      double\r\n      Year the franchise was created\r\n    original_media\r\n      string\r\n      Original media the franchise was released on e.g. Book, Film\r\n    creators\r\n      string\r\n      Who created the franchise\r\n    owners\r\n      string\r\n      The owners of the franchise\r\n    \r\n\r\nCreate some tables\r\nHere‚Äôs an example of how I created the films, and the associated appearances tables.\r\n\r\n\r\n(films <- starwars %>%  \r\n  # get the films column which contains lists of values\r\n  select(films) %>% \r\n  # flatten the films list - this will create multiple rows for\r\n  # each film in the list\r\n  unnest(films) %>% \r\n  # get rid of duplicates\r\n  distinct() )\r\n\r\n\r\n# A tibble: 7 x 1\r\n  films                  \r\n  <chr>                  \r\n1 The Empire Strikes Back\r\n2 Revenge of the Sith    \r\n3 Return of the Jedi     \r\n4 A New Hope             \r\n5 The Force Awakens      \r\n6 Attack of the Clones   \r\n7 The Phantom Menace     \r\n\r\nfilm_years <- tribble(~name,      ~year,\r\n        #------------------------#------\r\n        \"The Empire Strikes Back\", 1980,\r\n        \"Revenge of the Sith\"    , 2005,\r\n        \"Return of the Jedi\"     , 1983,\r\n        \"A New Hope\"             , 1977,\r\n        \"The Force Awakens\"      , 2015,\r\n        \"Attack of the Clones\"   , 2002,\r\n        \"The Phantom Menace\"     , 1999)\r\n\r\nfilms <- films %>% \r\n  # Join the tables to tag on the `year` column\r\n  inner_join(film_years,\r\n             # left table column = films, right table column = name\r\n             by = c(\"films\" = \"name\"))\r\n\r\n# Order of films in terms of episodes, not release date\r\n# We're going to use this to create a factor\r\nfilm_levels <- c(\"The Phantom Menace\", \"Attack of the Clones\", \"Revenge of the Sith\",\r\n                 \"A New Hope\", \"The Empire Strikes Back\", \"Return of the Jedi\",\r\n                 \"The Force Awakens\")\r\n(films <- films %>% \r\n  # make \"films\" a factor using the film_levels we created above\r\n  # this will ensure the id = 4 is associated to 'A New Hope'\r\n  mutate(films = factor(films, film_levels),) %>% \r\n  # create an id column - we will use this later\r\n  # the .before just says I want the id column to come before the films column\r\n  mutate(id = as.integer(films), .before = \"films\") %>% \r\n  arrange(id))\r\n\r\n\r\n# A tibble: 7 x 3\r\n     id films                    year\r\n  <int> <fct>                   <dbl>\r\n1     1 The Phantom Menace       1999\r\n2     2 Attack of the Clones     2002\r\n3     3 Revenge of the Sith      2005\r\n4     4 A New Hope               1977\r\n5     5 The Empire Strikes Back  1980\r\n6     6 Return of the Jedi       1983\r\n7     7 The Force Awakens        2015\r\n\r\n(appearances <- starwars %>% \r\n  # let's save the characters appearances in the movies\r\n  select(name, films) %>% \r\n  # we end up with {character_name, film} for every film the character appears in\r\n  unnest(films) %>%\r\n  # join it with our new films table\r\n  inner_join(films) %>% \r\n  # select the id which we rename to film_id, and then the name of the character\r\n  select(film_id = id, name))\r\n\r\n\r\n# A tibble: 173 x 2\r\n   film_id name          \r\n     <int> <chr>         \r\n 1       5 Luke Skywalker\r\n 2       3 Luke Skywalker\r\n 3       6 Luke Skywalker\r\n 4       4 Luke Skywalker\r\n 5       7 Luke Skywalker\r\n 6       5 C-3PO         \r\n 7       2 C-3PO         \r\n 8       1 C-3PO         \r\n 9       3 C-3PO         \r\n10       6 C-3PO         \r\n# ... with 163 more rows\r\n\r\nIf you‚Äôd like to follow along the RMarkdown file with all the code is here.\r\nConnections Pane\r\nIn RStudio there is a Connections Pane.\r\nCreate a New Connection.\r\nChoose an appropriate driver (e.g.¬†I chose MySQL ODBC 8.0 Unicode Driver).\r\nIf you struggle to figure out the parameters needed in the Popup window provided, the connectionstrings website is a great help.\r\nChoose the DBMS you‚Äôre working with - in this case MySQL.\r\nCopy the connection string - in this case I used the TCP Port string.\r\n\r\nCopy the connection string as per the connection strings website and paste it in the Parameters field. Amend the parameters such as user name, password etc. as per your instance. If you‚Äôre using a corporate database, you need to use the IP Address provided by your Database Administrator as Server, same for your credentials etc.\r\nTest the connection.\r\nCopy the full string into the console / script you‚Äôre working in.\r\n\r\nMake a connection\r\nODBC\r\nWe use the connection string generated via the Connections Pane to connect to our MySQL DB, and write our data frames into database tables.\r\n\r\n\r\n# Load libraries\r\nlibrary(DBI)\r\n# Make a connection\r\ncon <- dbConnect(odbc::odbc(), \r\n  .connection_string = \"Driver={MySQL ODBC 8.0 Unicode Driver};\r\n      Server=localhost;\r\n      Port=3306;\r\n      Database=starwars;\r\n      Uid=admin;\r\n      Pwd=Luke1@my0urf@ther;\", \r\n    timeout = 10)\r\n\r\n\r\n\r\nAppropriate DBI-compliant package\r\nWe may alternatively use the appropriate DBI compliant package. (RMariaDB::MariaDB()).\r\n\r\nDBI is the DataBase Interface üì¶ for R. Instead of using an ODBC driver we may use one of the DBI compliant packages created by the R community to make a connection. In the case of MySQL we use RMariaDB üì¶\r\n\r\n\r\n# Make a connection\r\ncon <- dbConnect(drv = RMariaDB::MariaDB(), \r\n                 host = \"localhost\", \r\n                 port = \"3306\",\r\n                 user = \"admin\", \r\n                 password = \"Luke1@my0urf@ther\",\r\n                 dbname = \"starwars\")\r\n# Good housekeeping means disconnect\r\ndbDisconnect(con)\r\n\r\n\r\n\r\nWriting to a MySQL Database from RStudio\r\nOnce we have connected to the database, we‚Äôre ready to write our data frames into tables in the DBMS.\r\n\r\n\r\n# Write data frames we created to actual tables in the database\r\nDBI::dbWriteTable(conn = con, \r\n                  \"films\", # name of table in database\r\n                  films,   # the data frame\r\n                  overwrite = TRUE) # if table exists overwrite it with this data\r\nDBI::dbWriteTable(conn = con, \"appearances\",\r\n                  appearances, overwrite = TRUE)\r\n# Good housekeeping means disconnect\r\ndbDisconnect(con)\r\n\r\n\r\n\r\nCommunicate with our MySQL Database\r\nAlright, we‚Äôre all set now. We can now start to query our database tables in our MySQL DBMS.\r\nConnect\r\nAs before the first step is connecting.\r\n\r\n\r\n# Load libraries\r\nlibrary(DBI)\r\n# Make a connection\r\ncon <- dbConnect(odbc::odbc(), \r\n  .connection_string = \"Driver={MySQL ODBC 8.0 Unicode Driver};\r\n      Server=localhost;\r\n      Port=3306;\r\n      Database=starwars;\r\n      Uid=admin;\r\n      Pwd=Luke1@my0urf@ther;\", \r\n    timeout = 10)\r\ndbListTables(con)\r\n\r\n\r\n [1] \"appearances\"       \"characters\"        \"films\"            \r\n [4] \"franchise\"         \"starships\"         \"starships_piloted\"\r\n [7] \"survey\"            \"survey_levels\"     \"vehicles\"         \r\n[10] \"vehicles_piloted\" \r\n\r\ndbListFields(con, \"characters\")\r\n\r\n\r\n [1] \"name\"       \"height\"     \"mass\"       \"hair_color\" \"skin_color\"\r\n [6] \"eye_color\"  \"birth_year\" \"sex\"        \"gender\"     \"homeworld\" \r\n[11] \"species\"   \r\n\r\nTake a look around\r\nLet‚Äôs get familiar with our data.\r\n\r\n\r\ntbl(con, \"characters\")\r\n\r\n\r\n# Source:   table<characters> [?? x 11]\r\n# Database: mysql [admin@:/starwars]\r\n   name  height  mass hair_color skin_color eye_color birth_year sex  \r\n   <chr>  <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr>\r\n 1 Luke~    172    77 blond      fair       blue            19   male \r\n 2 C-3PO    167    75 <NA>       gold       yellow         112   none \r\n 3 R2-D2     96    32 <NA>       white, bl~ red             33   none \r\n 4 Dart~    202   136 none       white      yellow          41.9 male \r\n 5 Leia~    150    49 brown      light      brown           19   fema~\r\n 6 Owen~    178   120 brown, gr~ light      blue            52   male \r\n 7 Beru~    165    75 brown      light      blue            47   fema~\r\n 8 R5-D4     97    32 <NA>       white, red red             NA   none \r\n 9 Bigg~    183    84 black      light      brown           24   male \r\n10 Obi-~    182    77 auburn, w~ fair       blue-gray       57   male \r\n# ... with more rows, and 3 more variables: gender <chr>,\r\n#   homeworld <chr>, species <chr>\r\n\r\ntbl(con, \"films\")\r\n\r\n\r\n# Source:   table<films> [?? x 3]\r\n# Database: mysql [admin@:/starwars]\r\n     id films                    year\r\n  <int> <chr>                   <dbl>\r\n1     1 The Phantom Menace       1999\r\n2     2 Attack of the Clones     2002\r\n3     3 Revenge of the Sith      2005\r\n4     4 A New Hope               1977\r\n5     5 The Empire Strikes Back  1980\r\n6     6 Return of the Jedi       1983\r\n7     7 The Force Awakens        2015\r\n\r\ntbl(con, \"appearances\")\r\n\r\n\r\n# Source:   table<appearances> [?? x 2]\r\n# Database: mysql [admin@:/starwars]\r\n   film_id name          \r\n     <int> <chr>         \r\n 1       5 Luke Skywalker\r\n 2       3 Luke Skywalker\r\n 3       6 Luke Skywalker\r\n 4       4 Luke Skywalker\r\n 5       7 Luke Skywalker\r\n 6       5 C-3PO         \r\n 7       2 C-3PO         \r\n 8       1 C-3PO         \r\n 9       3 C-3PO         \r\n10       6 C-3PO         \r\n# ... with more rows\r\n\r\nConnecting via the Connections Pane has some additional perks, in that you can have a look at your tables as though you‚Äôre in the DBMS itself. You may also preview the first 1000 rows.\r\n\r\nExplore data\r\nLet‚Äôs see if we can have a look at the popularity of the characters as per the survey dataset.\r\nThe TidyTuesday Star Wars survey dataset we used, was based on this FiveThirtyEight article.\r\n\r\n\r\n(svy_levels <- tbl(con, \"survey_levels\") %>% \r\n  collect())\r\n\r\n\r\n# A tibble: 6 x 2\r\n     id level                                      \r\n  <int> <chr>                                      \r\n1     5 Very favorably                             \r\n2     4 Somewhat favorably                         \r\n3     3 Neither favorably nor unfavorably (neutral)\r\n4     2 Somewhat unfavorably                       \r\n5     6 Unfamiliar (N/A)                           \r\n6     1 Very unfavorably                           \r\n\r\n(character_survey <- tbl(con, \"survey\") %>% \r\n  # Let's subset the rows to only those who claim they are fans of\r\n  # the franchise\r\n  filter(any_of_6 == \"Yes\", star_wars_fan == \"Yes\") %>% \r\n  # Let's only consider some columns\r\n  select(`Han Solo`:`Yoda`, respondent_id,\r\n         age = Age, respondent_gender = Gender) %>% \r\n  # we have to collect the data since the pivot_longer is\r\n  # not set up to work on DB Table data\r\n  collect() %>% \r\n  # Put each character name which is currently the name of a column\r\n  # in a column as a value\r\n  pivot_longer(cols = c(`Han Solo`:`Yoda`), names_to = \"name\",\r\n               values_to = \"survey_id\") %>% \r\n  # Get the actual text of the response - e.g. Very Favorable\r\n  inner_join(svy_levels,\r\n             by = c(\"survey_id\" = \"id\")))\r\n\r\n\r\n# A tibble: 7,657 x 6\r\n   respondent_id age   respondent_gender name      survey_id level    \r\n           <dbl> <chr> <chr>             <chr>         <int> <chr>    \r\n 1    3292879998 18-29 Male              Han Solo          5 Very fav~\r\n 2    3292879998 18-29 Male              Luke Sky~         5 Very fav~\r\n 3    3292879998 18-29 Male              Leia Org~         5 Very fav~\r\n 4    3292879998 18-29 Male              Anakin S~         5 Very fav~\r\n 5    3292879998 18-29 Male              Obi-Wan ~         5 Very fav~\r\n 6    3292879998 18-29 Male              Palpatine         5 Very fav~\r\n 7    3292879998 18-29 Male              Darth Va~         5 Very fav~\r\n 8    3292879998 18-29 Male              Lando Ca~         6 Unfamili~\r\n 9    3292879998 18-29 Male              Boba Fett         6 Unfamili~\r\n10    3292879998 18-29 Male              C-3P0             5 Very fav~\r\n# ... with 7,647 more rows\r\n\r\n# We want to only get the character info for the characters in the survey\r\n# So we want to basically say `WHERE name IN (...)`\r\n# This code is setting that up\r\ncharacters <- character_survey %>% \r\n  select(name) %>% \r\n  distinct() %>% \r\n  mutate(name = str_glue(\"'{name}'\")) %>% \r\n  as_tibble()\r\ncolnames(characters) <-  NULL\r\ncharacters <- characters %>% as.list() %>% unlist()\r\ncharacters <- characters %>%  paste(collapse =  \", \")\r\n# Creating the WHERE name IN `(...)` part\r\n(sql_code <- str_glue(\"({characters})\"))\r\n\r\n\r\n('Han Solo', 'Luke Skywalker', 'Leia Organa', 'Anakin Skywalker', 'Obi-Wan Kenobi', 'Palpatine', 'Darth Vader', 'Lando Calrissian', 'Boba Fett', 'C-3P0', 'R2-D2', 'Jar Jar Binks', 'Padme Amidala', 'Yoda')\r\n\r\nchar_query <- tbl(con, \"characters\") %>% \r\n  inner_join(tbl(con, \"appearances\")) %>% \r\n  inner_join(tbl(con, \"films\"),\r\n             by = c(\"film_id\" = \"id\")) %>% \r\n  select(name, gender, homeworld, species, films, year) %>% \r\n  # Note here I use the special function `sql()` to directly \r\n  # insert a bit of SQL code in my pipeline\r\n  filter(name %in% sql(sql_code)) \r\n\r\nchar_query %>% \r\n  show_query()\r\n\r\n\r\n<SQL>\r\nSELECT *\r\nFROM (SELECT `name`, `gender`, `homeworld`, `species`, `films`, `year`\r\nFROM (SELECT `name`, `height`, `mass`, `hair_color`, `skin_color`, `eye_color`, `birth_year`, `sex`, `gender`, `homeworld`, `species`, `film_id`, `films`, `year`\r\nFROM (SELECT `LHS`.`name` AS `name`, `height`, `mass`, `hair_color`, `skin_color`, `eye_color`, `birth_year`, `sex`, `gender`, `homeworld`, `species`, `film_id`\r\nFROM `characters` AS `LHS`\r\nINNER JOIN `appearances` AS `RHS`\r\nON (`LHS`.`name` = `RHS`.`name`)\r\n) `LHS`\r\nINNER JOIN `films` AS `RHS`\r\nON (`LHS`.`film_id` = `RHS`.`id`)\r\n) `q01`) `q02`\r\nWHERE (`name` IN ('Han Solo', 'Luke Skywalker', 'Leia Organa', 'Anakin Skywalker', 'Obi-Wan Kenobi', 'Palpatine', 'Darth Vader', 'Lando Calrissian', 'Boba Fett', 'C-3P0', 'R2-D2', 'Jar Jar Binks', 'Padme Amidala', 'Yoda'))\r\n\r\n(character_info <- character_survey %>%\r\n  # we only want info for the characters that formed part of the survey\r\n  left_join(char_query %>% \r\n              collect())) \r\n\r\n\r\n# A tibble: 29,012 x 11\r\n   respondent_id age   respondent_gend~ name  survey_id level gender\r\n           <dbl> <chr> <chr>            <chr>     <int> <chr> <chr> \r\n 1    3292879998 18-29 Male             Han ~         5 Very~ mascu~\r\n 2    3292879998 18-29 Male             Han ~         5 Very~ mascu~\r\n 3    3292879998 18-29 Male             Han ~         5 Very~ mascu~\r\n 4    3292879998 18-29 Male             Han ~         5 Very~ mascu~\r\n 5    3292879998 18-29 Male             Luke~         5 Very~ mascu~\r\n 6    3292879998 18-29 Male             Luke~         5 Very~ mascu~\r\n 7    3292879998 18-29 Male             Luke~         5 Very~ mascu~\r\n 8    3292879998 18-29 Male             Luke~         5 Very~ mascu~\r\n 9    3292879998 18-29 Male             Luke~         5 Very~ mascu~\r\n10    3292879998 18-29 Male             Leia~         5 Very~ femin~\r\n# ... with 29,002 more rows, and 4 more variables: homeworld <chr>,\r\n#   species <chr>, films <chr>, year <dbl>\r\n\r\ncharacter_info <- character_info %>% \r\n  mutate(name = as.factor(name)) %>% \r\n  # Let's create aggregated survey levels by combining\r\n  # Somewhat favorable and Very favourable into the Favourable category\r\n  # We're essentially trimming down the categories as per the FiveThirtyEight\r\n  # article\r\n  mutate(sub_level = case_when(\r\n   str_detect(level, \"Neither favorably nor unfavorably\")  ~  \"Neutral\",\r\n   (str_detect(level, \" unfavorably\") |\r\n      str_detect(level, \"Somewhat unfavorably\"))           ~  \"Unfavourable\",\r\n   (str_detect(level, \"Very favorably\") |\r\n      str_detect(level, \"Somewhat favorably\"))             ~ \"Favourable\",\r\n   str_detect(level, \"Unfamiliar\")                         ~ \"Unfamiliar\",\r\n   TRUE                                                    ~ \"None\"\r\n   )) %>% \r\n  mutate(sub_level = factor(sub_level, levels = c(\"Favourable\", \r\n                                                  \"Neutral\", \"Unfavourable\", \r\n                                                  \"Unfamiliar\"))) \r\n\r\n# Processing to setup the waffle plot\r\n# We want to understand each character's popularity\r\ncharacter_info <- character_info %>% \r\n  select(respondent_id, name, sub_level) %>% \r\n  distinct() %>% \r\n  group_by(name) %>% \r\n  mutate(n = n()) %>% \r\n  ungroup() %>% \r\n  group_by(name, sub_level) %>% \r\n  mutate(\r\n    nn = n(),\r\n    perc = nn / n * 100.0) %>% \r\n  ungroup() %>% \r\n  select(name, sub_level, n, nn, perc) %>% \r\n  distinct() %>% \r\n  inner_join(character_info) %>% \r\n  select(respondent_id:respondent_gender, name, \r\n         survey_id, level, sub_level:perc, gender:year)\r\n\r\n\r\n\r\nWe‚Äôll create a waffle plot to have a look at how popular the characters are. In a few cases the overall percentage is slightly less than 100%. This is due to rounding quirks.\r\n\r\n\r\n# remotes::install_github(\"hrbrmstr/waffle\")\r\nlibrary(waffle)\r\n\r\ncharacter_info %>% \r\n  select(name, sub_level, perc) %>% \r\n  distinct() %>% \r\n  ggplot(aes(fill = sub_level, values = perc %>% round())) +\r\n  geom_waffle(colour = \"white\", n_rows = 10, size = 0.33,\r\n              pad = 1, flip = FALSE,\r\n              make_proportional = TRUE) +\r\n  facet_wrap(~ name) +\r\n  labs(title = \"Popularity of Star Wars Characters\",\r\n       subtitle = \"Among US respondents who consider themselves Star Wars Fans\",\r\n       x = \"1 square = 1%\",\r\n       fill = \"\")  +\r\n  theme(legend.position=\"bottom\", \r\n        panel.spacing = unit(1, \"lines\"),\r\n        strip.background = element_blank(),\r\n        axis.text.x = element_blank(),\r\n        axis.text.y = element_blank(),\r\n        axis.ticks = element_blank())\r\n\r\n\r\n\r\n# Check: \r\n# rounding causing waffle to not be fully filled\r\ncharacter_info %>% \r\n  select(name, sub_level, perc) %>% \r\n  distinct() %>% \r\n  filter(name == \"Lando Calrissian\")\r\n\r\n\r\n# A tibble: 4 x 3\r\n  name             sub_level     perc\r\n  <fct>            <fct>        <dbl>\r\n1 Lando Calrissian Unfamiliar    8.61\r\n2 Lando Calrissian Favourable   54.9 \r\n3 Lando Calrissian Neutral      28.8 \r\n4 Lando Calrissian Unfavourable  7.69\r\n\r\nDone? Remember to disconnect!\r\n\r\n\r\n# Good housekeeping means disconnect\r\ndbDisconnect(con)\r\n\r\n\r\n\r\nFin\r\nThat‚Äôs it for this series of working with databases. I hope it was useful, if you have any comments or feedback please let me know on Twitter.\r\nAcknowledgements\r\nEdgar Ruiz‚Äôs database work, and teachings.\r\nMore resources\r\nMy RStudio Certification GitHub Project\r\nRStudio DB Resources\r\nA murder mystery SQLite DB\r\n\r\n\r\n\r\n",
    "preview": "posts/2020-12-31-using-tidyverse-with-dbs-partiii/jens-johnsson-OFpzBycm3u0-unsplash.jpg",
    "last_modified": "2021-01-09T23:24:30+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-12-20-using-the-tidyverse-with-dbs-partii/",
    "title": "Using the tidyverse with Databases - Part II",
    "description": "I was serious, you don't need to be a SQL expert to work with Databases through R",
    "author": [
      {
        "name": "Vebash Naidoo",
        "url": "https://twitter.com/Sciencificity"
      }
    ],
    "date": "2020-12-20",
    "categories": [
      "SQL",
      "databases",
      "tidyverse",
      "dbplyr"
    ],
    "contents": "\r\n\r\nContents\r\nPart I\r\nWhat are we tackling in Part II?\r\nConnect, and remind ourselves what we‚Äôre working with\r\nMake a connection\r\nLet‚Äôs get familiar with our data\r\nresults\r\nbaker_results\r\n\r\n\r\nWhat are we interested in?\r\nJoining data\r\nRemember the tbl(con, \"tbl_name\") always\r\n\r\nCollect\r\nWhat does the query look like?\r\nBring it into R\r\nVisualise Data\r\n\r\nDone? Remember to disconnect!\r\n\r\nStill to come\r\nAcknowledgements\r\n\r\n\r\n\r\n\r\n\r\n.main-container {\r\n    max-width: 600px !important;\r\n}\r\n\r\npre {\r\n  max-height: 800px !important;\r\n  max-width: 600px !important;\r\n  overflow-y: auto !important;\r\n  overflow-x: scroll !important;\r\n}\r\n\r\npre[class] {\r\n  max-height: 100px;\r\n}\r\n\r\n\r\n\r\n\r\nPart I\r\nIn Part I we made a connection to a SQLite DB.\r\nWhat are we tackling in Part II?\r\nWe‚Äôll do more advanced dplyr üì¶ workflows.\r\nWe‚Äôll collect the data from the query.\r\ncollecting data is when we bring the data into R. If you recall in the Part I post, all computation was happening on the DB itself, and not pulled into R.\r\nThe project on GitHub, has the example SQLite database, the slides, and some code files.\r\nConnect, and remind ourselves what we‚Äôre working with\r\nMake a connection\r\nAs always, our first step is to connect to the database.\r\n\r\n\r\nlibrary(DBI) # main DB interface\r\nlibrary(dplyr) \r\nlibrary(dbplyr) # dplyr back-end for DBs\r\n\r\ncon <- dbConnect(drv = RSQLite::SQLite(), # give me a SQLite connection\r\n        dbname = \"data/great_brit_bakeoff.db\") # To what? The DB named great_brit_bakeoff.db\r\n\r\ndbListTables(con) # List me the tables at the connection\r\n\r\n\r\n [1] \"baker_results\"     \"bakers\"            \"bakes\"            \r\n [4] \"challenge_results\" \"challenges\"        \"episode_results\"  \r\n [7] \"episodes\"          \"ratings\"           \"ratings_seasons\"  \r\n[10] \"results\"           \"seasons\"           \"series\"           \r\n\r\nLet‚Äôs get familiar with our data\r\nIn the dataset we have:\r\nresults which tells us how each baker did in the episode - IN, OUT, WINNER etc.\r\nbaker_results which tells us a bit more about the baker‚Äôs performance over the entire series - how many times did they win STAR BAKER, how many times they placed in the top 3 etc.\r\nLet‚Äôs get an idea of what is in each table.\r\nresults\r\n\r\n\r\ntbl(con, \"results\") %>% # Reach into my connection, and \"talk\" to results table\r\n  head(10) %>%          # get me a subset of the data\r\n  # sometimes if there are many columns, some columns are hidden, \r\n  # this option prints all columns for us\r\n  print(width = Inf)    \r\n\r\n\r\n# Source:   lazy query [?? x 4]\r\n# Database: sqlite 3.33.0\r\n#   [C:\\Personal\\Blog_Vebash\\_posts\\2020-12-20-using-the-tidyverse-with-dbs-partii\\data\\great_brit_bakeoff.db]\r\n   series episode baker   result\r\n    <int>   <int> <chr>   <chr> \r\n 1      1       1 Annetha IN    \r\n 2      1       2 Annetha OUT   \r\n 3      1       3 Annetha <NA>  \r\n 4      1       4 Annetha <NA>  \r\n 5      1       5 Annetha <NA>  \r\n 6      1       6 Annetha <NA>  \r\n 7      1       1 David   IN    \r\n 8      1       2 David   IN    \r\n 9      1       3 David   IN    \r\n10      1       4 David   OUT   \r\n\r\n\r\n\r\ntbl(con, \"results\") %>% \r\n  count(result, sort = TRUE) # what categories of \"result\" are there?\r\n\r\n\r\n# Source:     lazy query [?? x 2]\r\n# Database:   sqlite 3.33.0\r\n#   [C:\\Personal\\Blog_Vebash\\_posts\\2020-12-20-using-the-tidyverse-with-dbs-partii\\data\\great_brit_bakeoff.db]\r\n# Ordered by: desc(n)\r\n  result         n\r\n  <chr>      <int>\r\n1 IN           452\r\n2 <NA>         376\r\n3 OUT           79\r\n4 STAR BAKER    70\r\n5 RUNNER-UP     18\r\n6 WINNER         9\r\n7 [a]            1\r\n8 WD             1\r\n\r\nbaker_results\r\n\r\n\r\ntbl(con, \"baker_results\") %>% # Reach in and \"talk\" to baker_results\r\n  head() %>%                  # get a glimpse of data\r\n  collect() %>%               # bring that glimpsed data into R \r\n  DT::datatable(options = list(scrollX = TRUE)) # force DT horizontal scrollbar\r\n\r\n\r\n\r\n{\"x\":{\"filter\":\"none\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\"],[1,1,1,1,1,1],[\"Annetha Mills\",\"David Chambers\",\"Edward \\\"Edd\\\" Kimber\",\"Jasminder Randhawa\",\"Jonathan Shepherd\",\"Lea Harris\"],[\"Annetha\",\"David\",\"Edd\",\"Jasminder\",\"Jonathan\",\"Lea\"],[30,31,24,45,25,51],[\"Single mother\",\"Entrepreneur\",\"Debt collector for Yorkshire Bank\",\"Assistant Credit Control Manager\",\"Research Analyst\",\"Retired\"],[\"Essex\",\"Milton Keynes\",\"Bradford\",\"Birmingham\",\"St Albans\",\"Midlothian, Scotland\"],[\"Mills\",\"Chambers\",\"Kimber\",\"Randhawa\",\"Shepherd\",\"Harris\"],[\"Annetha\",\"David\",\"Edward\",\"Jasminder\",\"Jonathan\",\"Lea\"],[0,0,0,0,0,0],[0,0,2,0,1,0],[1,1,4,2,1,0],[1,3,1,2,2,1],[2,3,1,2,1,10],[7,8,6,5,9,10],[4.5,4.5,2,3,6,10],[0,0,1,0,0,0],[0,0,0,0,0,0],[2,4,6,5,3,1],[14838,14838,14838,14838,14838,14838],[14845,14859,14873,14866,14852,14838],[null,null,null,null,null,null],[null,null,null,null,null,null],[33.3333333333333,66.6666666666667,100,83.3333333333333,50,16.6666666666667],[50,25,66.6666666666667,40,33.3333333333333,0]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>series<\\/th>\\n      <th>baker_full<\\/th>\\n      <th>baker<\\/th>\\n      <th>age<\\/th>\\n      <th>occupation<\\/th>\\n      <th>hometown<\\/th>\\n      <th>baker_last<\\/th>\\n      <th>baker_first<\\/th>\\n      <th>star_baker<\\/th>\\n      <th>technical_winner<\\/th>\\n      <th>technical_top3<\\/th>\\n      <th>technical_bottom<\\/th>\\n      <th>technical_highest<\\/th>\\n      <th>technical_lowest<\\/th>\\n      <th>technical_median<\\/th>\\n      <th>series_winner<\\/th>\\n      <th>series_runner_up<\\/th>\\n      <th>total_episodes_appeared<\\/th>\\n      <th>first_date_appeared<\\/th>\\n      <th>last_date_appeared<\\/th>\\n      <th>first_date_us<\\/th>\\n      <th>last_date_us<\\/th>\\n      <th>percent_episodes_appeared<\\/th>\\n      <th>percent_technical_top3<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"scrollX\":true,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,4,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}\r\nNotice the use of the collect() function in the code above. I wanted us to be able to get a full glimpse of the data in a nice table, and hence I brought the first few rows of data into R by using the collect() function. This allowed me to then use datatable to display the results a bit better, than the print(width = Inf) alternative.\r\nWhat are we interested in?\r\nLet‚Äôs say we want to see how the WINNER and RUNNER-UP(s) did in the series they appeared in.\r\nTo do that we need to get all the baker_results for the WINNER and RUNNER-UP.\r\nJoining data\r\nWhen doing joins we want to find the common columns across the two tables that we can join on.\r\nIn results we have series and baker.\r\nIn baker_results we have series and baker.\r\n‚ùì ü§î Why didn‚Äôt I also choose the episode column of results as a join column?  ‚úÖ Yes, that column is not in baker_results, since baker_results contains data about how the baker did overall in the series they appeared, that is, one row per baker. The results data however, contains info per baker, per episode, for the series they appeared in - i.e.¬†if they flopped (were OUT üòâ), in the second episode of a series that contained 10 episodes, their name would appear 10 times in the results table, but their ‚Äúresult‚Äù value will be NA from episode 3 onwards.\r\nRemember the tbl(con, \"tbl_name\") always\r\nI‚Äôd like to bring to your attention the use of tbl(con, \"table_1\") and tbl(con, \"table_2\") in the join function.\r\nWe must always keep this in mind, because baker_results and results don‚Äôt exist in R yet. We‚Äôre talking to those tables in our relational database management system (RDBMS), so we always have to do so through our connection.\r\n\r\n\r\nset.seed(42)\r\ntbl(con, \"baker_results\") %>% # use connection to \"talk\" to baker_results\r\n  inner_join(tbl(con, \"results\"), # use connection to \"talk\" to results and join both tables \r\n        by = c('baker' = 'baker',\r\n               'series' = 'series')) %>% # join criteria \r\n  collect() %>% # get it into R\r\n  sample_n(size = 3) %>% # take a random sample\r\n  print(width = Inf) # print all columns\r\n\r\n\r\n# A tibble: 3 x 26\r\n  series baker_full     baker     age occupation                 \r\n   <dbl> <chr>          <chr>   <dbl> <chr>                      \r\n1      6 Ian Cumming    Ian        41 Travel photographer        \r\n2      4 Frances Quinn  Frances    31 Children's Clothes Designer\r\n3      2 Yasmin Limbert Yasmin     43 Childminder                \r\n  hometown                          baker_last baker_first star_baker\r\n  <chr>                             <chr>      <chr>            <int>\r\n1 Great Wilbraham, Cambridgeshire   Cumming    Ian                  3\r\n2 Market Harborough, Leicestershire Quinn      Frances              1\r\n3 West Kirby, The Wirral            Limbert    Yasmin               1\r\n  technical_winner technical_top3 technical_bottom technical_highest\r\n             <int>          <int>            <int>             <dbl>\r\n1                1              6                4                 1\r\n2                1              7                3                 1\r\n3                0              2                4                 2\r\n  technical_lowest technical_median series_winner series_runner_up\r\n             <dbl>            <dbl>         <int>            <int>\r\n1                8                3             0                1\r\n2                8                3             1                0\r\n3                6                5             0                0\r\n  total_episodes_appeared first_date_appeared last_date_appeared\r\n                    <dbl>               <dbl>              <dbl>\r\n1                      10               16652              16715\r\n2                      10               15937              16000\r\n3                       6               15202              15237\r\n  first_date_us last_date_us percent_episodes_appeared\r\n          <dbl>        <dbl>                     <dbl>\r\n1         16983        17025                       100\r\n2         16432        16495                       100\r\n3            NA           NA                        75\r\n  percent_technical_top3 episode result\r\n                   <dbl>   <int> <chr> \r\n1                   60         5 IN    \r\n2                   70         5 IN    \r\n3                   33.3       5 IN    \r\n\r\nNotice that all columns of baker_results appear first and then we have the ‚Äúextra‚Äù columns from results i.e.¬†episode and result.\r\nCommon mistake\r\nI included the above to show that each time we ‚Äútalk‚Äù to a table we must do so through our connection, because I often make the mistake of not including the tbl(con, \"name_of_tbl_i_am_joining\") in the join function. I, more times than I care to admit ü§¶, incorrectly write:\r\n\r\n  tbl(con, \"table1\") %>% # correct -> \"talk\" through connection\r\n     left_join(table2,   # incorrect -> forgot to use the connection\r\n          by = c(\"tbl1_name1\" = \"tbl2_name1\"))\r\n\r\nI would like to help you, not repeat my mistake üòï, so heads up AVOID THE FOLLOWING üöè:\r\n\r\n\r\ntbl(con, \"baker_results\") %>% # use connection to \"talk\" to baker_results\r\n  inner_join(results,  # OOPS! I forgot the tbl(con, \"results\")\r\n        by = c('baker' = 'baker',\r\n               'series' = 'series'))  \r\n\r\n\r\nError in tbl_vars_dispatch(x): object 'results' not found\r\n\r\nCollect\r\nOk, let us now do our entire pipeline, and only bring the data into R when we‚Äôve got what we‚Äôre looking for.\r\nWe need to:\r\nJoin the tables\r\nFilter the data for WINNER and RUNNER-UP in the result column.\r\nSelect only the columns we‚Äôre interested in.\r\n\r\n\r\n(final_query <- tbl(con, \"baker_results\") %>% # use connection to \"talk\" to baker_results\r\n  inner_join(tbl(con, \"results\"), # use connection to \"talk\" to results and join both tables \r\n        by = c('baker' = 'baker',\r\n               'series' = 'series')) %>% # join criteria \r\n  filter(result %in% c(\"WINNER\", \"RUNNER-UP\")) %>% # filter rows we're interested in\r\n  select(series, baker:percent_technical_top3,\r\n         result))\r\n\r\n\r\n# Source:   lazy query [?? x 24]\r\n# Database: sqlite 3.33.0\r\n#   [C:\\Personal\\Blog_Vebash\\_posts\\2020-12-20-using-the-tidyverse-with-dbs-partii\\data\\great_brit_bakeoff.db]\r\n   series baker   age occupation hometown baker_last baker_first\r\n    <dbl> <chr> <dbl> <chr>      <chr>    <chr>      <chr>      \r\n 1      1 Edd      24 Debt coll~ Bradford Kimber     Edward     \r\n 2      1 Mira~    37 Food buye~ Midhurs~ Browne     Miranda    \r\n 3      1 Ruth     31 Retail ma~ Poynton~ Clemens    Ruth       \r\n 4      2 Holly    31 Advertisi~ Leicest~ Bell       Holly      \r\n 5      2 Joan~    41 Housewife  Ongar, ~ Wheatley   Joanne     \r\n 6      2 Mary~    45 Housewife  Kidderm~ Boermans   Mary-Anne  \r\n 7      3 Bren~    63 Recruitme~ Sutton ~ Lynch      Brendan    \r\n 8      3 James    21 Medical s~ Hillswi~ Morton     James      \r\n 9      3 John     23 Law stude~ Wigan    Whaite     John       \r\n10      4 Fran~    31 Children'~ Market ~ Quinn      Frances    \r\n# ... with more rows, and 17 more variables: star_baker <int>,\r\n#   technical_winner <int>, technical_top3 <int>,\r\n#   technical_bottom <int>, technical_highest <dbl>,\r\n#   technical_lowest <dbl>, technical_median <dbl>,\r\n#   series_winner <int>, series_runner_up <int>,\r\n#   total_episodes_appeared <dbl>, first_date_appeared <dbl>,\r\n#   last_date_appeared <dbl>, first_date_us <dbl>,\r\n#   last_date_us <dbl>, percent_episodes_appeared <dbl>,\r\n#   percent_technical_top3 <dbl>, result <chr>\r\n\r\nThe above code just sets up the query that will be executed should we run (Ctrl + Enter) final_query in R (hence the lazy query [?? x 24] in the output). No data is collected (i.e.¬†present in your local R environment) as yet.\r\nWhat does the query look like?\r\n\r\n\r\n.scroll-100 {\r\n  white-space:pre !important;\r\n  max-width: 100px;\r\n  overflow-x: scroll;\r\n  background-color: inherit;\r\n}\r\ncode.r{\r\n  font-size: 10px;\r\n}\r\n\r\n\r\n\r\n\r\nfinal_query %>% \r\n  show_query() \r\n\r\n\r\n<SQL>\r\nSELECT `series`, `baker`, `age`, `occupation`, `hometown`, `baker_last`, `baker_first`, `star_baker`, `technical_winner`, `technical_top3`, `technical_bottom`, `technical_highest`, `technical_lowest`, `technical_median`, `series_winner`, `series_runner_up`, `total_episodes_appeared`, `first_date_appeared`, `last_date_appeared`, `first_date_us`, `last_date_us`, `percent_episodes_appeared`, `percent_technical_top3`, `result`\r\nFROM (SELECT `LHS`.`series` AS `series`, `baker_full`, `LHS`.`baker` AS `baker`, `age`, `occupation`, `hometown`, `baker_last`, `baker_first`, `star_baker`, `technical_winner`, `technical_top3`, `technical_bottom`, `technical_highest`, `technical_lowest`, `technical_median`, `series_winner`, `series_runner_up`, `total_episodes_appeared`, `first_date_appeared`, `last_date_appeared`, `first_date_us`, `last_date_us`, `percent_episodes_appeared`, `percent_technical_top3`, `episode`, `result`\r\nFROM `baker_results` AS `LHS`\r\nINNER JOIN `results` AS `RHS`\r\nON (`LHS`.`baker` = `RHS`.`baker` AND `LHS`.`series` = `RHS`.`series`)\r\n)\r\nWHERE (`result` IN ('WINNER', 'RUNNER-UP'))\r\n\r\n\r\nBring it into R\r\nNow finally, we are ready to bring our filtered and joined data into R by using collect().\r\n\r\n\r\n(top_performers <- final_query %>% \r\n  collect())\r\n\r\n\r\n# A tibble: 24 x 24\r\n   series baker   age occupation hometown baker_last baker_first\r\n    <dbl> <chr> <dbl> <chr>      <chr>    <chr>      <chr>      \r\n 1      1 Edd      24 Debt coll~ Bradford Kimber     Edward     \r\n 2      1 Mira~    37 Food buye~ Midhurs~ Browne     Miranda    \r\n 3      1 Ruth     31 Retail ma~ Poynton~ Clemens    Ruth       \r\n 4      2 Holly    31 Advertisi~ Leicest~ Bell       Holly      \r\n 5      2 Joan~    41 Housewife  Ongar, ~ Wheatley   Joanne     \r\n 6      2 Mary~    45 Housewife  Kidderm~ Boermans   Mary-Anne  \r\n 7      3 Bren~    63 Recruitme~ Sutton ~ Lynch      Brendan    \r\n 8      3 James    21 Medical s~ Hillswi~ Morton     James      \r\n 9      3 John     23 Law stude~ Wigan    Whaite     John       \r\n10      4 Fran~    31 Children'~ Market ~ Quinn      Frances    \r\n# ... with 14 more rows, and 17 more variables: star_baker <int>,\r\n#   technical_winner <int>, technical_top3 <int>,\r\n#   technical_bottom <int>, technical_highest <dbl>,\r\n#   technical_lowest <dbl>, technical_median <dbl>,\r\n#   series_winner <int>, series_runner_up <int>,\r\n#   total_episodes_appeared <dbl>, first_date_appeared <dbl>,\r\n#   last_date_appeared <dbl>, first_date_us <dbl>,\r\n#   last_date_us <dbl>, percent_episodes_appeared <dbl>,\r\n#   percent_technical_top3 <dbl>, result <chr>\r\n\r\nHow about that? Notice the A tibble: 24 x 24! R now, has the data in it‚Äôs local environment, and can definitively tell us it knows there are 24 observations (no more lazy query) üòÑ.\r\nVisualise Data\r\nNow that we have finalised what data we wanted from our RDBMS, executed our query, and collected the data into our R environment we can do further processing, create plots for reports etc.\r\nI am interested in understanding how did the winner and runner-up(s) of series 6 do across the season in terms of technical challenges etc.?\r\n\r\n\r\nlibrary(tidyverse)\r\n\r\ntop_performers %>% \r\n  # filter for season we're interested in\r\n  filter(series == 6) %>%\r\n  # format baker nicely so we see winner, then runner-up(s)\r\n  mutate(baker_name = factor(str_glue(\"{result} - {baker}\")),\r\n         baker_name = fct_rev(baker_name)) %>% \r\n  # let's convert all the tech info cols to be a metric name, \r\n  # and put the value in the value column \r\n  # (by default values_to = \"value\" in pivot_longer())\r\n  pivot_longer(cols = c(star_baker:technical_median),\r\n               names_to = \"metric\") %>% \r\n  mutate(metric = fct_reorder(metric, value)) %>% \r\n  ggplot(aes(x = value, y = metric)) +\r\n  geom_col(fill = \"#727d97\") +\r\n  facet_wrap(~ baker_name) +\r\n  labs(title = str_glue(\"Metrics for Season \",\r\n    \"{top_performers %>%  filter(series == 6) %>%\r\n    select(series) %>% distinct()}'s Winner and Runner-Up(s)\"),\r\n    y = \"\") +\r\n  theme_light() +\r\n  theme(panel.spacing = unit(1, \"lines\")) +\r\n  theme(strip.background =element_rect(fill=\"#f4e4e7\"))+\r\n  theme(strip.text = element_text(colour = \"#5196b4\"))\r\n\r\n\r\n\r\n\r\nGiven that Nadiya was a technical winner more times than the other contestants, and that her technical_lowest was better (higher number is better) it looks like she had a good run throughout the series, and was a deserved winner.\r\nDone? Remember to disconnect!\r\nGood housekeeping means always remembering to disconnect once you‚Äôre done.\r\n\r\n\r\ndbDisconnect(con) # closes our DB connection\r\n\r\n\r\n\r\nStill to come\r\nSetting up an external DB in PostgreSQL / MySQL.\r\nConnecting to said DB, and running SQL workloads on it.\r\nAcknowledgements\r\nThe Great British Bake Off data from Dr.¬†Alison Hill.\r\nEdgar Ruiz‚Äôs database work, and teachings.\r\n\r\n\r\n\r\n",
    "preview": "posts/2020-12-20-using-the-tidyverse-with-dbs-partii/Paper.R_Programming.4.png",
    "last_modified": "2021-01-31T18:05:04+02:00",
    "input_file": {},
    "preview_width": 2048,
    "preview_height": 1536
  },
  {
    "path": "posts/2020-12-12-using-the-tidyverse-with-databases/",
    "title": "Using the tidyverse with Databases - Part I",
    "description": "You don't need to be a SQL expert to work with Databases through R",
    "author": [
      {
        "name": "Vebash Naidoo",
        "url": "https://twitter.com/Sciencificity"
      }
    ],
    "date": "2020-12-12",
    "categories": [
      "SQL",
      "databases",
      "tidyverse",
      "dbplyr"
    ],
    "contents": "\r\n\r\nContents\r\nBackground\r\nIntro to using Databases in R, with Tidyverse tools (Part I)Motivation\r\nConnecting to a DatabasePackages needed\r\nThe database we‚Äôll use\r\nConnecting to a SQLite DB\r\n\r\nTake a look aroundDBI Functions\r\ndplyr Functions\r\nHave a look at the SQL behind the scenes\r\nWhat‚Äôs with this lazy query / ?? we‚Äôre seeing?\r\n\r\nDone? Remember to disconnect!\r\n\r\nSlides\r\nStill to comeAcknowledgements\r\n\r\n\r\n\r\nBackground\r\nOn the 1st of December I certified as an RStudio Tidyverse Instructor. As part of the process I prepared a sample lesson that was delivered during the exam. In a series of posts I will go through an extension of that sample lesson.\r\nIntro to using Databases in R, with Tidyverse tools (Part I)\r\nMotivation\r\nYou often have data in a corporate or institutional database (often termed relational database management system, or RDBMS). The language to talk with such a database (DB) is some variant of the language SQL (Structured Query Language). I say some variant, since a vendor providing an RDBMS may adopt the standardised SQL, but they may also extend it with their own variations.\r\nIf you use different RDBMS‚Äôs from different vendors you need to understand how to query that DB using the particular SQL dialect used by that vendor. For example, we use PostgreSQL, and we also use PrestoDB (for Athena on AWS). JSON fields in the PostgreSQL DB are ingested as structured nested arrays in AWS and hence when querying the same field we use different query syntax.\r\nYou know R, especially the dplyr üì¶. Even though the dplyr üì¶ is so well written to mimic the SQL syntax - select(), group_by(), left_join() etc. there is still a cognitive load when you switch between using R syntax, and SQL syntax (ask me, who has often written == in SQL syntax on Athena only to wonder why I am getting an error ü§ê).\r\nYou only have so much memory in your local environment, and may want your RDBMS to do the heavy lifting (most of the computation), and only pull data into R when you need to (e.g.¬†pull in aggregated data to create plots for a report).\r\nIn this tutorial you will learn how to use dbplyr, which is a database back-end of dplyr, to execute queries directly in your RDBMS all the while writing R tidyverse syntax üòÆ ‚≠ê.\r\nConnecting to a Database\r\nPackages needed\r\nDBI: This is the main package which is a Database Interface for R.install.packages(\"DBI\")\r\ndbplyr: The üì¶ we may use to talk to our database, all the while using dplyr syntax in our code.install.packages(\"dbplyr\")\r\ndplyr: To select(), group_by() as well as ‚Äútalk‚Äù, via the connection we will establish, to a database table.\r\nRSQLite: DBI compliant package that allows a connection to a lightweight single user SQLite DB.install.packages(\"RSQLite\")\r\nOther DBI compliant R packages you may need for your use case - e.g.¬†RPostgres is for connecting to a PostgreSQL RDBMS. Note: Not used in this tutorial (brief overview in slides), and RStudio‚Äôs DB Website is a treasure trove of information üë©‚Äçüíª.\r\nodbc: This is a DBI compliant interface to allow you to interface to your RDBMS using an odbc driver.Note: Not used in this tutorial (brief overview in slides), and again RStudio‚Äôs DB Website has useful information in this regard too!install.packages(\"odbc\")\r\nThe database we‚Äôll use\r\nAlison Hill created a dataset for The Great British Bake Off. I used the data from her package to create a SQLite DB that we will use to practise on.\r\nConnecting to a SQLite DB\r\nFor the purposes of this tutorial we will connect to a SQLite DB that I created. To talk to the DB we need to first make a connection.\r\nLoad the DBI package: library(DBI)\r\nMake a connection: con <- dbConnect(RSQLite::SQLite(), \"mydb.db\")\r\n\r\n\r\nlibrary(DBI) # main DB interface\r\nlibrary(dplyr) \r\nlibrary(dbplyr) # dplyr back-end for DBs\r\n\r\ncon <- dbConnect(drv = RSQLite::SQLite(), # give me a SQLite connection\r\n        dbname = \"data/great_brit_bakeoff.db\") # To what? The DB named great_brit_bakeoff.db\r\nsummary(con) # What do we have? \r\n\r\n\r\n          Length            Class             Mode \r\n               1 SQLiteConnection               S4 \r\n\r\nOk, we have successfully managed to connect to the DB.\r\nTake a look around\r\nAlright, we‚Äôve made a connection now what? Let‚Äôs have a look around using some DBI functions.\r\nDBI Functions\r\n\r\n\r\ndbListTables(con) # List me the tables at the connection\r\n\r\n\r\n [1] \"baker_results\"     \"bakers\"            \"bakes\"            \r\n [4] \"challenge_results\" \"challenges\"        \"episode_results\"  \r\n [7] \"episodes\"          \"ratings\"           \"ratings_seasons\"  \r\n[10] \"results\"           \"seasons\"           \"series\"           \r\n\r\ndbListFields(con, # Reach into my connection and ...\r\n      \"bakers\")   # tell me what fields does the `bakers` table have?\r\n\r\n\r\n[1] \"series\"     \"baker_full\" \"age\"        \"occupation\" \"hometown\"  \r\n\r\nres <- dbSendQuery(con, \"SELECT * FROM bakers LIMIT 3\") # Execute a query\r\ndbFetch(res) # get the result\r\n\r\n\r\n  series          baker_full age                        occupation\r\n1      1       Annetha Mills  30                           Midwife\r\n2      1      David Chambers  31                      Entrepreneur\r\n3      1 Edward \"Edd\" Kimber  24 Debt collector for Yorkshire Bank\r\n       hometown\r\n1         Essex\r\n2 Milton Keynes\r\n3      Bradford\r\n\r\ndbClearResult(res) # clear the result\r\n\r\n\r\n\r\ndplyr Functions\r\nOk, let‚Äôs flex our dplyr skills üòÑ.\r\ntbl(con, \"name_of_table\") says using my connection ‚Äúcon‚Äù go execute a SELECT * FROM name_of_table.\r\n\r\n\r\ntbl(con, \"bakers\") # let's have a look - works like glimpse()\r\n\r\n\r\n# Source:   table<bakers> [?? x 5]\r\n# Database: sqlite 3.33.0\r\n#   [C:\\Personal\\Blog_Vebash\\_posts\\2020-12-12-using-the-tidyverse-with-databases\\data\\great_brit_bakeoff.db]\r\n   series baker_full          age occupation            hometown      \r\n    <dbl> <chr>             <dbl> <chr>                 <chr>         \r\n 1      1 \"Annetha Mills\"      30 Midwife               Essex         \r\n 2      1 \"David Chambers\"     31 Entrepreneur          Milton Keynes \r\n 3      1 \"Edward \\\"Edd\\\" ~    24 Debt collector for Y~ Bradford      \r\n 4      1 \"Jasminder Randh~    45 Assistant Credit Con~ Birmingham    \r\n 5      1 \"Jonathan Shephe~    25 Research Analyst      St Albans     \r\n 6      1 \"Lea Harris\"         51 Retired               Midlothian, S~\r\n 7      1 \"Louise Brimelow\"    44 Police Officer        Manchester    \r\n 8      1 \"Mark Whithers\"      48 Bus Driver            South Wales   \r\n 9      1 \"Miranda Gore Br~    37 Food buyer for Marks~ Midhurst, Wes~\r\n10      1 \"Ruth Clemens\"       31 Retail manager/House~ Poynton, Ches~\r\n# ... with more rows\r\n\r\ntbl(con, \"bakers\") %>% \r\n  head(3) # \"SELECT * FROM bakers LIMIT 3\"\r\n\r\n\r\n# Source:   lazy query [?? x 5]\r\n# Database: sqlite 3.33.0\r\n#   [C:\\Personal\\Blog_Vebash\\_posts\\2020-12-12-using-the-tidyverse-with-databases\\data\\great_brit_bakeoff.db]\r\n  series baker_full           age occupation               hometown   \r\n   <dbl> <chr>              <dbl> <chr>                    <chr>      \r\n1      1 \"Annetha Mills\"       30 Midwife                  Essex      \r\n2      1 \"David Chambers\"      31 Entrepreneur             Milton Key~\r\n3      1 \"Edward \\\"Edd\\\" K~    24 Debt collector for York~ Bradford   \r\n\r\nNotice that each time we used con. We use our connection con to ‚Äútalk‚Äù to our database, and we will use it throughout, even in our tidy pipelines.\r\nIn baker_results we have the baker with their details, as well as their standing in the series competition. Let‚Äôs say we wanted to know if the winners came from different areas in Britain, or from some areas in particular.\r\n\r\n\r\ndbListFields(con, \"baker_results\")\r\n\r\n\r\n [1] \"series\"                    \"baker_full\"               \r\n [3] \"baker\"                     \"age\"                      \r\n [5] \"occupation\"                \"hometown\"                 \r\n [7] \"baker_last\"                \"baker_first\"              \r\n [9] \"star_baker\"                \"technical_winner\"         \r\n[11] \"technical_top3\"            \"technical_bottom\"         \r\n[13] \"technical_highest\"         \"technical_lowest\"         \r\n[15] \"technical_median\"          \"series_winner\"            \r\n[17] \"series_runner_up\"          \"total_episodes_appeared\"  \r\n[19] \"first_date_appeared\"       \"last_date_appeared\"       \r\n[21] \"first_date_us\"             \"last_date_us\"             \r\n[23] \"percent_episodes_appeared\" \"percent_technical_top3\"   \r\n\r\ntbl(con, \"baker_results\") %>% \r\n  select(series, baker, hometown, series_winner) # normal dplyr select\r\n\r\n\r\n# Source:   lazy query [?? x 4]\r\n# Database: sqlite 3.33.0\r\n#   [C:\\Personal\\Blog_Vebash\\_posts\\2020-12-12-using-the-tidyverse-with-databases\\data\\great_brit_bakeoff.db]\r\n   series baker     hometown              series_winner\r\n    <dbl> <chr>     <chr>                         <int>\r\n 1      1 Annetha   Essex                             0\r\n 2      1 David     Milton Keynes                     0\r\n 3      1 Edd       Bradford                          1\r\n 4      1 Jasminder Birmingham                        0\r\n 5      1 Jonathan  St Albans                         0\r\n 6      1 Lea       Midlothian, Scotland              0\r\n 7      1 Louise    Manchester                        0\r\n 8      1 Mark      South Wales                       0\r\n 9      1 Miranda   Midhurst, West Sussex             0\r\n10      1 Ruth      Poynton, Cheshire                 0\r\n# ... with more rows\r\n\r\nNotice how our dplyr select() has trimmed down the number of columns from 24 to 4.\r\nTime to see if our winning bakers hail from similar hometowns or not.\r\n\r\n\r\ntbl(con, \"baker_results\") %>% \r\n  select(series, baker, hometown, series_winner) %>% \r\n  filter(series_winner == 1) %>% # normal dplyr filter\r\n  count(hometown, sort = TRUE)   # normal dplyr count\r\n\r\n\r\n# Source:     lazy query [?? x 2]\r\n# Database:   sqlite 3.33.0\r\n#   [C:\\Personal\\Blog_Vebash\\_posts\\2020-12-12-using-the-tidyverse-with-databases\\data\\great_brit_bakeoff.db]\r\n# Ordered by: desc(n)\r\n  hometown                              n\r\n  <chr>                             <int>\r\n1 Wigan                                 1\r\n2 West Molesey, Surrey                  1\r\n3 Ongar, Essex                          1\r\n4 Market Harborough, Leicestershire     1\r\n5 Leeds / Luton                         1\r\n6 Bradford                              1\r\n7 Barton-Upon-Humber, Lincolnshire      1\r\n8 Barton-Le-Clay, Bedfordshire          1\r\n\r\nLooks like our winners are from very different areas.\r\nHave a look at the SQL behind the scenes\r\nOur dplyr syntax is converted behind the scenes to SQL which is executed directly on the DB table.\r\n\r\n\r\ntbl(con, \"baker_results\") %>% \r\n  select(series, baker, hometown, series_winner) %>% \r\n  filter(series_winner == 1) %>% \r\n  count(hometown, sort = TRUE) %>% \r\n  show_query()\r\n\r\n\r\n<SQL>\r\nSELECT `hometown`, COUNT(*) AS `n`\r\nFROM (SELECT `series`, `baker`, `hometown`, `series_winner`\r\nFROM `baker_results`)\r\nWHERE (`series_winner` = 1.0)\r\nGROUP BY `hometown`\r\nORDER BY `n` DESC\r\n\r\nThat‚Äôs pretty nifty, and helps you learn SQL in the process - it is always good to know, and read SQL, which is used extensively in work and institutional environments.\r\nWhat‚Äôs with this lazy query / ?? we‚Äôre seeing?\r\nYou might have noticed that our pipelines have a:\r\nSource: table [?? x 5] OR\r\nSource: lazy query [?? x 4]\r\nin the output results.\r\nWhy is this?\r\nBehind the scenes the dplyr code we write, gets converted to SQL (the particular dialect of the DB we‚Äôre connecting to).\r\nThe SQL is executed directly on the DB. I.e. the data is not first brought into R and manipulated in R. Instead we send the query to the DB, and the DB does the computation.\r\nWhen we use a dplyr pipeline to execute a query on the DB, the DB does the computation and sends us back a glimpse of the executed end result.\r\nIt is for this reason, we see the ?? - we‚Äôre being told ‚ÄúHey, I executed this query (your pipeline converted to SQL) on the DB at connection con, and here‚Äôs a snippet of the output, but I did not get the meta-info on how many rows were produced, I just know that I got x_number of columns in the output.‚Äù\r\nWe will see in the next part of the tutorial how to get the info into R, and understand how many rows were produced etc.\r\nDone? Remember to disconnect!\r\nGood housekeeping means always remembering to disconnect once you‚Äôre done.\r\n\r\n\r\ndbDisconnect(con) # closes our DB connection\r\n\r\n\r\n\r\nTo see that is indeed the case let‚Äôs see if we can use the connection further ‚Ä¶\r\n\r\n\r\ndbListTables(con)\r\n\r\n\r\nError: Invalid or closed connection\r\n\r\nSlides\r\nIf you‚Äôd like to dive in please check out the slides, and the project on GitHub.\r\n\r\n\r\n\r\n\r\n\r\n\r\nfitvids('.shareagain', {players: 'iframe'});\r\n\r\nStill to come\r\nMore dplyr, for example joining tables.\r\nGetting the data into R.\r\nAcknowledgements\r\nSlide inspiration, as well as some of the background pictures are from Dr.¬†Alison Hill.\r\nThe Great British Bake Off data from Dr.¬†Alison Hill.\r\nEdgar Ruiz‚Äôs database work, and teachings.\r\n\r\n\r\n\r\n",
    "preview": "posts/2020-12-12-using-the-tidyverse-with-databases/data2-unsplash.jpg",
    "last_modified": "2020-12-15T00:46:20+02:00",
    "input_file": {}
  }
]
